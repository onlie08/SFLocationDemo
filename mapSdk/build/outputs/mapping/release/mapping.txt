com.sfmap.api.mapcore.ArcDelegateImp -> com.sfmap.api.mapcore.a:
    com.sfmap.api.maps.model.LatLng start -> e
    com.sfmap.api.maps.model.LatLng passed -> f
    com.sfmap.api.maps.model.LatLng end -> g
    float width -> h
    int strokeColor -> i
    float zIndex -> j
    boolean visible -> k
    java.lang.String id -> l
    com.sfmap.api.mapcore.IMapDelegate mapDelegate -> m
    float[] glPointArray -> n
    int[] pointArray -> o
    int pointArraySize -> p
    boolean p -> q
    double q -> r
    double r -> s
    double s -> t
    float alpha -> a
    float red_color -> b
    float green_color -> c
    float blue_color -> d
    24:54:void <init>(com.sfmap.api.mapcore.IMapDelegate) -> <init>
    58:58:boolean a() -> a
    64:66:void remove() -> b
    71:74:java.lang.String getId() -> c
    80:83:void setZIndex(float) -> a
    88:88:float getZIndex() -> d
    94:96:void setVisible(boolean) -> a
    101:101:boolean isVisible() -> e
    107:111:boolean equals(com.sfmap.api.mapcore.IOverlayDelegateDecode) -> a
    117:117:int hashCodeRemote() -> f
    123:233:void calMapFPoint() -> g
    237:245:com.sfmap.mapcore.FPoint a(com.sfmap.mapcore.MapProjection,double,double,double) -> a
    250:259:com.sfmap.mapcore.IPoint aaaaa(com.sfmap.mapcore.MapProjection,double,double,double) -> b
    264:268:boolean l() -> l
    273:305:com.sfmap.mapcore.DPoint m() -> m
    310:324:double a(double,double,double,double) -> a
    329:342:void insert1(int,int,int,int,java.util.List) -> a
    345:345:long getDisSquare(long,long,long,long) -> a
    353:377:void draw(javax.microedition.khronos.opengles.GL10) -> a
    382:384:void setStrokeWidth(float) -> b
    389:389:float getStrokeWidth() -> h
    395:401:void setStrokeColor(int) -> a
    406:406:int getStrokeColor() -> i
    413:423:void destroy() -> j
    427:427:boolean checkInBounds() -> k
    432:433:void setStart(com.sfmap.api.maps.model.LatLng) -> a
    437:438:void setPassed(com.sfmap.api.maps.model.LatLng) -> b
    442:443:void setEnd(com.sfmap.api.maps.model.LatLng) -> c
com.sfmap.api.mapcore.AutoTestConfig -> com.sfmap.api.mapcore.b:
    int a -> e
    int ZoomControllerViewId -> a
    int ScaleControlsViewId -> b
    int MyLocationViewId -> c
    int CompassViewId -> d
    5:9:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.CameraAnimatorDecode -> com.sfmap.api.mapcore.c:
    int mMode -> a
    int mStartX -> b
    int mStartY -> c
    float mStartZ -> d
    float mStartBearing -> e
    float mStartTilt -> f
    int mFinalX -> g
    int mFinalY -> h
    float mFinalZ -> i
    float mFinalBearing -> j
    float mFinalTilt -> k
    int mMinX -> l
    int mMaxX -> m
    int mMinY -> n
    int mMaxY -> o
    int mCurrX -> p
    int mCurrY -> q
    float mCurrZ -> r
    float mCurrBearing -> s
    float mCurrTilt -> t
    long mStartTime -> u
    long mDuration -> v
    float mDurationReciprocal -> w
    float mDeltaX -> x
    float mDeltaY -> y
    float mDeltaZ -> z
    float mDeltaBearing -> A
    float mDeltaTilt -> B
    boolean mFinished -> C
    android.view.animation.Interpolator mInterpolator -> D
    boolean mFlywheel -> E
    float mVelocity -> F
    float mCurrVelocity -> G
    int mDistance -> H
    float mFlingFriction -> I
    float DECELERATION_RATE -> J
    float[] SPLINE_POSITION -> K
    float[] SPLINE_TIME -> L
    float mDeceleration -> M
    float N -> N
    float O -> O
    boolean P -> P
    float sViscousFluidScale -> Q
    float sViscousFluidNormalize -> R
    124:125:void <init>(android.content.Context) -> <init>
    129:132:void <init>(android.content.Context,android.view.animation.Interpolator) -> <init>
    47:144:void <init>(android.content.Context,android.view.animation.Interpolator,boolean) -> <init>
    148:149:void setInterpolator(android.view.animation.Interpolator) -> a
    153:153:float b(float) -> b
    164:164:boolean isFinished() -> a
    174:175:void forceFinished(boolean) -> a
    179:179:int getCurrX() -> b
    184:184:int getCurrY() -> c
    189:189:float getCurrZ() -> d
    194:194:float getCurrBearing() -> e
    199:199:float getCurrTilt() -> f
    209:209:float getCurrVelocity() -> g
    213:275:boolean computeScrollOffset() -> h
    295:315:void startChangeCamera(int,int,float,float,float,int,int,float,float,float,long) -> a
    342:393:void fling(int,int,int,int,int,int,int,int) -> a
    397:397:double c(float) -> c
    402:404:int getSplineFlingDuration(float) -> d
    409:412:double getSplineFlingDistance(float) -> e
    417:429:float viscousFluid(float) -> a
    434:434:int timePassed() -> i
    439:439:int getMode() -> j
    444:445:void b(boolean) -> b
    449:449:boolean k() -> k
    48:118:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.CameraUpdateFactoryDelegate -> com.sfmap.api.mapcore.d:
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type nowType -> a
    float xPixel -> b
    float yPixel -> c
    float zoom -> d
    float amount -> e
    float tilt -> f
    float bearing -> g
    com.sfmap.api.maps.model.CameraPosition h -> h
    com.sfmap.api.maps.model.LatLngBounds bounds -> i
    int padding -> j
    int width -> k
    int height -> l
    android.graphics.Point focus -> m
    boolean n -> n
    com.sfmap.mapcore.IPoint geoPoint -> o
    boolean isChangeFinished -> p
    9:26:void <init>() -> <init>
    30:31:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate newInstance() -> a
    36:38:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate zoomIn() -> b
    43:45:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate zoomOut() -> c
    50:54:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate scrollBy(float,float) -> a
    59:62:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate zoomTo(float) -> a
    68:68:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate b(float) -> b
    73:77:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate zoomBy(float,android.graphics.Point) -> a
    82:85:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate newCameraPosition(com.sfmap.api.maps.model.CameraPosition) -> a
    90:93:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate changeGeoCenter(com.sfmap.mapcore.IPoint) -> a
    98:101:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate changeTilt(float) -> c
    106:109:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate changeBearing(float) -> d
    114:118:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate changeBearingGeoCenter(float,com.sfmap.mapcore.IPoint) -> a
    123:124:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate a(com.sfmap.api.maps.model.LatLng) -> a
    129:130:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate a(com.sfmap.api.maps.model.LatLng,float) -> a
    135:136:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate a(com.sfmap.api.maps.model.LatLng,float,float,float) -> a
    141:147:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate changeGeoCenterZoomTiltBearing(com.sfmap.mapcore.IPoint,float,float,float) -> a
    152:156:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate newLatLngBounds(com.sfmap.api.maps.model.LatLngBounds,int) -> a
    161:167:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate newLatLngBoundsWithSize(com.sfmap.api.maps.model.LatLngBounds,int,int,int) -> a
com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type -> com.sfmap.api.mapcore.d$a:
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type none -> a
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type zoomIn -> b
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type changeCenter -> c
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type changeTilt -> d
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type changeBearing -> e
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type changeBearingGeoCenter -> f
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type changeGeoCenterZoom -> g
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type zoomOut -> h
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type zoomTo -> i
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type zoomBy -> j
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type scrollBy -> k
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type newCameraPosition -> l
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type newLatLngBounds -> m
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type newLatLngBoundsWithSize -> n
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type changeGeoCenterZoomTiltBearing -> o
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type[] $VALUES -> p
    170:170:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type[] values() -> values
    170:170:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate$Type valueOf(java.lang.String) -> valueOf
    170:170:void <init>(java.lang.String,int) -> <init>
    170:190:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.CircleDelegateImp -> com.sfmap.api.mapcore.e:
    com.sfmap.api.maps.model.LatLng center -> a
    double radius -> b
    float strokeWidth -> c
    int strokeColor -> d
    int fillColor -> e
    float zIndex -> f
    boolean visible -> g
    java.lang.String sid -> h
    com.sfmap.api.mapcore.IMapDelegate mapDelegate -> i
    java.nio.FloatBuffer floatBuffer -> j
    int pointSize -> k
    boolean l -> l
    float m -> m
    int n -> n
    int o -> o
    19:44:void <init>(com.sfmap.api.mapcore.IMapDelegate) -> <init>
    48:48:boolean a() -> a
    54:56:void remove() -> b
    61:64:java.lang.String getId() -> c
    70:73:void setZIndex(float) -> a
    78:78:float getZIndex() -> d
    84:86:void setVisible(boolean) -> a
    91:91:boolean isVisible() -> e
    97:101:boolean equals(com.sfmap.api.mapcore.IOverlayDelegateDecode) -> a
    107:107:int hashCodeRemote() -> f
    117:149:void calMapFPoint() -> g
    154:164:void draw(javax.microedition.khronos.opengles.GL10) -> a
    168:173:void h() -> h
    178:180:void setCenter(com.sfmap.api.maps.model.LatLng) -> a
    185:185:com.sfmap.api.maps.model.LatLng getCenter() -> i
    191:193:void setRadius(double) -> a
    198:198:double getRadius() -> l
    204:206:void setStrokeWidth(float) -> b
    211:211:float getStrokeWidth() -> m
    217:218:void setStrokeColor(int) -> a
    223:223:int getStrokeColor() -> n
    229:231:void setFillColor(int) -> b
    236:236:int getFillColor() -> o
    245:245:float b(double) -> b
    250:250:double MMapPointsPerMeter(double) -> c
    257:270:void destroy() -> j
    275:278:boolean contains(com.sfmap.api.maps.model.LatLng) -> b
    283:283:boolean checkInBounds() -> k
    239:241:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.CompassViewDecode -> com.sfmap.api.mapcore.f:
    android.graphics.Bitmap mCompass -> a
    android.graphics.Bitmap mCompass_pressed -> b
    android.graphics.Bitmap c -> c
    android.widget.ImageView mCompassView -> d
    com.sfmap.api.mapcore.IMapDelegate mMap -> e
    android.graphics.Bitmap mCustomBitmap -> f
    33:52:void a() -> a
    61:124:void <init>(android.content.Context,com.sfmap.api.mapcore.MapMessageQueueDecode,com.sfmap.api.mapcore.IMapDelegate) -> <init>
    126:132:void setmCompassViewBitmap(android.graphics.Bitmap) -> a
    138:155:void invalidateAngle() -> b
com.sfmap.api.mapcore.CompassViewDecode$1 -> com.sfmap.api.mapcore.f$1:
    com.sfmap.api.mapcore.CompassViewDecode this$0 -> a
    85:85:void <init>(com.sfmap.api.mapcore.CompassViewDecode) -> <init>
    90:114:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.sfmap.api.mapcore.ConfigableConstDecode -> com.sfmap.api.mapcore.g:
    float Resolution -> a
    java.lang.String product -> b
    java.lang.String packageName -> c
    java.lang.String userAgent -> d
    com.sfmap.api.mapcore.ConfigableConstDecode$BuildType NowBuildType -> e
    com.sfmap.api.mapcore.util.SDKInfo sdkInfo -> f
    13:17:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.ConfigableConstDecode$BuildType -> com.sfmap.api.mapcore.g$a:
    com.sfmap.api.mapcore.ConfigableConstDecode$BuildType PUBLIC -> a
    com.sfmap.api.mapcore.ConfigableConstDecode$BuildType OTHER -> b
    com.sfmap.api.mapcore.ConfigableConstDecode$BuildType[] $VALUES -> c
    8:8:com.sfmap.api.mapcore.ConfigableConstDecode$BuildType[] values() -> values
    8:8:com.sfmap.api.mapcore.ConfigableConstDecode$BuildType valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    8:10:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.GLESUtility -> com.sfmap.api.mapcore.h:
    11:56:void c(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> b
    65:68:void a(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,java.nio.FloatBuffer,int,int) -> a
    72:75:void drawCircle(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> a
com.sfmap.api.mapcore.GLOverlayLayerDecode -> com.sfmap.api.mapcore.i:
    com.sfmap.api.mapcore.IMapDelegate mapDelegate -> a
    int index -> c
    java.util.concurrent.CopyOnWriteArrayList overlayList -> d
    java.util.concurrent.CopyOnWriteArrayList TexsureIdList -> e
    android.os.Handler f -> f
    com.sfmap.api.mapcore.GLOverlayLayerDecode$a b -> b
    java.lang.Runnable g -> g
    30:31:java.lang.String CreateId(java.lang.String) -> a
    34:61:void <init>(com.sfmap.api.mapcore.IMapDelegate) -> <init>
    67:87:void clear(java.lang.String) -> b
    93:106:void destory() -> a
    111:116:com.sfmap.api.mapcore.IOverlayDelegateDecode d(java.lang.String) -> d
    122:126:void add(com.sfmap.api.mapcore.IOverlayDelegateDecode) -> a
    131:135:boolean removeOverlay(java.lang.String) -> c
    140:142:void b() -> b
    146:190:void onDrawGL(javax.microedition.khronos.opengles.GL10,boolean,int) -> a
    194:197:void a(java.lang.Integer) -> a
    201:215:void calMapFPoint() -> c
    219:224:boolean d() -> d
    230:352:com.sfmap.api.mapcore.IOverlayDelegateDecode polylineClick(com.sfmap.api.maps.model.LatLng) -> a
    362:365:boolean IsScreenInRect(android.graphics.Rect,android.graphics.Rect) -> a
    371:390:int pt2line_dist(int,int,int,int,int,int) -> a
    23:23:java.util.concurrent.CopyOnWriteArrayList access$000(com.sfmap.api.mapcore.GLOverlayLayerDecode) -> a
    23:23:java.util.concurrent.CopyOnWriteArrayList access$002(com.sfmap.api.mapcore.GLOverlayLayerDecode,java.util.concurrent.CopyOnWriteArrayList) -> a
    26:26:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.GLOverlayLayerDecode$1 -> com.sfmap.api.mapcore.i$1:
    com.sfmap.api.mapcore.GLOverlayLayerDecode this$0 -> a
    39:39:void <init>(com.sfmap.api.mapcore.GLOverlayLayerDecode) -> <init>
    44:55:void run() -> run
com.sfmap.api.mapcore.GLOverlayLayerDecode$a -> com.sfmap.api.mapcore.i$a:
    393:393:void <init>() -> <init>
    398:417:int compare(java.lang.Object,java.lang.Object) -> compare
com.sfmap.api.mapcore.GLTextureView -> com.sfmap.api.mapcore.GLTextureView:
    com.sfmap.api.mapcore.GLTextureView$GLThreadManager glThreadManager -> a
    java.lang.ref.WeakReference weakReference -> b
    com.sfmap.api.mapcore.GLTextureView$GLThread glThread -> c
    android.opengl.GLSurfaceView$Renderer render -> d
    boolean separateWindow -> e
    com.sfmap.api.mapcore.GLTextureView$IEGLConfig ieglConfig -> f
    com.sfmap.api.mapcore.GLTextureView$IEGLContext ieglContext -> g
    com.sfmap.api.mapcore.GLTextureView$IGLSurfaceView iglSurfaceView -> h
    com.sfmap.api.mapcore.GLTextureView$k i -> i
    int j -> j
    int k -> k
    boolean l -> l
    31:972:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:43:void finalize() -> finalize
    46:47:void setSurfaceTextureListener() -> b
    51:64:void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    67:68:void setRenderMode(int) -> setRenderMode
    71:72:void requestRender() -> requestRender
    76:77:void queueEvent(java.lang.Runnable) -> queueEvent
    80:93:void onAttachedToWindow() -> onAttachedToWindow
    96:101:void onDetachedFromWindow() -> onDetachedFromWindow
    891:894:void checkGLThread() -> c
    985:986:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    989:990:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    994:995:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    997:997:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    1000:1002:void onLayout(boolean,int,int,int,int) -> onLayout
    24:24:int access$200(com.sfmap.api.mapcore.GLTextureView) -> a
    24:24:com.sfmap.api.mapcore.GLTextureView$IEGLConfig access$300(com.sfmap.api.mapcore.GLTextureView) -> b
    24:24:com.sfmap.api.mapcore.GLTextureView$IEGLContext access$400(com.sfmap.api.mapcore.GLTextureView) -> c
    24:24:com.sfmap.api.mapcore.GLTextureView$IGLSurfaceView access$500(com.sfmap.api.mapcore.GLTextureView) -> d
    24:24:com.sfmap.api.mapcore.GLTextureView$k access$600(com.sfmap.api.mapcore.GLTextureView) -> e
    24:24:int access$700(com.sfmap.api.mapcore.GLTextureView) -> f
    24:24:com.sfmap.api.mapcore.GLTextureView$GLThreadManager access$800() -> a
    24:24:boolean access$900(com.sfmap.api.mapcore.GLTextureView) -> g
    24:24:android.opengl.GLSurfaceView$Renderer access$1000(com.sfmap.api.mapcore.GLTextureView) -> h
    971:971:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.GLTextureView$1 -> com.sfmap.api.mapcore.GLTextureView$1:
com.sfmap.api.mapcore.GLTextureView$EGLConfigImp -> com.sfmap.api.mapcore.GLTextureView$a:
    com.sfmap.api.mapcore.GLTextureView this$0 -> a
    261:263:void <init>(com.sfmap.api.mapcore.GLTextureView,boolean) -> <init>
com.sfmap.api.mapcore.GLTextureView$EGLConfigManager -> com.sfmap.api.mapcore.GLTextureView$b:
    int[] value -> a
    int red -> b
    int green -> c
    int blue -> d
    int alpha -> e
    int depth -> f
    int stencil -> g
    com.sfmap.api.mapcore.GLTextureView this$0 -> h
    219:228:void <init>(com.sfmap.api.mapcore.GLTextureView,int,int,int,int,int,int) -> <init>
    231:249:javax.microedition.khronos.egl.EGLConfig getEGLConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    253:256:int initAttribs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
com.sfmap.api.mapcore.GLTextureView$EGLHelper -> com.sfmap.api.mapcore.GLTextureView$c:
    java.lang.ref.WeakReference glTextureViewWeakReference -> f
    javax.microedition.khronos.egl.EGL10 egl10 -> a
    javax.microedition.khronos.egl.EGLDisplay eglDisplay -> b
    javax.microedition.khronos.egl.EGLSurface eglSurface -> c
    javax.microedition.khronos.egl.EGLConfig eglConfig -> d
    javax.microedition.khronos.egl.EGLContext eglContext -> e
    274:276:void <init>(java.lang.ref.WeakReference) -> <init>
    279:303:void init() -> a
    306:337:boolean initHelper() -> b
    341:367:javax.microedition.khronos.opengles.GL getGL() -> c
    371:374:int d() -> d
    378:379:void destory() -> e
    382:390:void destrorySurface() -> g
    393:405:void f() -> f
    408:409:void thorwError(java.lang.String) -> a
    412:413:void thorwError(java.lang.String,int) -> a
    417:418:void errorInfo(java.lang.String,java.lang.String,int) -> a
    421:421:java.lang.String errorInfo(java.lang.String,int) -> b
com.sfmap.api.mapcore.GLTextureView$GLSurfaceViewImp -> com.sfmap.api.mapcore.GLTextureView$d:
    140:140:void <init>() -> <init>
    142:148:javax.microedition.khronos.egl.EGLSurface createEGLSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    152:153:void destrorySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
    140:140:void <init>(com.sfmap.api.mapcore.GLTextureView$1) -> <init>
com.sfmap.api.mapcore.GLTextureView$GLThread -> com.sfmap.api.mapcore.GLTextureView$e:
    boolean stopRender -> a
    boolean lock -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean addGLThread -> h
    boolean removeGLThead -> i
    boolean j -> j
    boolean k -> k
    int width -> l
    int height -> m
    int n -> n
    boolean o -> o
    boolean p -> p
    java.util.ArrayList runnableArrayList -> q
    boolean r -> r
    com.sfmap.api.mapcore.GLTextureView$EGLHelper eglHelper -> s
    java.lang.ref.WeakReference t -> t
    443:856:void <init>(java.lang.ref.WeakReference) -> <init>
    452:466:void run() -> run
    469:473:void release() -> h
    477:483:void addGLThread() -> i
    486:703:void drawFrame() -> j
    706:706:boolean a() -> a
    710:710:boolean k() -> k
    714:724:void renderMode(int) -> a
    740:742:int b() -> b
    747:752:void requestRender() -> c
    755:771:void onSurfaceTextureAvailable() -> d
    775:792:void onSurfaceTextureDestroyed() -> e
    796:814:void onSurfaceTextureSizeChanged(int,int) -> a
    818:834:void f() -> f
    837:840:void g() -> g
    843:853:void a(java.lang.Runnable) -> a
    425:425:boolean access$1102(com.sfmap.api.mapcore.GLTextureView$GLThread,boolean) -> a
com.sfmap.api.mapcore.GLTextureView$GLThreadManager -> com.sfmap.api.mapcore.GLTextureView$f:
    boolean b -> a
    int c -> b
    boolean d -> c
    boolean e -> d
    boolean f -> e
    com.sfmap.api.mapcore.GLTextureView$GLThread glThread -> f
    896:896:void <init>() -> <init>
    905:910:void lock(com.sfmap.api.mapcore.GLTextureView$GLThread) -> a
    913:925:boolean checkGLThread(com.sfmap.api.mapcore.GLTextureView$GLThread) -> b
    929:933:void c(com.sfmap.api.mapcore.GLTextureView$GLThread) -> c
    936:936:boolean a() -> a
    940:941:boolean b() -> b
    946:957:void supportHardwareSpeed(javax.microedition.khronos.opengles.GL10) -> a
    960:967:void c() -> c
    896:896:void <init>(com.sfmap.api.mapcore.GLTextureView$1) -> <init>
com.sfmap.api.mapcore.GLTextureView$IEGLConfig -> com.sfmap.api.mapcore.GLTextureView$g:
    javax.microedition.khronos.egl.EGLConfig getEGLConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> a
com.sfmap.api.mapcore.GLTextureView$IEGLConfigImg -> com.sfmap.api.mapcore.GLTextureView$h:
    int[] a -> i
    com.sfmap.api.mapcore.GLTextureView this$0 -> j
    164:166:void <init>(com.sfmap.api.mapcore.GLTextureView,int[]) -> <init>
    169:185:javax.microedition.khronos.egl.EGLConfig getEGLConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> a
    javax.microedition.khronos.egl.EGLConfig getEGLConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    192:206:int[] a(int[]) -> a
com.sfmap.api.mapcore.GLTextureView$IEGLContext -> com.sfmap.api.mapcore.GLTextureView$i:
    javax.microedition.khronos.egl.EGLContext getEGLContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void setEGLContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.sfmap.api.mapcore.GLTextureView$IEGLContextImp -> com.sfmap.api.mapcore.GLTextureView$j:
    int b -> b
    com.sfmap.api.mapcore.GLTextureView this$0 -> a
    112:113:void <init>(com.sfmap.api.mapcore.GLTextureView) -> <init>
    117:122:javax.microedition.khronos.egl.EGLContext getEGLContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    126:132:void setEGLContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
    112:112:void <init>(com.sfmap.api.mapcore.GLTextureView,com.sfmap.api.mapcore.GLTextureView$1) -> <init>
com.sfmap.api.mapcore.GLTextureView$IGLSurfaceView -> com.sfmap.api.mapcore.GLTextureView$k:
    javax.microedition.khronos.egl.EGLSurface createEGLSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void destrorySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
com.sfmap.api.mapcore.GLTextureView$WriterLog -> com.sfmap.api.mapcore.GLTextureView$l:
    java.lang.StringBuilder sb -> a
    861:862:void <init>() -> <init>
    864:865:void close() -> close
    868:869:void flush() -> flush
    872:881:void write(char[],int,int) -> write
    884:887:void removeStr() -> a
com.sfmap.api.mapcore.GLTextureView$k -> com.sfmap.api.mapcore.GLTextureView$m:
    javax.microedition.khronos.opengles.GL a(javax.microedition.khronos.opengles.GL) -> a
com.sfmap.api.mapcore.GroundOverlayDelegateImpDecode -> com.sfmap.api.mapcore.j:
    com.sfmap.api.mapcore.IMapDelegate mapDelegate -> a
    com.sfmap.api.maps.model.BitmapDescriptor bitmapDescriptor -> b
    com.sfmap.api.maps.model.LatLng c -> c
    float d -> d
    float e -> e
    com.sfmap.api.maps.model.LatLngBounds bounds -> f
    float bearing -> g
    float zIndex -> h
    boolean visible -> i
    float j -> j
    float k -> k
    float l -> l
    java.lang.String sid -> m
    java.nio.FloatBuffer n -> n
    java.nio.FloatBuffer o -> o
    int p -> p
    boolean q -> q
    boolean r -> r
    28:51:void <init>(com.sfmap.api.mapcore.IMapDelegate) -> <init>
    56:59:void remove() -> b
    64:67:java.lang.String getId() -> c
    73:76:void setZIndex(float) -> a
    81:81:float getZIndex() -> d
    87:89:void setVisible(boolean) -> a
    94:94:boolean isVisible() -> e
    100:104:boolean equals(com.sfmap.api.mapcore.IOverlayDelegateDecode) -> a
    110:110:int hashCodeRemote() -> f
    116:124:void calMapFPoint() -> g
    128:137:void p() -> p
    141:154:void q() -> q
    158:211:void r() -> r
    215:222:void a(com.sfmap.mapcore.DPoint,double,double,double,double,com.sfmap.mapcore.FPoint) -> a
    226:237:void s() -> s
    242:274:void draw(javax.microedition.khronos.opengles.GL10) -> a
    278:300:void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    306:336:void destroy() -> j
    340:347:boolean a() -> a
    353:356:void setPosition(com.sfmap.api.maps.model.LatLng) -> a
    361:361:com.sfmap.api.maps.model.LatLng getPosition() -> h
    367:380:void setDimensions(float) -> b
    385:400:void setDimensions(float,float) -> a
    405:405:float getWidth() -> i
    411:411:float getHeight() -> l
    417:420:void setPositionFromBounds(com.sfmap.api.maps.model.LatLngBounds) -> a
    425:425:com.sfmap.api.maps.model.LatLngBounds getBounds() -> m
    431:443:void setBearing(float) -> c
    448:448:float getBearing() -> n
    454:458:void setTransparency(float) -> d
    463:463:float getTransparency() -> o
    469:475:void setImage(com.sfmap.api.maps.model.BitmapDescriptor) -> a
    480:483:void setAnchor(float,float) -> b
    487:487:boolean checkInBounds() -> k
com.sfmap.api.mapcore.IArcDelegateDecode -> com.sfmap.api.mapcore.k:
    void setStrokeWidth(float) -> b
    float getStrokeWidth() -> h
    void setStrokeColor(int) -> a
    int getStrokeColor() -> i
com.sfmap.api.mapcore.ICircleDelegate -> com.sfmap.api.mapcore.l:
    void setCenter(com.sfmap.api.maps.model.LatLng) -> a
    com.sfmap.api.maps.model.LatLng getCenter() -> i
    void setRadius(double) -> a
    double getRadius() -> l
    void setStrokeWidth(float) -> b
    float getStrokeWidth() -> m
    void setStrokeColor(int) -> a
    int getStrokeColor() -> n
    void setFillColor(int) -> b
    int getFillColor() -> o
    boolean contains(com.sfmap.api.maps.model.LatLng) -> b
com.sfmap.api.mapcore.IGLSurfaceView -> com.sfmap.api.mapcore.m:
    void setBackgroundColor(int) -> setBackgroundColor
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void setRenderMode(int) -> setRenderMode
    void setZOrderOnTop(boolean) -> setZOrderOnTop
    void queueEvent(java.lang.Runnable) -> queueEvent
    boolean isEnabled() -> isEnabled
    void setVisibility(int) -> setVisibility
    void requestRender() -> requestRender
com.sfmap.api.mapcore.IGroundOverlayDelegateDecode -> com.sfmap.api.mapcore.n:
    void setPosition(com.sfmap.api.maps.model.LatLng) -> a
    com.sfmap.api.maps.model.LatLng getPosition() -> h
    void setDimensions(float) -> b
    void setDimensions(float,float) -> a
    float getWidth() -> i
    float getHeight() -> l
    void setPositionFromBounds(com.sfmap.api.maps.model.LatLngBounds) -> a
    com.sfmap.api.maps.model.LatLngBounds getBounds() -> m
    void setBearing(float) -> c
    float getBearing() -> n
    void setTransparency(float) -> d
    float getTransparency() -> o
    void setImage(com.sfmap.api.maps.model.BitmapDescriptor) -> a
com.sfmap.api.mapcore.IMapDelegate -> com.sfmap.api.mapcore.o:
    void addCustomRenderer(com.sfmap.api.maps.CustomRenderer) -> a
    void removeCustomRenderer(com.sfmap.api.maps.CustomRenderer) -> b
    void clearCustomRenderer() -> a
    void setCustomRenderer(com.sfmap.api.maps.CustomRenderer) -> c
    void drawCustomRenderTime(int) -> a
    com.sfmap.mapcore.MapProjection getMapProjection() -> b
    int getMapWidth() -> c
    int getMapHeight() -> d
    int getLineTextureID() -> e
    int getDottedLineTextureID() -> f
    android.view.View getView() -> g
    android.graphics.Rect getRect() -> h
    void set2DMapRotateEnable(boolean) -> a
    void setZOrderOnTop_(boolean) -> b
    void showMyLocationOverlay(android.location.Location) -> a
    boolean removeGLOverlay(java.lang.String) -> a
    void M() -> i
    void latlon2Geo(double,double,com.sfmap.mapcore.IPoint) -> a
    void geo2Map(int,int,com.sfmap.mapcore.FPoint) -> a
    void geo2Latlng(int,int,com.sfmap.mapcore.DPoint) -> a
    float getZoomLevel() -> j
    int getTexsureId() -> k
    void deleteTexsureId(int) -> b
    com.sfmap.api.maps.model.CameraPosition getCameraPosition() -> l
    void setMaxZoomLevel(float) -> a
    void setMinZoomLevel(float) -> b
    float getMaxZoomLevel() -> m
    float getMinZoomLevel() -> n
    void moveCamera(com.sfmap.api.mapcore.CameraUpdateFactoryDelegate) -> a
    void animateCamera(com.sfmap.api.mapcore.CameraUpdateFactoryDelegate) -> b
    void animateCamera(com.sfmap.api.mapcore.CameraUpdateFactoryDelegate,com.sfmap.api.maps.MapController$CancelableCallback) -> a
    void animateCameraWithDurationAndCallback(com.sfmap.api.mapcore.CameraUpdateFactoryDelegate,long,com.sfmap.api.maps.MapController$CancelableCallback) -> a
    void stopAnimation() -> o
    com.sfmap.api.mapcore.IPolylineDelegateDecode addPolyline(com.sfmap.api.maps.model.PolylineOptions) -> a
    com.sfmap.api.mapcore.ICircleDelegate addCircle(com.sfmap.api.maps.model.CircleOptions) -> a
    com.sfmap.api.mapcore.IPolygonDelegate addPolygon(com.sfmap.api.maps.model.PolygonOptions) -> a
    com.sfmap.api.mapcore.IGroundOverlayDelegateDecode addGroundOverlay(com.sfmap.api.maps.model.GroundOverlayOptions) -> a
    com.sfmap.api.maps.model.Marker addMarker(com.sfmap.api.maps.model.MarkerOptions) -> a
    com.sfmap.api.maps.model.Text addText(com.sfmap.api.maps.model.TextOptions) -> a
    com.sfmap.api.maps.model.TileOverlay addTileOverlay(com.sfmap.api.maps.model.TileOverlayOptions) -> a
    void clear() -> p
    void clear(boolean) -> c
    int getMapType() -> q
    void setMapType(int) -> c
    boolean isTrafficEnabled() -> r
    boolean isCellZonesEnabled() -> s
    void setTrafficEnabled(boolean) -> d
    void setParameter(java.lang.String,boolean) -> a
    boolean isMyLocationEnabled() -> t
    void setMyLocationEnabled(boolean) -> e
    void setLoadOfflineData(boolean) -> f
    void setMyLocationStyle(com.sfmap.api.maps.model.MyLocationStyle) -> a
    void setMyLocationType(int) -> d
    void setCustomType() -> u
    void unregisterSensorListener() -> v
    android.location.Location getMyLocation() -> w
    void setLocationSource(com.sfmap.api.maps.LocationSource) -> a
    com.sfmap.api.mapcore.IUiSettingsDelegate getUiSettings() -> x
    com.sfmap.api.mapcore.IProjectionDelegate getProjection() -> y
    void setOnCameraChangeListener(com.sfmap.api.maps.MapController$OnCameraChangeListener) -> a
    void setOnMapLevelChangeListener(com.sfmap.api.maps.MapController$OnMapLevelChangeListener) -> a
    void setOnMapClickListener(com.sfmap.api.maps.MapController$OnMapClickListener) -> a
    void setOnMapTouchListener(com.sfmap.api.maps.MapController$OnMapTouchListener) -> a
    void setOnMapLongClickListener(com.sfmap.api.maps.MapController$OnMapLongClickListener) -> a
    void setOnMarkerClickListener(com.sfmap.api.maps.MapController$OnMarkerClickListener) -> a
    void setOnPolylineClickListener(com.sfmap.api.maps.MapController$OnPolylineClickListener) -> a
    void setOnMarkerDragListener(com.sfmap.api.maps.MapController$OnMarkerDragListener) -> a
    void setOnMapLoadedListener(com.sfmap.api.maps.MapController$OnMapLoadedListener) -> a
    void setOnInfoWindowClickListener(com.sfmap.api.maps.MapController$OnInfoWindowClickListener) -> a
    void setInfoWindowAdapter(com.sfmap.api.maps.MapController$InfoWindowAdapter) -> a
    void showInfoWindow(com.sfmap.api.mapcore.IMarkerDelegate) -> a
    void hiddenInfoWindowShown() -> z
    void getLatLng2Map(double,double,com.sfmap.mapcore.FPoint) -> a
    void getPixel2LatLng(int,int,com.sfmap.mapcore.DPoint) -> b
    void getLatLng2Pixel(double,double,com.sfmap.mapcore.IPoint) -> b
    void getPixel2Geo(int,int,com.sfmap.mapcore.IPoint) -> a
    void redrawInfoWindow() -> A
    void setOnMyLocationChangeListener(com.sfmap.api.maps.MapController$OnMyLocationChangeListener) -> a
    void showZoomControlsEnabled(boolean) -> g
    void showMyLocationButtonEnabled(boolean) -> h
    void showCompassEnabled(boolean) -> i
    void showScaleEnabled(boolean) -> j
    void destroy() -> B
    void a(com.sfmap.api.maps.MapController$OnMapScreenShotListener) -> a
    void setLogoPosition(int) -> e
    void setZoomPosition(int) -> f
    float getScalePerPixel() -> C
    com.sfmap.api.maps.model.LatLngBounds getMapBounds() -> D
    com.sfmap.api.maps.model.LatLngBounds a(com.sfmap.api.maps.model.LatLng,float) -> a
    void onResume() -> E
    void onPause() -> F
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setRunLowFrame(boolean) -> k
    void setMyTrafficStyle(int,int,int,int) -> a
    void setRotateAngle(float) -> c
    java.util.List getMapScreenMarkers() -> G
    void win2Map(int,int,com.sfmap.mapcore.FPoint) -> b
    void a(float,float,com.sfmap.mapcore.IPoint) -> a
    float getMapLenWithWin(int) -> g
    void N() -> H
    void setPointToCenter(int,int) -> a
    void setCompassViewPosition(int,int) -> b
    void setScaleViewPosition(int,int) -> c
    void setLogoViewPosition(int,int) -> d
    void setCompassViewBitmap(android.graphics.Bitmap) -> a
    void setLogoBitmap(android.graphics.Bitmap) -> b
    void setLocationViewBitmap(android.graphics.Bitmap[]) -> a
    com.sfmap.api.maps.model.CameraPosition getCameraPositionPrj_(boolean) -> l
    void setMapTextZIndex(int) -> h
    int getMapTextZIndex() -> I
    boolean R() -> J
    com.sfmap.api.mapcore.IArcDelegateDecode addArc(com.sfmap.api.maps.model.ArcOptions) -> a
    com.sfmap.api.mapcore.CameraAnimatorDecode S() -> K
    com.sfmap.api.mapcore.INavigateArrowDelegateDecode addNavigateArrow(com.sfmap.api.maps.model.NavigateArrowOptions) -> a
    java.util.ArrayList addMarkers(java.util.ArrayList,boolean) -> a
    void removecache() -> L
    void removecache(com.sfmap.api.maps.MapController$OnCacheRemoveListener) -> a
    void showMapText(boolean) -> m
    void setVisibility(int) -> i
    void setOnPOIClickListener(com.sfmap.api.maps.MapController$OnPOIClickListener) -> a
    void reloadMap() -> M
    void setMapCenter(com.sfmap.api.maps.model.LatLng) -> a
    void setMapStyleIconForPath(java.lang.String,java.lang.String) -> a
    void setMapStyleType(int) -> j
    void setGridUrlListener(com.sfmap.api.maps.MapController$GridUrlListener) -> a
    boolean getNeedToCenter() -> N
    void setNeedToCenter(boolean) -> n
    boolean isPOIByPoint(android.graphics.Point) -> a
com.sfmap.api.mapcore.IMapFragmentDelegate -> com.sfmap.api.mapcore.p:
    com.sfmap.api.mapcore.IMapDelegate getMapDelegate() -> a
    void onInflate(android.app.Activity,com.sfmap.api.maps.MapOptions,android.os.Bundle) -> a
    void setContext(android.content.Context) -> a
    void setMapOptions(com.sfmap.api.maps.MapOptions) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> b
    void onPause() -> c
    void onDestroyView() -> d
    void onDestroy() -> e
    void onLowMemory() -> f
    void onSaveInstanceState(android.os.Bundle) -> b
    void setVisible(int) -> a
com.sfmap.api.mapcore.IMarkerDelegate -> com.sfmap.api.mapcore.q:
    boolean remove() -> a
    boolean c() -> b
    android.graphics.Rect getRect() -> c
    com.sfmap.api.maps.model.LatLng getPosition() -> d
    com.sfmap.mapcore.FPoint anchorUVoff() -> e
    com.sfmap.api.maps.model.LatLng g() -> f
    java.lang.String getId() -> g
    void setPosition(com.sfmap.api.maps.model.LatLng) -> a
    void title(java.lang.String) -> a
    java.lang.String getTitle() -> h
    void icon(com.sfmap.api.maps.model.BitmapDescriptor) -> a
    void setAnchor(float,float) -> a
    void setSnippet(java.lang.String) -> b
    java.lang.String getSnippet() -> i
    void a(boolean) -> a
    boolean isDraggable() -> j
    void showInfoWindow() -> k
    void hideInfoWindow() -> l
    boolean isInfoWindowShow() -> m
    void windowShowing(boolean) -> b
    void setVisible(boolean) -> c
    boolean isVisible() -> n
    void destroy() -> o
    boolean a(com.sfmap.api.mapcore.IMarkerDelegate) -> a
    int hashCode() -> hashCode
    void drawMarker(javax.microedition.khronos.opengles.GL10,com.sfmap.api.mapcore.IMapDelegate) -> a
    boolean calFPoint() -> p
    void setObject(java.lang.Object) -> a
    java.lang.Object getObject() -> q
    void setRotateAngle(float) -> a
    float getRotateAngle() -> r
    void setPeriod(int) -> a
    int getPeriod() -> s
    void setIcons(java.util.ArrayList) -> a
    java.util.ArrayList getIcons() -> t
    boolean x() -> u
    void realdestroy() -> v
    void setToTop() -> w
    void setFlat(boolean) -> d
    boolean isFlat() -> x
    int B() -> y
    int C() -> z
    int D() -> A
    int E() -> B
    void setPositionByPixels(int,int) -> a
    boolean F() -> C
    void setZIndex(float) -> b
    float getZIndex() -> D
    boolean isInScreen() -> E
    void setGeoPoint(com.sfmap.mapcore.IPoint) -> a
    com.sfmap.mapcore.IPoint getGeoPoint() -> F
com.sfmap.api.mapcore.INavigateArrowDelegateDecode -> com.sfmap.api.mapcore.r:
    void setWidth(float) -> b
    float getWidth() -> h
    void setTopColor(int) -> a
    void setSideColor(int) -> b
    int getTopColor() -> i
    int getSideColor() -> l
    void setPoints(java.util.List) -> a
    java.util.List getPoints() -> m
com.sfmap.api.mapcore.IOverlayDelegateDecode -> com.sfmap.api.mapcore.s:
    void remove() -> b
    java.lang.String getId() -> c
    void setZIndex(float) -> a
    float getZIndex() -> d
    void setVisible(boolean) -> a
    boolean isVisible() -> e
    boolean equals(com.sfmap.api.mapcore.IOverlayDelegateDecode) -> a
    int hashCodeRemote() -> f
    void calMapFPoint() -> g
    void draw(javax.microedition.khronos.opengles.GL10) -> a
    void destroy() -> j
    boolean a() -> a
    boolean checkInBounds() -> k
com.sfmap.api.mapcore.IPolygonDelegate -> com.sfmap.api.mapcore.t:
    void setStrokeWidth(float) -> b
    float getStrokeWidth() -> h
    void setFillColor(int) -> a
    int getFillColor() -> i
    void setStrokeColor(int) -> b
    void a(java.util.List) -> a
    java.util.List getPoints() -> l
    int getStrokeColor() -> m
    boolean contains(com.sfmap.api.maps.model.LatLng) -> a
com.sfmap.api.mapcore.IPolylineDelegateDecode -> com.sfmap.api.mapcore.u:
    void setWidth(float) -> b
    float getWidth() -> h
    void setColor(int) -> a
    int getColor() -> i
    void addPoint(com.sfmap.api.maps.model.LatLng) -> a
    void setPoints(java.util.List) -> a
    java.util.List getPoints() -> l
    boolean isGeodesic() -> m
    void geodesic(boolean) -> b
    void setDottedLine(boolean) -> c
    boolean isDottedLine() -> n
    com.sfmap.api.maps.model.LatLng getNearestLatLng(com.sfmap.api.maps.model.LatLng) -> b
    void setTransparency(float) -> c
com.sfmap.api.mapcore.IProjectionDelegate -> com.sfmap.api.mapcore.v:
    com.sfmap.api.maps.model.LatLng fromScreenLocation(android.graphics.Point) -> a
    android.graphics.Point toScreenLocation(com.sfmap.api.maps.model.LatLng) -> a
    android.graphics.PointF toMapLocation(com.sfmap.api.maps.model.LatLng) -> b
    com.sfmap.api.maps.model.VisibleRegion getVisibleRegion() -> a
    float toOpenGLWidth(int) -> a
    com.sfmap.api.maps.model.TileProjection fromBoundsToTile(com.sfmap.api.maps.model.LatLngBounds,int,int) -> a
    com.sfmap.api.maps.model.LatLngBounds getMapBounds(com.sfmap.api.maps.model.LatLng,float) -> a
com.sfmap.api.mapcore.IResourceProxyDecode -> com.sfmap.api.mapcore.w:
com.sfmap.api.mapcore.IResourceProxyDecode$bitmap -> com.sfmap.api.mapcore.w$a:
    com.sfmap.api.mapcore.IResourceProxyDecode$bitmap marker_color_default -> a
    com.sfmap.api.mapcore.IResourceProxyDecode$bitmap[] $VALUES -> b
    5:5:com.sfmap.api.mapcore.IResourceProxyDecode$bitmap[] values() -> values
    5:5:com.sfmap.api.mapcore.IResourceProxyDecode$bitmap valueOf(java.lang.String) -> valueOf
    5:5:void <init>(java.lang.String,int) -> <init>
    5:7:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.ITextDelegate -> com.sfmap.api.mapcore.x:
    void c(java.lang.String) -> c
    java.lang.String a() -> G
    void b(int) -> b
    int J() -> H
    void c(int) -> c
    int K() -> I
    void d(int) -> d
    int L() -> J
    void a(android.graphics.Typeface) -> a
    android.graphics.Typeface M() -> K
    void b(int,int) -> b
    int N() -> L
    int O() -> M
com.sfmap.api.mapcore.ITileOverlayDelegate -> com.sfmap.api.mapcore.y:
    void remove() -> a
    void clearTileCache() -> b
    java.lang.String getId() -> c
    void setZIndex(float) -> a
    float getZIndex() -> d
    void setVisible(boolean) -> a
    boolean isVisible() -> e
    boolean equalsRemote(com.sfmap.api.mapcore.ITileOverlayDelegate) -> a
    int hashCodeRemote() -> f
    void drawTiles(javax.microedition.khronos.opengles.GL10) -> a
    void refresh(boolean) -> b
    void onPause() -> g
    void onResume() -> h
    void onFling(boolean) -> c
com.sfmap.api.mapcore.IUiSettingsDelegate -> com.sfmap.api.mapcore.z:
    void setScaleControlsEnabled(boolean) -> a
    void setZoomControlsEnabled(boolean) -> b
    void setCompassEnabled(boolean) -> c
    void setMyLocationButtonEnabled(boolean) -> d
    void setScrollGesturesEnabled(boolean) -> e
    void setZoomGesturesEnabled(boolean) -> f
    void setTiltGesturesEnabled(boolean) -> g
    void setRotateGesturesEnabled(boolean) -> h
    void setAllGesturesEnabled(boolean) -> i
    void setLogoPosition(int) -> a
    void setZoomPosition(int) -> b
    boolean isScaleControlsEnabled() -> a
    boolean isZoomControlsEnabled() -> b
    boolean isCompassEnabled() -> c
    boolean isMyLocationButtonEnabled() -> d
    boolean isScrollGesturesEnabled() -> e
    boolean isZoomGesturesEnabled() -> f
    boolean isTiltGesturesEnabled() -> g
    boolean isRotateGesturesEnabled() -> h
    int getLogoPosition() -> i
    int getZoomPosition() -> j
    void setCompassViewPosition(int,int) -> a
com.sfmap.api.mapcore.LocationViewDecode -> com.sfmap.api.mapcore.aa:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.widget.ImageView g -> g
    com.sfmap.api.mapcore.IMapDelegate h -> h
    boolean i -> i
    30:63:void a() -> a
    72:115:void <init>(android.content.Context,com.sfmap.api.mapcore.MapMessageQueueDecode,com.sfmap.api.mapcore.IMapDelegate) -> <init>
    119:133:void initBitmap() -> b
    135:142:void setLocstionViewBitmap(android.graphics.Bitmap,android.graphics.Bitmap) -> a
    145:152:void showSelect(boolean) -> a
com.sfmap.api.mapcore.LocationViewDecode$1 -> com.sfmap.api.mapcore.aa$1:
    com.sfmap.api.mapcore.LocationViewDecode this$0 -> a
    81:81:void <init>(com.sfmap.api.mapcore.LocationViewDecode) -> <init>
    84:109:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.sfmap.api.mapcore.MapCallback -> com.sfmap.api.mapcore.ab:
    com.sfmap.api.mapcore.MapDelegateImp mapDelegate -> j
    float presslastZoom -> k
    com.sfmap.mapcore.IPoint lastGeo -> a
    float lastZoom -> b
    float lastTilt -> c
    float lastBearing -> d
    com.sfmap.mapcore.IPoint currGeoPoint -> e
    int x -> l
    int y -> m
    36:40:java.lang.String getUserGridURL(java.lang.String) -> a
    45:45:java.lang.String getMapSvrAddress() -> a
    48:135:void <init>(com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    55:56:void OnMapSurfaceCreate(javax.microedition.khronos.opengles.GL10,com.sfmap.mapcore.MapCore) -> a
    60:75:void OnMapSurfaceRenderer(javax.microedition.khronos.opengles.GL10,com.sfmap.mapcore.MapCore,int) -> a
    81:81:void OnMapSufaceChanged(javax.microedition.khronos.opengles.GL10,com.sfmap.mapcore.MapCore,int,int) -> a
    85:129:void OnMapProcessEvent(com.sfmap.mapcore.MapCore) -> a
    140:211:void runMessage(com.sfmap.mapcore.MapCore) -> b
    214:245:void newLatLngBoundsWithSize(com.sfmap.api.mapcore.CameraUpdateFactoryDelegate) -> b
    249:286:float a(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,int,int) -> a
    293:443:void runCameraUpdate(com.sfmap.api.mapcore.CameraUpdateFactoryDelegate) -> a
    446:448:void a(com.sfmap.mapcore.MapProjection,com.sfmap.api.mapcore.CameraUpdateFactoryDelegate) -> a
    451:452:void a(com.sfmap.mapcore.MapProjection,float) -> a
    455:458:void a(com.sfmap.mapcore.MapProjection,float,int,int) -> a
    461:465:void a(com.sfmap.mapcore.MapProjection,com.sfmap.mapcore.IPoint,float,float,float) -> a
    468:470:void b(com.sfmap.mapcore.MapProjection,com.sfmap.api.mapcore.CameraUpdateFactoryDelegate) -> b
    473:477:void c(com.sfmap.mapcore.MapProjection,com.sfmap.api.mapcore.CameraUpdateFactoryDelegate) -> c
    481:484:void d(com.sfmap.mapcore.MapProjection,com.sfmap.api.mapcore.CameraUpdateFactoryDelegate) -> d
    487:488:void a(com.sfmap.mapcore.MapProjection,com.sfmap.mapcore.IPoint) -> a
    491:496:void a(com.sfmap.mapcore.MapProjection,com.sfmap.mapcore.IPoint,int,int) -> a
    499:499:com.sfmap.mapcore.IPoint a(com.sfmap.mapcore.MapProjection) -> a
    503:507:com.sfmap.mapcore.IPoint a(com.sfmap.mapcore.MapProjection,int,int) -> a
    511:512:void OnMapDestory(javax.microedition.khronos.opengles.GL10,com.sfmap.mapcore.MapCore) -> b
    516:529:void OnMapReferencechanged(com.sfmap.mapcore.MapCore,java.lang.String,java.lang.String) -> a
    536:539:boolean isMapEngineValid() -> b
    547:549:void a(int,int) -> a
    552:553:void requestRender() -> c
    559:617:void onIndoorBuildingActivity(com.sfmap.mapcore.MapCore,byte[]) -> a
    620:634:void onIndoorDataRequired(com.sfmap.mapcore.MapCore,int,java.lang.String[],int[],int[]) -> a
com.sfmap.api.mapcore.MapCallback$1 -> com.sfmap.api.mapcore.ab$1:
    int[] $SwitchMap$com$sfmap$api$mapcore$CameraUpdateFactoryDelegate$Type -> a
    299:299:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.MapDelegateImp -> com.sfmap.api.mapcore.ac:
    java.lang.String TAG -> a
    boolean is_NeedToCenter -> s
    int LINE_TEXTURE_ID -> t
    int o -> u
    android.graphics.Bitmap lineTexture -> v
    android.graphics.Bitmap lineDashTexture -> w
    double mapcenterx -> x
    double mapcentery -> y
    float mapzoomer -> b
    float cameraheaderangle -> c
    float mapangle -> d
    int[] scaleArray -> z
    java.util.concurrent.CopyOnWriteArrayList freeTextureList -> A
    java.util.concurrent.CopyOnWriteArrayList textureList -> B
    com.sfmap.api.mapcore.MapOverlayImageViewDecode mOverlaysImageView -> e
    com.sfmap.api.mapcore.MapMessageQueueDecode mMapMessges -> f
    com.sfmap.api.mapcore.ZoomControllerViewDecode mZoomView -> g
    com.sfmap.api.mapcore.TileOverlayViewDecode mTileOverlayView -> h
    com.sfmap.mapcore.GLMapResManager$MapViewTime mapViewTime -> C
    com.sfmap.mapcore.GLMapResManager$MapViewMode mapViewMode -> D
    com.sfmap.mapcore.GLMapResManager$MapViewModeState mapViewModeState -> E
    int mapType -> F
    com.sfmap.mapcore.MapCore mapCore -> G
    android.content.Context context -> H
    com.sfmap.api.mapcore.MapCallback mapCallback -> I
    com.sfmap.mapcore.MapProjection mapProjection -> J
    android.view.GestureDetector gestureDetector -> K
    com.sfmap.api.mapcore.util.SfScaleGestureDetector scaleGestureDetector -> L
    com.sfmap.api.mapcore.util.RotateGestureDetectorDecode mRotateDetector -> M
    android.view.SurfaceHolder surfaceHolder -> N
    com.sfmap.api.mapcore.MapOverlayViewGroupDecode mOverlaylay -> O
    com.sfmap.api.mapcore.WaterMarkerViewDecode mWaterMarkerView -> P
    com.sfmap.api.mapcore.LocationViewDecode mLocationView -> Q
    com.sfmap.api.mapcore.CompassViewDecode mCompassView -> R
    com.sfmap.api.mapcore.ScaleViewDecode mScaleView -> S
    com.sfmap.api.maps.MapController$OnMyLocationChangeListener myLocationChangeListener -> T
    com.sfmap.api.maps.MapController$OnMarkerClickListener mMarkerClickListener -> U
    com.sfmap.api.maps.MapController$OnPolylineClickListener mPolylineClickListener -> V
    com.sfmap.api.maps.MapController$OnMarkerDragListener mMarkDragListener -> W
    com.sfmap.api.maps.MapController$OnMapLoadedListener mMapLoadedListener -> X
    com.sfmap.api.maps.MapController$OnCameraChangeListener cameraChangeListener -> Y
    com.sfmap.api.maps.MapController$OnMapClickListener mapClickListener -> Z
    com.sfmap.api.maps.MapController$OnMapTouchListener mMapTouchListener -> aa
    com.sfmap.api.maps.MapController$OnPOIClickListener mPOIClickListener -> ab
    com.sfmap.api.maps.MapController$OnMapLongClickListener mapLongClickListener -> ac
    com.sfmap.api.maps.MapController$OnInfoWindowClickListener mInfoWindowClickListener -> ad
    com.sfmap.api.maps.MapController$GridUrlListener mGridUrlListener -> ae
    com.sfmap.api.maps.MapController$InfoWindowAdapter mInfoAdapter -> af
    com.sfmap.api.maps.MapController$InfoWindowAdapter mInfoAdapterSrc -> ag
    android.view.View mInfoview -> ah
    com.sfmap.api.mapcore.IMarkerDelegate mInfoWindowMarker -> ai
    com.sfmap.api.mapcore.PopupOverlayDecode popupOverlay -> aj
    com.sfmap.api.mapcore.IProjectionDelegate projectionDelegate -> ak
    com.sfmap.api.mapcore.IUiSettingsDelegate uiSettings -> al
    com.sfmap.api.maps.LocationSource locationSource -> am
    android.graphics.Rect rectMap -> an
    com.sfmap.api.mapcore.MapOnLocationChangedListener locationChangedListener -> ao
    com.sfmap.api.mapcore.util.MultiTouchSupportDecode multiTouchSupport -> ap
    com.sfmap.api.mapcore.MyLocationOverlayDecode myLocationOverlay -> aq
    com.sfmap.api.mapcore.CameraAnimatorDecode mCameraAnimator -> ar
    int mScrollX -> as
    int mScrollY -> at
    com.sfmap.api.maps.MapController$CancelableCallback mCallback -> au
    int ap -> av
    android.graphics.drawable.Drawable infowindow_bDrawable -> aw
    android.location.Location lastLocation -> ax
    com.sfmap.api.maps.MapController$OnMapScreenShotListener mapOnMapScreenShotListener -> ay
    android.os.Handler au -> az
    com.sfmap.api.mapcore.util.IndoorBuilding av -> aA
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate aw -> aB
    java.util.Timer mapTimer -> aC
    com.sfmap.api.mapcore.MapDelegateImp$TimeChangedReceiver timeChangereceiver -> aD
    double MATH_LOG_2 -> aE
    boolean locationEnabled -> aF
    boolean initProjOver -> aG
    boolean aC -> aH
    boolean aD -> aI
    boolean aF -> aJ
    boolean aE -> aK
    boolean isAnimationStep -> aL
    boolean isCallbacking -> aM
    boolean callbackChanged -> aN
    java.lang.Boolean aI -> aO
    boolean aJ -> aP
    boolean aK -> aQ
    boolean isShowMapText -> aR
    boolean isTexsureInited -> aS
    android.os.Handler rmCacheHandler -> aT
    android.os.HandlerThread handlerThread -> i
    android.os.Handler authHandler -> j
    com.sfmap.api.mapcore.GLOverlayLayerDecode baseOverlayLayer -> k
    com.sfmap.mapcore.GLMapResManager glMapResManager -> l
    com.sfmap.api.mapcore.IGLSurfaceView glSurfaceView -> m
    com.sfmap.api.maps.MapController$OnMapLevelChangeListener mapLevelChangeListener -> aU
    boolean onPauseStatus -> aV
    boolean isRunLowFrame -> aW
    boolean postDelayedRun -> aX
    android.os.Handler frameHandler -> aY
    java.lang.Runnable frameRunnable -> aZ
    java.lang.Runnable k -> n
    boolean isSetInternaltexture -> ba
    boolean trafficEnabled -> bb
    boolean cellZonesEnabled -> bc
    boolean sfAoiEnabled -> bd
    boolean expressNumEnabled -> be
    boolean isDoubleScolling -> bf
    boolean isScaleTouching -> bg
    boolean isMarkerDraging -> bh
    com.sfmap.api.maps.model.Marker hitMarker -> bi
    com.sfmap.api.mapcore.IMarkerDelegate markerDelegate -> bj
    boolean mIsScrolling -> bk
    boolean mIsRotating -> bl
    boolean mIsDoubleTapping -> bm
    int pointerCounter -> bn
    boolean isLongPress -> bo
    java.lang.Runnable authThread -> bp
    com.sfmap.api.maps.model.LatLngBounds bounds -> bq
    android.os.Handler handler -> o
    boolean isTRANSPARENT -> br
    boolean bi -> bs
    boolean bj -> bt
    int xPixel -> bu
    int yPixel -> bv
    android.os.Handler bm -> bw
    java.lang.Runnable bn -> bx
    java.lang.Runnable bo -> by
    com.sfmap.api.maps.CustomRenderer customRenderer -> p
    java.util.concurrent.CopyOnWriteArrayList rendererList -> q
    int drawCustomRenderTime -> r
    boolean bp -> bz
    com.sfmap.api.mapcore.MapDelegateImp$a bq -> bA
    235:235:com.sfmap.mapcore.MapCore getMapCore() -> O
    240:240:int getLineTextureID() -> e
    244:247:com.sfmap.mapcore.MapProjection getMapProjection() -> b
    251:251:boolean isZero(float) -> e
    256:265:void initTexsureIdList(javax.microedition.khronos.opengles.GL10) -> a
    104:4094:void <init>(com.sfmap.api.mapcore.IGLSurfaceView,android.content.Context,android.util.AttributeSet) -> <init>
    399:403:void initUserGrid() -> ah
    424:425:void setOnMyLocationChangeListener(com.sfmap.api.maps.MapController$OnMyLocationChangeListener) -> a
    429:444:void onResume() -> E
    448:463:void onPause() -> F
    467:478:void initProjection() -> ai
    483:486:void setMyLocationStyle(com.sfmap.api.maps.model.MyLocationStyle) -> a
    490:493:void setMyLocationType(int) -> d
    497:500:void setCustomType() -> u
    504:507:void unregisterSensorListener() -> v
    511:514:void setRotateAngle(float) -> c
    518:557:void showMyLocationOverlay(android.location.Location) -> a
    561:563:void setGridUrlListener(com.sfmap.api.maps.MapController$GridUrlListener) -> a
    567:567:boolean getNeedToCenter() -> N
    572:573:void setNeedToCenter(boolean) -> n
    577:578:boolean isPOIByPoint(android.graphics.Point) -> a
    583:591:java.lang.String getUserGridURL(java.lang.String) -> b
    595:603:void showZoomControlsEnabled(boolean) -> g
    607:706:void destroy() -> B
    710:718:void showMyLocationButtonEnabled(boolean) -> h
    722:731:void showCompassEnabled(boolean) -> i
    735:736:void invalidateCompassView() -> P
    740:751:void showScaleEnabled(boolean) -> j
    755:756:void invalidateScaleState() -> Q
    760:786:void changeScaleState() -> R
    790:791:boolean removeGLOverlay(java.lang.String) -> a
    795:796:void set2DMapRotateEnable(boolean) -> a
    814:824:void setRunLowFrame(boolean) -> k
    828:872:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    875:875:android.graphics.Rect getRect() -> h
    879:879:int getMapWidth() -> c
    883:883:int getMapHeight() -> d
    888:888:int getWidth() -> S
    893:893:int getHeight() -> T
    898:904:void setMyTrafficStyle(int,int,int,int) -> a
    908:915:void runTimer() -> aj
    919:923:void cancelTimer() -> ak
    926:935:void setMapStyleIconForPath(java.lang.String,java.lang.String) -> a
    938:947:void setMapStyleType(int) -> j
    954:973:void setInternaltexture() -> al
    977:977:int getDottedLineTextureID() -> f
    983:1019:void redrawInfoWindow() -> A
    1023:1024:void setZOrderOnTop_(boolean) -> b
    1028:1028:com.sfmap.api.maps.model.CameraPosition getCameraPosition() -> l
    1032:1038:void setMaxZoomLevel(float) -> a
    1041:1047:void setMinZoomLevel(float) -> b
    1050:1050:float getMaxZoomLevel() -> m
    1054:1054:float getMinZoomLevel() -> n
    1059:1071:void moveCamera(com.sfmap.api.mapcore.CameraUpdateFactoryDelegate) -> a
    1075:1076:void animateCamera(com.sfmap.api.mapcore.CameraUpdateFactoryDelegate) -> b
    1082:1084:void animateCamera(com.sfmap.api.mapcore.CameraUpdateFactoryDelegate,com.sfmap.api.maps.MapController$CancelableCallback) -> a
    1090:1475:void animateCameraWithDurationAndCallback(com.sfmap.api.mapcore.CameraUpdateFactoryDelegate,long,com.sfmap.api.maps.MapController$CancelableCallback) -> a
    1479:1491:void stopAnimation() -> o
    1496:1522:com.sfmap.api.mapcore.IPolylineDelegateDecode addPolyline(com.sfmap.api.maps.model.PolylineOptions) -> a
    1528:1541:com.sfmap.api.mapcore.INavigateArrowDelegateDecode addNavigateArrow(com.sfmap.api.maps.model.NavigateArrowOptions) -> a
    1546:1558:com.sfmap.api.mapcore.IPolygonDelegate addPolygon(com.sfmap.api.maps.model.PolygonOptions) -> a
    1563:1576:com.sfmap.api.mapcore.ICircleDelegate addCircle(com.sfmap.api.maps.model.CircleOptions) -> a
    1581:1594:com.sfmap.api.mapcore.IArcDelegateDecode addArc(com.sfmap.api.maps.model.ArcOptions) -> a
    1600:1619:com.sfmap.api.mapcore.IGroundOverlayDelegateDecode addGroundOverlay(com.sfmap.api.maps.model.GroundOverlayOptions) -> a
    1624:1678:com.sfmap.api.maps.model.Marker addMarker(com.sfmap.api.maps.model.MarkerOptions) -> a
    1685:1693:com.sfmap.api.maps.model.Text addText(com.sfmap.api.maps.model.TextOptions) -> a
    1699:1752:java.util.ArrayList addMarkers(java.util.ArrayList,boolean) -> a
    1757:1766:com.sfmap.api.maps.model.TileOverlay addTileOverlay(com.sfmap.api.maps.model.TileOverlayOptions) -> a
    1772:1780:void clear() -> p
    1785:1807:void clear(boolean) -> c
    1811:1811:int getMapType() -> q
    1817:1853:void setMapType(int) -> c
    1858:1860:void a(com.sfmap.mapcore.GLMapResManager$MapViewMode,com.sfmap.mapcore.GLMapResManager$MapViewTime) -> a
    1866:1948:void a(com.sfmap.mapcore.GLMapResManager$MapViewMode,com.sfmap.mapcore.GLMapResManager$MapViewTime,com.sfmap.mapcore.GLMapResManager$MapViewModeState) -> a
    1952:1952:boolean isCellZonesEnabled() -> s
    1957:1957:boolean isTrafficEnabled() -> r
    1972:1975:void setTrafficEnabled(boolean) -> d
    1979:1992:void setParameter(java.lang.String,boolean) -> a
    1995:2004:void showMapText(boolean) -> m
    2007:2007:boolean isMyLocationEnabled() -> t
    2012:2042:void setMyLocationEnabled(boolean) -> e
    2046:2049:android.location.Location getMyLocation() -> w
    2057:2069:void setLocationSource(com.sfmap.api.maps.LocationSource) -> a
    2073:2073:com.sfmap.api.mapcore.IUiSettingsDelegate getUiSettings() -> x
    2078:2078:com.sfmap.api.mapcore.IProjectionDelegate getProjection() -> y
    2083:2084:void setOnCameraChangeListener(com.sfmap.api.maps.MapController$OnCameraChangeListener) -> a
    2088:2092:void runOnCameraChangeListener(com.sfmap.api.maps.model.CameraPosition) -> a
    2096:2096:com.sfmap.api.maps.MapController$OnCameraChangeListener getOnCameraChangeListener() -> U
    2100:2101:void setOnMapLevelChangeListener(com.sfmap.api.maps.MapController$OnMapLevelChangeListener) -> a
    2104:2104:com.sfmap.api.maps.MapController$OnMapLevelChangeListener getOnMapLevelChangeListener() -> V
    2110:2111:void setOnMapClickListener(com.sfmap.api.maps.MapController$OnMapClickListener) -> a
    2116:2117:void setOnMapTouchListener(com.sfmap.api.maps.MapController$OnMapTouchListener) -> a
    2121:2122:void setOnPOIClickListener(com.sfmap.api.maps.MapController$OnPOIClickListener) -> a
    2126:2127:void setOnMapLongClickListener(com.sfmap.api.maps.MapController$OnMapLongClickListener) -> a
    2131:2132:void setOnMarkerClickListener(com.sfmap.api.maps.MapController$OnMarkerClickListener) -> a
    2136:2137:void setOnPolylineClickListener(com.sfmap.api.maps.MapController$OnPolylineClickListener) -> a
    2141:2142:void setOnMarkerDragListener(com.sfmap.api.maps.MapController$OnMarkerDragListener) -> a
    2146:2147:void setOnMapLoadedListener(com.sfmap.api.maps.MapController$OnMapLoadedListener) -> a
    2151:2152:void setOnInfoWindowClickListener(com.sfmap.api.maps.MapController$OnInfoWindowClickListener) -> a
    2156:2161:void setInfoWindowAdapter(com.sfmap.api.maps.MapController$InfoWindowAdapter) -> a
    2164:2164:android.view.View getView() -> g
    2169:2169:float checkZoomLevel(float) -> d
    2174:2177:float getMapLenWithWin(int) -> g
    2182:2183:void getPixel2LatLng(int,int,com.sfmap.mapcore.DPoint) -> b
    2188:2196:void getPixel2LatLng(com.sfmap.mapcore.MapProjection,int,int,com.sfmap.mapcore.DPoint) -> a
    2200:2205:void getPixel2Geo(int,int,com.sfmap.mapcore.IPoint) -> a
    2220:2226:void getLatLng2Map(double,double,com.sfmap.mapcore.FPoint) -> a
    2231:2232:void latlon2Geo(double,double,com.sfmap.mapcore.IPoint) -> a
    2236:2239:void win2Map(int,int,com.sfmap.mapcore.FPoint) -> b
    2243:2246:void geo2Map(int,int,com.sfmap.mapcore.FPoint) -> a
    2250:2253:void a(float,float,com.sfmap.mapcore.IPoint) -> a
    2257:2258:void geo2Latlng(int,int,com.sfmap.mapcore.DPoint) -> a
    2263:2272:void getLatLng2Pixel(double,double,com.sfmap.mapcore.IPoint) -> b
    2276:2284:com.sfmap.api.maps.model.LatLng getLatLngCenter() -> am
    2289:2303:com.sfmap.api.maps.model.CameraPosition getCameraPositionPrj_(boolean) -> l
    2319:2344:void EndTouchEvent() -> an
    2348:2363:void onDragMarker(android.view.MotionEvent) -> b
    2372:2411:boolean onTouchEvent(android.view.MotionEvent) -> a
    2649:2755:void showInfoWindow(com.sfmap.api.mapcore.IMarkerDelegate) -> a
    2759:2771:void hiddenInfoWindowShown() -> z
    3221:3221:float getZoomLevel() -> j
    3230:3231:void setMapBounds() -> W
    3234:3234:com.sfmap.api.maps.model.LatLngBounds getMapBounds() -> D
    3239:3261:com.sfmap.api.maps.model.LatLngBounds a(com.sfmap.api.maps.model.LatLng,float) -> a
    3274:3287:void H() -> X
    3291:3294:android.graphics.Point I() -> Y
    3298:3322:android.graphics.Bitmap SavePixels(int,int,int,int,javax.microedition.khronos.opengles.GL10) -> a
    3334:3337:void a(com.sfmap.api.maps.MapController$OnMapScreenShotListener) -> a
    3340:3347:void setLogoPosition(int) -> e
    3350:3360:void setZoomPosition(int) -> f
    3365:3379:float getScalePerPixel() -> C
    3384:3386:void m(boolean) -> o
    3391:3411:void cameraChangeFinish(boolean,com.sfmap.api.maps.model.CameraPosition) -> a
    3415:3420:void deleteTexsureId(int) -> b
    3424:3430:int getTexsureId() -> k
    3435:3438:java.util.List getMapScreenMarkers() -> G
    3442:3443:void M() -> i
    3446:3447:void N() -> H
    3450:3450:boolean O() -> Z
    3454:3458:void P() -> aa
    3467:3473:void setPointToCenter(int,int) -> a
    3476:3496:void setCompassViewPosition(int,int) -> b
    3499:3505:void setScaleViewPosition(int,int) -> c
    3508:3514:void setLogoViewPosition(int,int) -> d
    3517:3519:void setCompassViewBitmap(android.graphics.Bitmap) -> a
    3522:3524:void setLogoBitmap(android.graphics.Bitmap) -> b
    3527:3531:void setLocationViewBitmap(android.graphics.Bitmap[]) -> a
    3534:3535:void setMapTextZIndex(int) -> h
    3538:3538:int getMapTextZIndex() -> I
    3542:3542:boolean R() -> J
    3546:3546:com.sfmap.api.mapcore.CameraAnimatorDecode S() -> K
    3551:3557:void setLoadOfflineData(boolean) -> f
    3562:3563:void removecache() -> L
    3566:3580:void removecache(com.sfmap.api.maps.MapController$OnCacheRemoveListener) -> a
    3584:3602:boolean a(java.io.File) -> a
    3650:3662:void U() -> ab
    3666:3667:void setVisibility(int) -> i
    3672:3690:com.sfmap.api.maps.model.Poi getSelectedMapPoi(int,int,int) -> a
    3748:3751:void drawCustomRenderTime(int) -> a
    3756:3757:void setCustomRenderer(com.sfmap.api.maps.CustomRenderer) -> c
    3761:3764:void addCustomRenderer(com.sfmap.api.maps.CustomRenderer) -> a
    3768:3771:void removeCustomRenderer(com.sfmap.api.maps.CustomRenderer) -> b
    3775:3778:void clearCustomRenderer() -> a
    3829:3829:android.content.Context getContext() -> ac
    3838:3847:void setMapCenter(com.sfmap.api.maps.model.LatLng) -> a
    3851:3854:void a(java.lang.Runnable) -> a
    3858:3888:void b(javax.microedition.khronos.opengles.GL10) -> b
    3891:3903:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    3906:3912:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    3916:3990:void a(javax.microedition.khronos.opengles.GL10,int,int) -> a
    3994:4047:void c(javax.microedition.khronos.opengles.GL10) -> c
    4051:4052:void reloadMap() -> M
    4056:4056:com.sfmap.mapcore.GLMapResManager$MapViewTime getMapViewTime() -> ad
    4061:4061:com.sfmap.mapcore.GLMapResManager$MapViewMode getMapViewMode() -> ae
    4066:4066:com.sfmap.mapcore.GLMapResManager$MapViewModeState getMapViewModeState() -> af
    4071:4077:void ai() -> ao
    102:102:java.lang.Runnable access$500(com.sfmap.api.mapcore.MapDelegateImp) -> a
    102:102:android.os.Handler access$600(com.sfmap.api.mapcore.MapDelegateImp) -> b
    102:102:java.lang.Runnable access$700(com.sfmap.api.mapcore.MapDelegateImp) -> c
    102:102:com.sfmap.mapcore.MapCore access$800(com.sfmap.api.mapcore.MapDelegateImp) -> d
    102:102:com.sfmap.mapcore.MapCore access$802(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.mapcore.MapCore) -> a
    102:102:boolean access$900(com.sfmap.api.mapcore.MapDelegateImp) -> e
    102:102:boolean access$1002(com.sfmap.api.mapcore.MapDelegateImp,boolean) -> a
    102:102:boolean access$902(com.sfmap.api.mapcore.MapDelegateImp,boolean) -> b
    102:102:com.sfmap.mapcore.GLMapResManager$MapViewTime access$1102(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.mapcore.GLMapResManager$MapViewTime) -> a
    102:102:com.sfmap.mapcore.GLMapResManager$MapViewMode access$1202(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.mapcore.GLMapResManager$MapViewMode) -> a
    102:102:com.sfmap.mapcore.GLMapResManager$MapViewModeState access$1302(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.mapcore.GLMapResManager$MapViewModeState) -> a
    102:102:com.sfmap.mapcore.GLMapResManager$MapViewMode access$1200(com.sfmap.api.mapcore.MapDelegateImp) -> f
    102:102:com.sfmap.mapcore.GLMapResManager$MapViewTime access$1100(com.sfmap.api.mapcore.MapDelegateImp) -> g
    102:102:void access$1400(com.sfmap.api.mapcore.MapDelegateImp) -> h
    102:102:boolean access$1500(com.sfmap.api.mapcore.MapDelegateImp) -> i
    102:102:boolean access$1600(com.sfmap.api.mapcore.MapDelegateImp) -> j
    102:102:boolean access$1602(com.sfmap.api.mapcore.MapDelegateImp,boolean) -> c
    102:102:double access$1700() -> ag
    102:102:com.sfmap.api.mapcore.IUiSettingsDelegate access$1800(com.sfmap.api.mapcore.MapDelegateImp) -> k
    102:102:int access$1900(com.sfmap.api.mapcore.MapDelegateImp) -> l
    102:102:int access$1902(com.sfmap.api.mapcore.MapDelegateImp,int) -> a
    102:102:boolean access$2000(com.sfmap.api.mapcore.MapDelegateImp) -> m
    102:102:int access$2100(com.sfmap.api.mapcore.MapDelegateImp) -> n
    102:102:int access$2200(com.sfmap.api.mapcore.MapDelegateImp) -> o
    102:102:com.sfmap.mapcore.MapProjection access$2300(com.sfmap.api.mapcore.MapDelegateImp) -> p
    102:102:void access$2400(com.sfmap.api.mapcore.MapDelegateImp) -> q
    102:102:boolean access$2502(com.sfmap.api.mapcore.MapDelegateImp,boolean) -> d
    102:102:boolean access$2600(com.sfmap.api.mapcore.MapDelegateImp) -> r
    102:102:boolean access$2602(com.sfmap.api.mapcore.MapDelegateImp,boolean) -> e
    102:102:com.sfmap.api.mapcore.util.MultiTouchSupportDecode access$2700(com.sfmap.api.mapcore.MapDelegateImp) -> s
    102:102:int access$2802(com.sfmap.api.mapcore.MapDelegateImp,int) -> b
    102:102:int access$2902(com.sfmap.api.mapcore.MapDelegateImp,int) -> c
    102:102:com.sfmap.api.maps.MapController$CancelableCallback access$3002(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.maps.MapController$CancelableCallback) -> a
    102:102:android.view.View access$3100(com.sfmap.api.mapcore.MapDelegateImp) -> t
    102:102:com.sfmap.api.mapcore.IMarkerDelegate access$3200(com.sfmap.api.mapcore.MapDelegateImp) -> u
    102:102:boolean access$3302(com.sfmap.api.mapcore.MapDelegateImp,boolean) -> f
    102:102:com.sfmap.api.mapcore.PopupOverlayDecode access$3400(com.sfmap.api.mapcore.MapDelegateImp) -> v
    102:102:int access$2800(com.sfmap.api.mapcore.MapDelegateImp) -> w
    102:102:int access$2900(com.sfmap.api.mapcore.MapDelegateImp) -> x
    102:102:com.sfmap.api.mapcore.CameraAnimatorDecode access$3500(com.sfmap.api.mapcore.MapDelegateImp) -> y
    102:102:com.sfmap.api.mapcore.IMarkerDelegate access$3602(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.mapcore.IMarkerDelegate) -> a
    102:102:com.sfmap.api.maps.MapController$OnMarkerDragListener access$3700(com.sfmap.api.mapcore.MapDelegateImp) -> z
    102:102:com.sfmap.api.mapcore.IMarkerDelegate access$3600(com.sfmap.api.mapcore.MapDelegateImp) -> A
    102:102:com.sfmap.api.maps.model.Marker access$3802(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.maps.model.Marker) -> a
    102:102:com.sfmap.api.maps.model.Marker access$3800(com.sfmap.api.mapcore.MapDelegateImp) -> B
    102:102:boolean access$3902(com.sfmap.api.mapcore.MapDelegateImp,boolean) -> g
    102:102:com.sfmap.api.maps.MapController$OnMapLongClickListener access$4000(com.sfmap.api.mapcore.MapDelegateImp) -> C
    102:102:boolean access$4102(com.sfmap.api.mapcore.MapDelegateImp,boolean) -> h
    102:102:boolean access$4100(com.sfmap.api.mapcore.MapDelegateImp) -> D
    102:102:com.sfmap.api.maps.MapController$OnInfoWindowClickListener access$4200(com.sfmap.api.mapcore.MapDelegateImp) -> E
    102:102:com.sfmap.api.maps.MapController$OnMarkerClickListener access$4300(com.sfmap.api.mapcore.MapDelegateImp) -> F
    102:102:com.sfmap.api.maps.MapController$OnMapClickListener access$4400(com.sfmap.api.mapcore.MapDelegateImp) -> G
    102:102:com.sfmap.api.maps.MapController$OnPolylineClickListener access$4500(com.sfmap.api.mapcore.MapDelegateImp) -> H
    102:102:com.sfmap.api.maps.MapController$OnPOIClickListener access$4600(com.sfmap.api.mapcore.MapDelegateImp) -> I
    102:102:boolean access$4700(com.sfmap.api.mapcore.MapDelegateImp) -> J
    102:102:boolean access$4702(com.sfmap.api.mapcore.MapDelegateImp,boolean) -> i
    102:102:boolean access$1502(com.sfmap.api.mapcore.MapDelegateImp,boolean) -> j
    102:102:com.sfmap.api.mapcore.MapOverlayViewGroupDecode access$4800(com.sfmap.api.mapcore.MapDelegateImp) -> K
    102:102:com.sfmap.api.mapcore.CompassViewDecode access$4900(com.sfmap.api.mapcore.MapDelegateImp) -> L
    102:102:boolean access$5000(com.sfmap.api.mapcore.MapDelegateImp,java.io.File) -> a
    102:102:com.sfmap.api.maps.MapController$OnMapTouchListener access$5100(com.sfmap.api.mapcore.MapDelegateImp) -> M
    102:102:boolean access$1000(com.sfmap.api.mapcore.MapDelegateImp) -> N
    102:102:java.lang.Boolean access$5300(com.sfmap.api.mapcore.MapDelegateImp) -> O
    102:102:android.content.Context access$5400(com.sfmap.api.mapcore.MapDelegateImp) -> P
    102:102:com.sfmap.api.maps.MapController$OnCameraChangeListener access$5500(com.sfmap.api.mapcore.MapDelegateImp) -> Q
    102:102:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate access$5600(com.sfmap.api.mapcore.MapDelegateImp) -> R
    102:102:com.sfmap.api.maps.MapController$OnMapLoadedListener access$5700(com.sfmap.api.mapcore.MapDelegateImp) -> S
    102:102:com.sfmap.api.mapcore.WaterMarkerViewDecode access$5800(com.sfmap.api.mapcore.MapDelegateImp) -> T
    102:102:com.sfmap.api.maps.MapController$OnMapScreenShotListener access$5900(com.sfmap.api.mapcore.MapDelegateImp) -> U
    102:102:com.sfmap.api.maps.MapController$OnMapScreenShotListener access$5902(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.maps.MapController$OnMapScreenShotListener) -> a
    102:102:com.sfmap.api.maps.MapController$CancelableCallback access$3000(com.sfmap.api.mapcore.MapDelegateImp) -> V
    102:102:boolean access$6000(com.sfmap.api.mapcore.MapDelegateImp) -> W
    102:102:boolean access$6102(com.sfmap.api.mapcore.MapDelegateImp,boolean) -> k
    102:102:boolean access$6200(com.sfmap.api.mapcore.MapDelegateImp) -> X
    102:102:boolean access$6202(com.sfmap.api.mapcore.MapDelegateImp,boolean) -> l
    102:102:com.sfmap.api.maps.model.LatLngBounds access$6302(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.maps.model.LatLngBounds) -> a
    102:102:void access$6400(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.mapcore.MapProjection,int,int,com.sfmap.mapcore.DPoint) -> a
    102:102:void access$6500(com.sfmap.api.mapcore.MapDelegateImp) -> Y
    102:102:java.lang.Runnable access$6600(com.sfmap.api.mapcore.MapDelegateImp) -> Z
    210:210:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.MapDelegateImp$1 -> com.sfmap.api.mapcore.ac$1:
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> a
    308:308:void <init>(com.sfmap.api.mapcore.MapDelegateImp,android.content.Context,com.sfmap.api.mapcore.IMapDelegate) -> <init>
    310:313:void a() -> a
com.sfmap.api.mapcore.MapDelegateImp$10 -> com.sfmap.api.mapcore.ac$2:
    com.sfmap.mapcore.GLMapResManager$MapViewTime val$mapViewTime1 -> a
    com.sfmap.mapcore.GLMapResManager$MapViewMode val$mapViewMode1 -> b
    com.sfmap.mapcore.GLMapResManager$MapViewModeState val$localMapViewModeState1 -> c
    com.sfmap.mapcore.GLMapResManager$MapViewTime val$mapViewTime2 -> d
    com.sfmap.mapcore.GLMapResManager$MapViewMode val$mapViewMode2 -> e
    com.sfmap.mapcore.GLMapResManager$MapViewModeState val$localMapViewModeState2 -> f
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> g
    1884:1884:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.mapcore.GLMapResManager$MapViewTime,com.sfmap.mapcore.GLMapResManager$MapViewMode,com.sfmap.mapcore.GLMapResManager$MapViewModeState,com.sfmap.mapcore.GLMapResManager$MapViewTime,com.sfmap.mapcore.GLMapResManager$MapViewMode,com.sfmap.mapcore.GLMapResManager$MapViewModeState) -> <init>
    1886:1940:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$10$1 -> com.sfmap.api.mapcore.ac$2$1:
    com.sfmap.api.mapcore.MapDelegateImp$10 this$1 -> a
    1896:1896:void <init>(com.sfmap.api.mapcore.MapDelegateImp$10) -> <init>
    1898:1899:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$11 -> com.sfmap.api.mapcore.ac$3:
    boolean val$paramBoolean -> a
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> b
    1996:1996:void <init>(com.sfmap.api.mapcore.MapDelegateImp,boolean) -> <init>
    1999:2002:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$12 -> com.sfmap.api.mapcore.ac$4:
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> a
    2659:2659:void <init>(com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    2663:2669:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$13 -> com.sfmap.api.mapcore.ac$5:
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> a
    2733:2733:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.maps.model.MarkerOptions,com.sfmap.api.mapcore.IMapDelegate) -> <init>
    2736:2739:void a() -> G
com.sfmap.api.mapcore.MapDelegateImp$14 -> com.sfmap.api.mapcore.ac$6:
    int val$xPix -> a
    int val$yPix -> b
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> c
    3479:3479:void <init>(com.sfmap.api.mapcore.MapDelegateImp,int,int) -> <init>
    3482:3492:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$15 -> com.sfmap.api.mapcore.ac$7:
    boolean val$paramBoolean -> a
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> b
    3551:3551:void <init>(com.sfmap.api.mapcore.MapDelegateImp,boolean) -> <init>
    3553:3555:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$16 -> com.sfmap.api.mapcore.ac$8:
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> a
    3977:3977:void <init>(com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    3979:3980:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$2 -> com.sfmap.api.mapcore.ac$9:
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> a
    375:375:void <init>(com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    377:377:android.view.View getInfoWindow(com.sfmap.api.maps.model.Marker) -> getInfoWindow
    381:381:android.view.View getInfoContents(com.sfmap.api.maps.model.Marker) -> getInfoContents
com.sfmap.api.mapcore.MapDelegateImp$3 -> com.sfmap.api.mapcore.ac$10:
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> a
    674:674:void <init>(com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    679:684:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$4 -> com.sfmap.api.mapcore.ac$11:
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> a
    801:801:void <init>(com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    803:807:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$5 -> com.sfmap.api.mapcore.ac$12:
    java.lang.String val$stylePath -> a
    java.lang.String val$iconPath -> b
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> c
    926:926:void <init>(com.sfmap.api.mapcore.MapDelegateImp,java.lang.String,java.lang.String) -> <init>
    929:932:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$6 -> com.sfmap.api.mapcore.ac$13:
    int val$mapStyleType -> a
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> b
    938:938:void <init>(com.sfmap.api.mapcore.MapDelegateImp,int) -> <init>
    941:944:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$7 -> com.sfmap.api.mapcore.ac$14:
    com.sfmap.api.maps.model.LatLngBounds val$localLatLngBounds -> a
    int val$width -> b
    int val$height -> c
    int val$padding -> d
    long val$duration -> e
    com.sfmap.api.maps.MapController$CancelableCallback val$localCancelableCallback -> f
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> g
    1439:1439:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.maps.model.LatLngBounds,int,int,int,long,com.sfmap.api.maps.MapController$CancelableCallback) -> <init>
    1444:1449:void onFinish() -> onFinish
    1455:1457:void onCancel() -> onCancel
com.sfmap.api.mapcore.MapDelegateImp$8 -> com.sfmap.api.mapcore.ac$15:
    long val$start -> a
    android.view.animation.Interpolator val$interpolator -> b
    com.sfmap.api.maps.model.LatLng val$latLng -> c
    com.sfmap.api.maps.model.LatLng val$startLatLng -> d
    com.sfmap.api.maps.model.Marker val$marker -> e
    android.os.Handler val$handler -> f
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> g
    1652:1652:void <init>(com.sfmap.api.mapcore.MapDelegateImp,long,android.view.animation.Interpolator,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.Marker,android.os.Handler) -> <init>
    1655:1669:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$9 -> com.sfmap.api.mapcore.ac$16:
    com.sfmap.api.maps.model.LatLngBounds$Builder val$builder -> a
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> b
    1729:1729:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.maps.model.LatLngBounds$Builder) -> <init>
    1732:1738:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$MapDelegateHandlerDecode -> com.sfmap.api.mapcore.ac$a:
    com.sfmap.api.mapcore.MapDelegateImp mapDelegateImp -> a
    boolean isShowToast -> b
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> c
    4117:4120:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    4124:4423:void handleMessage(android.os.Message) -> handleMessage
com.sfmap.api.mapcore.MapDelegateImp$MapMultiTouchDragListener -> com.sfmap.api.mapcore.ac$b:
    float startX1 -> g
    float startX2 -> h
    float startY1 -> i
    float startY2 -> j
    float startK -> k
    java.lang.Float a -> a
    java.lang.Float b -> b
    com.sfmap.mapcore.IPoint c -> c
    float d -> d
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate e -> e
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> f
    3102:3123:void onMultiTouchGestureInit(float,float,float,float,float) -> a
    3126:3136:void <init>(com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    3146:3189:boolean onMultiTouchDraging(android.view.MotionEvent,float,float,float,float) -> a
    3194:3217:void onMultiTouchSingleTap() -> a
    3088:3088:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.mapcore.MapDelegateImp$1) -> <init>
com.sfmap.api.mapcore.MapDelegateImp$MapTouchEventHandler -> com.sfmap.api.mapcore.ac$c:
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> a
    3702:3703:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    3706:3715:void handleMessage(android.os.Message) -> handleMessage
com.sfmap.api.mapcore.MapDelegateImp$MapViewDoubleClickListener -> com.sfmap.api.mapcore.ac$d:
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> a
    2775:2776:void <init>(com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    2783:2816:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    2820:2820:boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    2825:2989:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    2773:2773:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.mapcore.MapDelegateImp$1) -> <init>
com.sfmap.api.mapcore.MapDelegateImp$MapViewDoubleClickListener$1 -> com.sfmap.api.mapcore.ac$d$1:
    java.lang.Object val$hitMarker -> a
    com.sfmap.api.mapcore.MapDelegateImp$MapViewDoubleClickListener this$1 -> b
    2885:2885:void <init>(com.sfmap.api.mapcore.MapDelegateImp$MapViewDoubleClickListener,java.lang.Object) -> <init>
    2890:2895:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$MapViewDoubleClickListener$2 -> com.sfmap.api.mapcore.ac$d$2:
    android.view.MotionEvent val$paramMotionEvent -> a
    com.sfmap.api.mapcore.MapDelegateImp$MapViewDoubleClickListener this$1 -> b
    2959:2959:void <init>(com.sfmap.api.mapcore.MapDelegateImp$MapViewDoubleClickListener,android.view.MotionEvent) -> <init>
    2965:2980:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$MapViewDoubleClickListener$2$1 -> com.sfmap.api.mapcore.ac$d$2$1:
    com.sfmap.api.maps.model.Poi val$localPoi -> a
    com.sfmap.api.mapcore.MapDelegateImp$MapViewDoubleClickListener$2 this$2 -> b
    2972:2972:void <init>(com.sfmap.api.mapcore.MapDelegateImp$MapViewDoubleClickListener$2,com.sfmap.api.maps.model.Poi) -> <init>
    2976:2977:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$MapViewGestureDetectorListener -> com.sfmap.api.mapcore.ac$e:
    com.sfmap.mapcore.FPoint downPnt -> a
    com.sfmap.mapcore.IPoint downIPnt -> b
    com.sfmap.mapcore.IPoint iPnt -> c
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate changeGeoCenter -> d
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> e
    2487:2502:boolean onDown(android.view.MotionEvent) -> onDown
    2510:2543:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    2549:2576:void onLongPress(android.view.MotionEvent) -> onLongPress
    2582:2623:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    2626:2634:void <init>(com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    2638:2638:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    2643:2643:void onShowPress(android.view.MotionEvent) -> onShowPress
    2479:2479:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.mapcore.MapDelegateImp$1) -> <init>
com.sfmap.api.mapcore.MapDelegateImp$MyRotateListener -> com.sfmap.api.mapcore.ac$f:
    float a -> a
    float b -> b
    com.sfmap.mapcore.IPoint c -> c
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate d -> d
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> e
    3000:3007:void <init>(com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    3013:3029:boolean onRotate(com.sfmap.api.mapcore.util.RotateGestureDetectorDecode) -> a
    3037:3065:boolean onRotateBegin(com.sfmap.api.mapcore.util.RotateGestureDetectorDecode) -> b
    3071:3084:void onRotateEnd(com.sfmap.api.mapcore.util.RotateGestureDetectorDecode) -> c
    2993:2993:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.mapcore.MapDelegateImp$1) -> <init>
com.sfmap.api.mapcore.MapDelegateImp$MyScaleGestureDetector -> com.sfmap.api.mapcore.ac$g:
    float scaleBeginZoom -> c
    com.sfmap.mapcore.IPoint d -> d
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate comeraUpdateFactoryDelegate -> a
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> b
    2414:2421:void <init>(com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    2424:2436:boolean onScale(com.sfmap.api.mapcore.util.SfScaleGestureDetector) -> a
    2441:2463:boolean onScaleBegin(com.sfmap.api.mapcore.util.SfScaleGestureDetector) -> b
    2467:2476:void onScaleEnd(com.sfmap.api.mapcore.util.SfScaleGestureDetector) -> c
    2414:2414:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.mapcore.MapDelegateImp$1) -> <init>
com.sfmap.api.mapcore.MapDelegateImp$MyTask -> com.sfmap.api.mapcore.ac$h:
    com.sfmap.api.mapcore.MapDelegateImp map -> a
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> b
    3785:3787:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    3790:3795:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$RemoveCacheRunnable -> com.sfmap.api.mapcore.ac$i:
    android.content.Context context -> b
    com.sfmap.api.maps.MapController$OnCacheRemoveListener listener -> c
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> a
    3611:3614:void <init>(com.sfmap.api.mapcore.MapDelegateImp,android.content.Context,com.sfmap.api.maps.MapController$OnCacheRemoveListener) -> <init>
    3617:3641:void run() -> run
    3644:3644:boolean equals(java.lang.Object) -> equals
com.sfmap.api.mapcore.MapDelegateImp$TimeChangedReceiver -> com.sfmap.api.mapcore.ac$j:
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> a
    405:406:void <init>(com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    409:415:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.sfmap.api.mapcore.MapDelegateImp$a -> com.sfmap.api.mapcore.ac$k:
    boolean b -> a
    boolean c -> b
    com.sfmap.mapcore.GLMapResManager$MapViewMode d -> c
    com.sfmap.mapcore.GLMapResManager$MapViewTime e -> d
    com.sfmap.mapcore.GLMapResManager$MapViewModeState f -> e
    4081:4084:void <init>() -> <init>
    4090:4091:void run() -> run
    4081:4081:void <init>(com.sfmap.api.mapcore.MapDelegateImp$1) -> <init>
com.sfmap.api.mapcore.MapDelegateImp$aaa -> com.sfmap.api.mapcore.ac$l:
    com.sfmap.api.mapcore.MapDelegateImp map -> f
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> g
    4099:4104:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    4107:4110:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$ffff -> com.sfmap.api.mapcore.ac$m:
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> a
    3720:3721:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    3724:3730:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$gggg -> com.sfmap.api.mapcore.ac$n:
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> a
    3735:3736:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    3739:3743:void run() -> run
com.sfmap.api.mapcore.MapDelegateImp$mVerfy -> com.sfmap.api.mapcore.ac$o:
    int count -> a
    com.sfmap.api.mapcore.MapDelegateImp this$0 -> b
    4427:4429:void <init>(com.sfmap.api.mapcore.MapDelegateImp,com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    4440:4481:void run() -> run
com.sfmap.api.mapcore.MapFragmentDelegateImp -> com.sfmap.api.mapcore.ad:
    com.sfmap.api.mapcore.IMapDelegate mapDelegate -> c
    android.content.Context context -> a
    int visibility -> b
    int viewType -> d
    com.sfmap.api.maps.MapOptions mapOptions -> e
    21:29:void <init>(int) -> <init>
    33:36:void setContext(android.content.Context) -> a
    40:41:void setMapOptions(com.sfmap.api.maps.MapOptions) -> a
    47:74:com.sfmap.api.mapcore.IMapDelegate getMapDelegate() -> a
    80:82:void onInflate(android.app.Activity,com.sfmap.api.maps.MapOptions,android.os.Bundle) -> a
    87:88:void onCreate(android.os.Bundle) -> a
    94:150:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    156:194:void init(com.sfmap.api.maps.MapOptions) -> b
    199:202:void onResume() -> b
    207:210:void onPause() -> c
    214:214:void onDestroyView() -> d
    219:225:void onDestroy() -> e
    231:231:void onLowMemory() -> f
    236:250:void onSaveInstanceState(android.os.Bundle) -> b
    254:258:void setVisible(int) -> a
com.sfmap.api.mapcore.MapGLSurfaceView -> com.sfmap.api.mapcore.MapGLSurfaceView:
    com.sfmap.api.mapcore.IMapDelegate map -> a
    14:15:void <init>(android.content.Context) -> <init>
    10:21:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    26:26:com.sfmap.api.mapcore.IMapDelegate getMapDelegate() -> getMapDelegate
    31:32:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.sfmap.api.mapcore.MapGLTextureView -> com.sfmap.api.mapcore.MapGLTextureView:
    com.sfmap.api.mapcore.IMapDelegate mapDelegate -> a
    15:16:void <init>(android.content.Context) -> <init>
    11:22:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    26:26:com.sfmap.api.mapcore.IMapDelegate getMapDelegate() -> getMapDelegate
    31:32:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    35:35:void setZOrderOnTop(boolean) -> setZOrderOnTop
com.sfmap.api.mapcore.MapMessageDecode -> com.sfmap.api.mapcore.ae:
    int id -> a
    boolean enabled -> b
    25:25:boolean getEnabled() -> a
    30:31:com.sfmap.api.mapcore.MapMessageDecode setEnabled(boolean) -> a
    35:37:void <init>(int) -> <init>
com.sfmap.api.mapcore.MapMessageQueueDecode -> com.sfmap.api.mapcore.af:
    com.sfmap.api.mapcore.MapDelegateImp map -> a
    java.util.concurrent.CopyOnWriteArrayList b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    10:31:void <init>(com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    14:31:void <init>() -> <init>
    18:28:void destory() -> a
    35:38:void addMapMessage(com.sfmap.api.mapcore.MapMessageDecode) -> a
    42:47:com.sfmap.api.mapcore.MapMessageDecode getMapMessage() -> b
    52:52:int c() -> c
    57:60:void addMessage(com.sfmap.api.mapcore.CameraUpdateFactoryDelegate) -> a
    64:70:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate getMessage() -> d
    75:75:int e() -> e
    80:81:void f() -> f
com.sfmap.api.mapcore.MapOnLocationChangedListener -> com.sfmap.api.mapcore.ag:
    com.sfmap.api.mapcore.IMapDelegate map -> b
    android.location.Location location -> a
    15:17:void <init>(com.sfmap.api.mapcore.IMapDelegate) -> <init>
    21:33:void onLocationChanged(android.location.Location) -> onLocationChanged
com.sfmap.api.mapcore.MapOverlayImageViewDecode -> com.sfmap.api.mapcore.ah:
    java.util.concurrent.locks.Lock lock -> b
    com.sfmap.api.mapcore.IMapDelegate map -> a
    java.util.concurrent.CopyOnWriteArrayList markers -> c
    java.util.concurrent.CopyOnWriteArrayList overlayitem -> d
    java.util.concurrent.CopyOnWriteArrayList recycleTextureIds -> e
    com.sfmap.api.mapcore.MapOverlayImageViewDecode$ZIndexComparator comparator -> f
    com.sfmap.mapcore.IPoint mHitMarkPoint -> g
    com.sfmap.api.mapcore.IMarkerDelegate mHitMarker -> h
    android.os.Handler handler -> i
    java.lang.Runnable sortMarkerRunnable -> j
    java.lang.Runnable reDrawRunnable -> k
    33:178:void <init>(android.content.Context,android.util.AttributeSet,com.sfmap.api.mapcore.IMapDelegate) -> <init>
    63:63:int getMarkersSize() -> a
    70:100:void clear(java.lang.String) -> a
    104:106:void addMarker(com.sfmap.api.mapcore.IMarkerDelegate) -> a
    109:119:boolean removeMarker(com.sfmap.api.mapcore.IMarkerDelegate) -> b
    126:136:void set2Top(com.sfmap.api.mapcore.IMarkerDelegate) -> c
    140:156:void showInfoWindow(com.sfmap.api.mapcore.IMarkerDelegate) -> d
    162:176:void hideInfoWindow(com.sfmap.api.mapcore.IMarkerDelegate) -> e
    197:211:void calFPoint() -> b
    217:226:void changeOverlayIndex() -> j
    230:245:void onDrawGL(javax.microedition.khronos.opengles.GL10) -> a
    249:254:boolean c() -> c
    259:259:com.sfmap.api.mapcore.IMarkerDelegate getHitMarker() -> d
    264:276:com.sfmap.api.mapcore.IMarkerDelegate getLongPressHitMarker(android.view.MotionEvent) -> a
    281:288:void a(com.sfmap.api.mapcore.OverlayTextureItem) -> a
    292:297:void a(int) -> a
    301:304:void a(java.lang.Integer) -> a
    308:320:int a(com.sfmap.api.maps.model.BitmapDescriptor) -> a
    327:349:void destroy() -> e
    354:373:boolean b(android.view.MotionEvent) -> b
    378:378:boolean hitTest(android.graphics.Rect,int,int) -> a
    383:412:java.util.List getMapScreenMarkers() -> f
    417:422:void g() -> g
    426:428:void sortMarkers() -> h
    448:449:void postDraw() -> i
    30:30:void access$000(com.sfmap.api.mapcore.MapOverlayImageViewDecode) -> a
com.sfmap.api.mapcore.MapOverlayImageViewDecode$1 -> com.sfmap.api.mapcore.ah$1:
    com.sfmap.api.mapcore.MapOverlayImageViewDecode this$0 -> a
    42:42:void <init>(com.sfmap.api.mapcore.MapOverlayImageViewDecode) -> <init>
    46:47:void run() -> run
com.sfmap.api.mapcore.MapOverlayImageViewDecode$2 -> com.sfmap.api.mapcore.ah$2:
    com.sfmap.api.mapcore.MapOverlayImageViewDecode this$0 -> a
    178:178:void <init>(com.sfmap.api.mapcore.MapOverlayImageViewDecode) -> <init>
    184:192:void run() -> run
com.sfmap.api.mapcore.MapOverlayImageViewDecode$ZIndexComparator -> com.sfmap.api.mapcore.ah$a:
    430:430:void <init>() -> <init>
    432:442:int compare(java.lang.Object,java.lang.Object) -> compare
com.sfmap.api.mapcore.MapOverlayViewGroupDecode -> com.sfmap.api.mapcore.ai:
    com.sfmap.api.mapcore.IMapDelegate map -> a
    23:26:void <init>(android.content.Context,com.sfmap.api.mapcore.IMapDelegate) -> <init>
    72:88:void onLayout(boolean,int,int,int,int) -> onLayout
    92:100:void layoutView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    104:131:void layoutMap(android.view.View,com.sfmap.api.mapcore.MapOverlayViewGroupDecode$LayoutParamsExt) -> a
    133:133:void a() -> a
    137:163:void doMeasure(android.view.View,int,int,int[]) -> a
    167:184:void doLayout(android.view.View,int,int,int,int,int) -> a
com.sfmap.api.mapcore.MapOverlayViewGroupDecode$LayoutParamsExt -> com.sfmap.api.mapcore.ai$a:
    com.sfmap.mapcore.FPoint point -> a
    int mapx -> b
    int mapy -> c
    int alignment -> d
    43:55:void <init>(int,int,com.sfmap.mapcore.FPoint,int,int,int) -> <init>
    43:66:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
com.sfmap.api.mapcore.MarkerDelegateImp -> com.sfmap.api.mapcore.aj:
    int index -> a
    boolean bitmapBufferInit -> b
    boolean windowShowing -> c
    boolean d -> d
    float e -> e
    float rotateAngle -> f
    boolean flat -> g
    int offsetX -> h
    int offsetY -> i
    int j -> j
    int k -> k
    int x -> l
    int y -> m
    com.sfmap.mapcore.FPoint glPoint -> n
    float[] pointFloatArray -> o
    int[] TextureIDs -> p
    float zIndex -> q
    boolean r -> r
    java.nio.FloatBuffer verticesBuffer -> s
    java.lang.String sid -> t
    com.sfmap.api.maps.model.LatLng lonlatPoint -> u
    com.sfmap.api.maps.model.LatLng v -> v
    java.lang.String title -> w
    java.lang.String snippet -> x
    float anchorU -> y
    float anchorV -> z
    boolean isDraggable -> A
    boolean isVisible -> B
    com.sfmap.api.mapcore.MapOverlayImageViewDecode mapOverlay -> C
    java.nio.FloatBuffer coordBuffer -> D
    java.lang.Object object -> E
    boolean perspective -> F
    java.util.concurrent.CopyOnWriteArrayList icons -> G
    boolean isPerspective -> H
    boolean initTexture -> I
    boolean isOneIcon -> J
    int K -> K
    int period -> L
    boolean isPixePoint -> M
    int xPixel -> N
    int yPixel -> O
    long P -> P
    32:33:java.lang.String CreateId(java.lang.String) -> c
    55:63:void setRotateAngle(float) -> a
    69:69:boolean x() -> u
    74:107:void realdestroy() -> v
    113:135:void destroy() -> o
    156:161:void clearIcons() -> G
    165:173:void icons(java.util.ArrayList) -> b
    36:774:void <init>(com.sfmap.api.maps.model.MarkerOptions,com.sfmap.api.mapcore.MapOverlayImageViewDecode) -> <init>
    224:227:int getIconWidth() -> H
    234:237:int getIconHeight() -> I
    242:293:android.graphics.Rect getRect() -> c
    298:305:boolean remove() -> a
    313:316:void highFreq() -> K
    320:329:com.sfmap.api.maps.model.LatLng getPosition() -> d
    334:337:java.lang.String getId() -> g
    342:369:void setPosition(com.sfmap.api.maps.model.LatLng) -> a
    373:375:void title(java.lang.String) -> a
    379:379:java.lang.String getTitle() -> h
    384:386:void setSnippet(java.lang.String) -> b
    390:390:java.lang.String getSnippet() -> i
    395:397:void a(boolean) -> a
    403:427:void setIcons(java.util.ArrayList) -> a
    431:439:java.util.ArrayList getIcons() -> t
    446:472:void icon(com.sfmap.api.maps.model.BitmapDescriptor) -> a
    478:496:com.sfmap.api.maps.model.BitmapDescriptor getBitmapDescriptor() -> J
    505:505:boolean isDraggable() -> j
    510:515:void showInfoWindow() -> k
    519:526:void hideInfoWindow() -> l
    530:534:void windowShowing(boolean) -> b
    538:538:boolean isInfoWindowShow() -> m
    543:551:void setVisible(boolean) -> c
    555:555:boolean isVisible() -> n
    564:575:void setAnchor(float,float) -> a
    580:584:boolean a(com.sfmap.api.mapcore.IMarkerDelegate) -> a
    589:589:int hashCode() -> hashCode
    596:601:boolean calFPoint() -> p
    607:630:void drawMarker(com.sfmap.api.mapcore.IMapDelegate) -> a
    634:637:void a(float,float,com.sfmap.mapcore.IPoint) -> a
    641:661:void a(int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    665:754:void drawMarker(javax.microedition.khronos.opengles.GL10,com.sfmap.api.mapcore.IMapDelegate) -> a
    758:765:int getTextureID(javax.microedition.khronos.opengles.GL10) -> a
    778:778:boolean c() -> b
    783:788:void setPeriod(int) -> a
    792:793:void setObject(java.lang.Object) -> a
    797:797:java.lang.Object getObject() -> q
    812:812:int getPeriod() -> s
    817:825:com.sfmap.api.maps.model.LatLng g() -> f
    830:831:void setToTop() -> w
    836:838:void setFlat(boolean) -> d
    842:842:boolean isFlat() -> x
    847:847:float getRotateAngle() -> r
    852:852:int B() -> y
    857:857:int C() -> z
    862:879:void setPositionByPixels(int,int) -> a
    883:883:int D() -> A
    888:888:int E() -> B
    893:893:com.sfmap.mapcore.FPoint anchorUVoff() -> e
    898:898:boolean F() -> C
    903:905:void setZIndex(float) -> b
    909:909:float getZIndex() -> D
    914:924:boolean isInScreen() -> E
    929:936:void setGeoPoint(com.sfmap.mapcore.IPoint) -> a
    940:946:com.sfmap.mapcore.IPoint getGeoPoint() -> F
    29:29:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.MyLocationOverlayDecode -> com.sfmap.api.mapcore.ak:
    com.sfmap.api.mapcore.IMapDelegate map -> a
    com.sfmap.api.maps.model.Marker point -> b
    com.sfmap.api.mapcore.ICircleDelegate c -> c
    com.sfmap.api.maps.model.MyLocationStyle d -> d
    com.sfmap.api.maps.model.LatLng e -> e
    double f -> f
    android.content.Context context -> g
    com.sfmap.api.mapcore.SensorEventHelperDecode h -> h
    int i -> i
    boolean j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    boolean m -> m
    26:36:void <init>(com.sfmap.api.mapcore.IMapDelegate,android.content.Context) -> <init>
    40:51:void setMyLocationStyle(com.sfmap.api.maps.model.MyLocationStyle) -> a
    54:67:void a(int) -> a
    70:73:void a() -> a
    76:79:void b() -> b
    82:91:void g() -> i
    94:103:void h() -> j
    106:120:void i() -> k
    123:124:void unregisterSensorListener() -> c
    130:143:void setCustomType() -> d
    146:154:void b(float) -> b
    157:165:void c(float) -> c
    168:196:void setCentAndRadius(android.location.Location) -> a
    213:226:void j() -> l
    229:237:void k() -> m
    241:246:void remove() -> e
    249:265:void l() -> n
    269:292:void m() -> o
    295:298:void setRotateAngle(float) -> a
    301:304:java.lang.String getId() -> f
    309:312:java.lang.String e() -> g
    316:318:void f() -> h
com.sfmap.api.mapcore.NavigateArrowDelegateImpDecode -> com.sfmap.api.mapcore.al:
    com.sfmap.api.mapcore.IMapDelegate mMapDelegate -> j
    float width -> k
    int topColor -> l
    int sideColor -> m
    float zIndex -> n
    boolean visible -> o
    java.lang.String objId -> p
    java.util.concurrent.CopyOnWriteArrayList pointList -> q
    int pointSize -> r
    boolean inBounds -> s
    float topColorAlpha -> a
    float topColorRed -> b
    float topColorGreen -> c
    float topColorBlue -> d
    float sideColorAlpha -> e
    float sideColorRed -> f
    float sideColorGreen -> g
    float sideColorBlue -> h
    com.sfmap.api.maps.model.LatLngBounds arrowBound -> t
    int[] lnglatPoints -> i
    22:54:void <init>(com.sfmap.api.mapcore.IMapDelegate) -> <init>
    59:81:void b(java.util.List) -> b
    86:88:void remove() -> b
    93:96:java.lang.String getId() -> c
    102:103:void setPoints(java.util.List) -> a
    108:108:java.util.List getPoints() -> m
    114:127:java.util.List n() -> n
    133:135:void setWidth(float) -> b
    140:140:float getWidth() -> h
    146:152:void setTopColor(int) -> a
    157:157:int getTopColor() -> i
    163:169:void setSideColor(int) -> b
    174:174:int getSideColor() -> l
    180:183:void setZIndex(float) -> a
    188:188:float getZIndex() -> d
    194:196:void setVisible(boolean) -> a
    201:201:boolean isVisible() -> e
    207:211:boolean equals(com.sfmap.api.mapcore.IOverlayDelegateDecode) -> a
    217:217:int hashCodeRemote() -> f
    222:229:boolean a() -> a
    235:244:void calMapFPoint() -> g
    249:267:void draw(javax.microedition.khronos.opengles.GL10) -> a
    273:283:void destroy() -> j
    287:287:boolean checkInBounds() -> k
com.sfmap.api.mapcore.NinePatchToolDecode -> com.sfmap.api.mapcore.am:
    24:34:android.graphics.drawable.Drawable getDrawable(android.content.Context,java.lang.String) -> a
    40:55:android.graphics.Bitmap a(java.io.InputStream) -> a
    61:64:android.graphics.Bitmap getAssetsBitmap(android.content.Context,java.lang.String) -> b
    69:73:void a(byte[],android.graphics.Rect) -> a
    78:152:byte[] a(android.graphics.Bitmap) -> a
    157:190:void a(android.graphics.Bitmap,byte[]) -> a
    195:199:void a(java.io.OutputStream,int) -> a
    203:207:void a(byte[],int,int) -> a
    211:216:int a(byte[],int) -> a
com.sfmap.api.mapcore.OverlayTextureItem -> com.sfmap.api.mapcore.an:
    com.sfmap.api.maps.model.BitmapDescriptor bitmapDescriptor -> a
    int b -> b
    11:14:void <init>(com.sfmap.api.maps.model.BitmapDescriptor,int) -> <init>
    18:18:com.sfmap.api.maps.model.BitmapDescriptor getBitmapDes() -> a
    23:23:int b() -> b
com.sfmap.api.mapcore.PolygonDelegateImpDecode -> com.sfmap.api.mapcore.ao:
    com.sfmap.api.mapcore.IMapDelegate a -> a
    float b -> b
    boolean c -> c
    java.lang.String d -> d
    float e -> e
    int f -> f
    int g -> g
    java.util.List h -> h
    java.util.concurrent.CopyOnWriteArrayList i -> i
    java.nio.FloatBuffer lineVertexBuffer -> j
    java.nio.FloatBuffer trianglesVertexBuffer -> k
    int lineSize -> l
    int triangleSize -> m
    com.sfmap.api.maps.model.LatLngBounds n -> n
    boolean o -> o
    float ScaleFactor -> p
    23:50:void <init>(com.sfmap.api.mapcore.IMapDelegate) -> <init>
    55:57:void remove() -> b
    62:65:java.lang.String getId() -> c
    71:74:void a(java.util.List) -> a
    79:79:java.util.List getPoints() -> l
    85:88:void setZIndex(float) -> a
    93:93:float getZIndex() -> d
    99:101:void setVisible(boolean) -> a
    106:106:boolean isVisible() -> e
    112:116:boolean equals(com.sfmap.api.mapcore.IOverlayDelegateDecode) -> a
    122:162:void b(java.util.List) -> b
    167:205:void calMapFPoint() -> g
    210:210:int hashCodeRemote() -> f
    215:222:boolean a() -> a
    228:238:void draw(javax.microedition.khronos.opengles.GL10) -> a
    243:245:void setStrokeWidth(float) -> b
    250:250:float getStrokeWidth() -> h
    256:258:void setFillColor(int) -> a
    263:263:int getFillColor() -> i
    269:271:void setStrokeColor(int) -> b
    276:276:int getStrokeColor() -> m
    283:300:com.sfmap.mapcore.FPoint[] triangleForPoints(com.sfmap.mapcore.FPoint[]) -> a
    307:322:void destroy() -> j
    329:336:boolean contains(com.sfmap.api.maps.model.LatLng) -> a
    341:341:boolean checkInBounds() -> k
    279:279:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.PolylineDelegateImpDecode -> com.sfmap.api.mapcore.ap:
    com.sfmap.api.mapcore.GLOverlayLayerDecode layer -> a
    java.lang.String sid -> b
    java.util.List geoPoints -> c
    java.util.List points -> d
    java.util.List f -> e
    java.util.List g -> f
    java.util.List h -> g
    int[] pointArray -> h
    java.nio.FloatBuffer i -> i
    com.sfmap.api.maps.model.BitmapDescriptor bitmapDescriptor -> j
    com.sfmap.api.maps.model.LatLngBounds bounds -> k
    java.lang.Object synObj -> l
    boolean visible -> m
    boolean n -> n
    boolean isGeodesic -> o
    boolean isDottedLine -> p
    boolean isGetTexsureId -> q
    boolean r -> r
    boolean useTexture -> s
    boolean t -> t
    int drawType -> u
    int texsureId -> v
    int color -> w
    int geoPointsSize -> x
    float width -> y
    float zIndex -> z
    float A -> A
    float alpha -> B
    float red_color -> C
    float green_color -> D
    float blue_color -> E
    float transparency -> F
    float G -> G
    int[] I -> H
    int[] J -> I
    double K -> J
    67:72:void setUseTexture(boolean) -> d
    77:79:void geodesic(boolean) -> b
    83:83:boolean isGeodesic() -> m
    88:96:void setDottedLine(boolean) -> c
    100:100:boolean isDottedLine() -> n
    29:115:void <init>(com.sfmap.api.mapcore.GLOverlayLayerDecode) -> <init>
    120:172:void b(java.util.List) -> b
    182:206:void insert1(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,java.util.List,com.sfmap.api.maps.model.LatLngBounds$Builder) -> b
    209:216:com.sfmap.mapcore.IPoint a(com.sfmap.mapcore.IPoint,com.sfmap.mapcore.IPoint,com.sfmap.mapcore.IPoint,double,int) -> a
    220:241:void insertPoint(java.util.List,java.util.List,double,int) -> a
    244:265:void insertPoint(java.util.List,java.util.List,double) -> a
    269:305:void insertPoint(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,java.util.List,com.sfmap.api.maps.model.LatLngBounds$Builder) -> a
    308:308:long getDisSquare(long,long,long,long) -> a
    313:327:void remove() -> b
    332:336:java.lang.String getId() -> c
    340:370:void addPoint(com.sfmap.api.maps.model.LatLng) -> a
    376:391:void setPoints(java.util.List) -> a
    393:400:void getGeoArray() -> o
    404:404:java.util.List getPoints() -> l
    410:412:void setWidth(float) -> b
    417:417:float getWidth() -> h
    422:434:void setColor(int) -> a
    439:439:int getColor() -> i
    445:448:void setZIndex(float) -> a
    453:453:float getZIndex() -> d
    459:461:void setVisible(boolean) -> a
    466:466:boolean isVisible() -> e
    472:476:boolean equals(com.sfmap.api.mapcore.IOverlayDelegateDecode) -> a
    482:482:int hashCodeRemote() -> f
    487:494:boolean a() -> a
    502:502:void calMapFPoint() -> g
    525:529:void a(com.sfmap.api.maps.model.BitmapDescriptor) -> a
    534:541:void draw(javax.microedition.khronos.opengles.GL10) -> a
    545:567:void drawLine(javax.microedition.khronos.opengles.GL10) -> b
    572:598:void drawTextureLine(javax.microedition.khronos.opengles.GL10,float) -> a
    602:614:void drawDottedLine(javax.microedition.khronos.opengles.GL10,float) -> b
    622:636:void drawSampleLine(javax.microedition.khronos.opengles.GL10,float) -> c
    687:721:void destroy() -> j
    725:725:boolean checkInBounds() -> k
    730:765:com.sfmap.api.maps.model.LatLng getNearestLatLng(com.sfmap.api.maps.model.LatLng) -> b
    867:869:void setTransparency(float) -> c
    873:887:void setTextureList(java.util.List) -> c
    891:895:void setTextureIndex(java.util.List) -> d
    899:913:void e(java.util.List) -> e
    917:923:void e(boolean) -> e
    927:950:java.util.List g(java.util.List) -> f
com.sfmap.api.mapcore.PopupOverlayDecode -> com.sfmap.api.mapcore.aq:
    boolean a -> a
    int b -> b
    int c -> c
    java.nio.FloatBuffer d -> d
    java.lang.String e -> e
    com.sfmap.mapcore.FPoint f -> f
    com.sfmap.api.maps.model.BitmapDescriptor g -> g
    boolean h -> h
    java.nio.FloatBuffer i -> i
    java.lang.Object j -> j
    int k -> k
    com.sfmap.api.mapcore.IMapDelegate l -> l
    com.sfmap.mapcore.MapProjection m -> m
    float n -> n
    float o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    int s -> s
    47:47:boolean x() -> u
    52:87:void realdestroy() -> v
    91:96:void b(com.sfmap.api.maps.model.BitmapDescriptor) -> b
    25:108:void <init>(com.sfmap.api.maps.model.MarkerOptions,com.sfmap.api.mapcore.IMapDelegate) -> <init>
    114:117:int J() -> H
    124:127:int K() -> I
    132:132:android.graphics.Rect getRect() -> c
    137:141:boolean remove() -> a
    146:149:void M() -> K
    153:153:com.sfmap.api.maps.model.LatLng getPosition() -> d
    158:161:java.lang.String getId() -> g
    166:170:void a(com.sfmap.mapcore.FPoint) -> a
    172:172:void setPosition(com.sfmap.api.maps.model.LatLng) -> a
    174:174:void title(java.lang.String) -> a
    178:178:java.lang.String getTitle() -> h
    181:181:void setSnippet(java.lang.String) -> b
    185:185:java.lang.String getSnippet() -> i
    188:188:void a(boolean) -> a
    190:190:void setIcons(java.util.ArrayList) -> a
    194:194:java.util.ArrayList getIcons() -> t
    199:211:void icon(com.sfmap.api.maps.model.BitmapDescriptor) -> a
    215:215:com.sfmap.api.maps.model.BitmapDescriptor L() -> J
    220:220:boolean isDraggable() -> j
    223:223:void showInfoWindow() -> k
    225:225:void hideInfoWindow() -> l
    229:229:boolean isInfoWindowShow() -> m
    234:238:void setVisible(boolean) -> c
    242:242:boolean isVisible() -> n
    247:252:void setAnchor(float,float) -> a
    257:261:boolean a(com.sfmap.api.mapcore.IMarkerDelegate) -> a
    266:266:int hashCode() -> hashCode
    273:323:boolean calFPoint() -> p
    328:348:void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    352:395:void onDrawGL(javax.microedition.khronos.opengles.GL10) -> a
    397:397:void a() -> G
    401:408:int b(javax.microedition.khronos.opengles.GL10) -> b
    415:415:boolean c() -> b
    420:425:void setPeriod(int) -> a
    429:430:void setObject(java.lang.Object) -> a
    434:434:java.lang.Object getObject() -> q
    446:446:int getPeriod() -> s
    451:451:com.sfmap.api.maps.model.LatLng g() -> f
    454:454:void setToTop() -> w
    459:460:void setFlat(boolean) -> d
    464:464:boolean isFlat() -> x
    469:469:void setRotateAngle(float) -> a
    471:471:void destroy() -> o
    473:473:void drawMarker(javax.microedition.khronos.opengles.GL10,com.sfmap.api.mapcore.IMapDelegate) -> a
    477:477:float getRotateAngle() -> r
    483:485:void b(int,int) -> b
    489:489:int B() -> y
    494:494:int C() -> z
    497:497:void setPositionByPixels(int,int) -> a
    501:501:int D() -> A
    506:506:int E() -> B
    511:511:com.sfmap.mapcore.FPoint anchorUVoff() -> e
    516:516:boolean F() -> C
    519:519:void setZIndex(float) -> b
    523:523:float getZIndex() -> D
    528:528:boolean isInScreen() -> E
    531:531:void windowShowing(boolean) -> b
    533:533:void setGeoPoint(com.sfmap.mapcore.IPoint) -> a
    537:537:com.sfmap.mapcore.IPoint getGeoPoint() -> F
com.sfmap.api.mapcore.ProjectionDelegateImpDecode -> com.sfmap.api.mapcore.ar:
    com.sfmap.api.mapcore.IMapDelegate mapDelegate -> a
    21:23:void <init>(com.sfmap.api.mapcore.IMapDelegate) -> <init>
    28:33:com.sfmap.api.maps.model.LatLng fromScreenLocation(android.graphics.Point) -> a
    39:45:android.graphics.Point toScreenLocation(com.sfmap.api.maps.model.LatLng) -> a
    51:59:com.sfmap.api.maps.model.VisibleRegion getVisibleRegion() -> a
    65:71:android.graphics.PointF toMapLocation(com.sfmap.api.maps.model.LatLng) -> b
    76:79:float toOpenGLWidth(int) -> a
    85:103:com.sfmap.api.maps.model.TileProjection fromBoundsToTile(com.sfmap.api.maps.model.LatLngBounds,int,int) -> a
    109:112:com.sfmap.api.maps.model.LatLngBounds getMapBounds(com.sfmap.api.maps.model.LatLng,float) -> a
com.sfmap.api.mapcore.ScaleViewDecode -> com.sfmap.api.mapcore.as:
    java.lang.String mScaleText -> a
    int mScaleLength -> b
    com.sfmap.api.mapcore.MapDelegateImp mMapView -> c
    android.graphics.Paint mPaint -> d
    android.graphics.Paint mTextPanit -> e
    android.graphics.Rect bounds -> f
    boolean customPosition -> g
    int y -> h
    int x -> i
    int margin -> j
    26:30:void a() -> a
    13:51:void <init>(android.content.Context,com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    55:89:void onDraw(android.graphics.Canvas) -> onDraw
    92:95:void setScaleViewPosition(int,int) -> a
    98:99:void setScaleText(java.lang.String) -> a
    103:104:void setScaleLength(int) -> a
com.sfmap.api.mapcore.SensorEventHelperDecode -> com.sfmap.api.mapcore.at:
    android.hardware.SensorManager sensorManager -> a
    android.hardware.Sensor sensor -> b
    long c -> c
    int d -> d
    float e -> e
    android.content.Context context -> f
    com.sfmap.api.mapcore.IMapDelegate map -> g
    com.sfmap.api.maps.model.Marker marker -> h
    19:33:void <init>(android.content.Context,com.sfmap.api.mapcore.IMapDelegate) -> <init>
    37:38:void a() -> a
    42:43:void b() -> b
    47:48:void a(com.sfmap.api.maps.model.Marker) -> a
    50:50:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    54:90:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    94:106:int a(android.content.Context) -> a
com.sfmap.api.mapcore.TextDelegateImp -> com.sfmap.api.mapcore.au:
    int index -> a
    float rotate -> b
    float rotateAngle -> c
    int d -> d
    int e -> e
    com.sfmap.mapcore.FPoint glPoint -> f
    int textureId -> g
    android.graphics.Bitmap bitmap -> h
    java.nio.FloatBuffer floatBuffer -> i
    java.lang.String id -> j
    com.sfmap.api.maps.model.LatLng position -> k
    float anchorU -> l
    float anchorV -> m
    boolean visible -> n
    com.sfmap.api.mapcore.MapOverlayImageViewDecode mapOverlay -> o
    java.nio.FloatBuffer floatBuffer1 -> p
    java.lang.Object object -> q
    java.lang.String text -> r
    int backgroundColor -> s
    int fontColor -> t
    int fontSize -> u
    android.graphics.Typeface typeface -> v
    float zIndex -> w
    android.graphics.Rect rect -> x
    android.graphics.Paint paint -> y
    android.os.Handler handler -> z
    java.lang.Runnable runnable -> A
    boolean B -> B
    boolean C -> C
    31:32:java.lang.String CreateId(java.lang.String) -> d
    71:74:void setRotateAngle(float) -> a
    80:80:boolean x() -> u
    85:115:void realdestroy() -> v
    121:133:void destroy() -> o
    35:306:void <init>(com.sfmap.api.maps.model.TextOptions,com.sfmap.api.mapcore.MapOverlayImageViewDecode) -> <init>
    159:189:void initBitmap() -> N
    193:195:boolean remove() -> a
    200:203:void setRunFrame() -> O
    207:207:com.sfmap.api.maps.model.LatLng getPosition() -> d
    212:215:java.lang.String getId() -> g
    220:223:void setPosition(com.sfmap.api.maps.model.LatLng) -> a
    225:225:void title(java.lang.String) -> a
    229:229:java.lang.String getTitle() -> h
    232:232:void setSnippet(java.lang.String) -> b
    236:236:java.lang.String getSnippet() -> i
    239:239:void a(boolean) -> a
    241:241:void setIcons(java.util.ArrayList) -> a
    245:245:java.util.ArrayList getIcons() -> t
    248:248:void icon(com.sfmap.api.maps.model.BitmapDescriptor) -> a
    252:252:boolean isDraggable() -> j
    255:255:void showInfoWindow() -> k
    257:257:void hideInfoWindow() -> l
    261:261:boolean isInfoWindowShow() -> m
    266:271:void setVisible(boolean) -> c
    275:275:boolean isVisible() -> n
    280:282:void setZIndex(float) -> b
    286:286:float getZIndex() -> D
    289:289:void setAnchor(float,float) -> a
    294:298:boolean a(com.sfmap.api.mapcore.IMarkerDelegate) -> a
    303:303:int hashCode() -> hashCode
    310:315:boolean calFPoint() -> p
    321:332:void a(com.sfmap.api.mapcore.IMapDelegate) -> a
    342:362:void displayTextureLabel(int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    366:398:void drawMarker(javax.microedition.khronos.opengles.GL10,com.sfmap.api.mapcore.IMapDelegate) -> a
    402:409:int getTexsureId(javax.microedition.khronos.opengles.GL10) -> a
    414:414:boolean c() -> b
    417:417:void setPeriod(int) -> a
    421:422:void setObject(java.lang.Object) -> a
    426:426:java.lang.Object getObject() -> q
    438:438:int getPeriod() -> s
    443:443:com.sfmap.api.maps.model.LatLng g() -> f
    448:449:void setToTop() -> w
    453:453:void setFlat(boolean) -> d
    457:457:boolean isFlat() -> x
    462:462:float getRotateAngle() -> r
    467:467:int B() -> y
    472:472:int C() -> z
    475:475:void setPositionByPixels(int,int) -> a
    479:479:int D() -> A
    484:484:int E() -> B
    489:489:com.sfmap.mapcore.FPoint anchorUVoff() -> e
    494:494:boolean F() -> C
    499:499:android.graphics.Rect getRect() -> c
    505:507:void c(java.lang.String) -> c
    512:512:java.lang.String a() -> G
    518:520:void b(int) -> b
    525:525:int J() -> H
    531:533:void c(int) -> c
    538:538:int K() -> I
    544:546:void d(int) -> d
    551:551:int L() -> J
    557:559:void a(android.graphics.Typeface) -> a
    564:564:android.graphics.Typeface M() -> K
    570:602:void b(int,int) -> b
    607:607:int N() -> L
    612:612:int O() -> M
    617:619:void R() -> P
    623:627:boolean isInScreen() -> E
    630:630:void windowShowing(boolean) -> b
    632:632:void setGeoPoint(com.sfmap.mapcore.IPoint) -> a
    636:636:com.sfmap.mapcore.IPoint getGeoPoint() -> F
    24:24:void access$000(com.sfmap.api.mapcore.TextDelegateImp) -> a
    24:24:boolean access$102(com.sfmap.api.mapcore.TextDelegateImp,boolean) -> a
    24:24:void access$200(com.sfmap.api.mapcore.TextDelegateImp) -> b
    27:27:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.TextDelegateImp$1 -> com.sfmap.api.mapcore.au$1:
    com.sfmap.api.mapcore.TextDelegateImp this$0 -> a
    60:60:void <init>(com.sfmap.api.mapcore.TextDelegateImp) -> <init>
    63:66:void run() -> run
com.sfmap.api.mapcore.TileOverlayDelegateImp -> com.sfmap.api.mapcore.av:
    com.sfmap.api.mapcore.TileOverlayViewDecode mTileOverlayView -> a
    com.sfmap.api.maps.model.TileProvider tileProvider -> b
    java.lang.Float mZIndex -> c
    boolean mVisible -> d
    boolean e -> e
    com.sfmap.api.mapcore.IMapDelegate mMap -> f
    int index -> g
    int tileWidth -> h
    int tileHeight -> i
    int iLayerIndex -> j
    com.sfmap.api.mapcore.util.ImageFetcherDecode mImageFetcher -> k
    java.util.concurrent.CopyOnWriteArrayList listTileDraw -> l
    boolean isFlingState -> m
    com.sfmap.api.mapcore.TileOverlayDelegateImp$TileServer tileServer -> n
    java.lang.String mId -> o
    java.nio.FloatBuffer coordBuffer -> p
    45:46:java.lang.String CreateId(java.lang.String) -> a
    32:158:void <init>(com.sfmap.api.maps.model.TileOverlayOptions,com.sfmap.api.mapcore.TileOverlayViewDecode) -> <init>
    89:90:void <init>(com.sfmap.api.maps.model.TileOverlayOptions,com.sfmap.api.mapcore.TileOverlayViewDecode,boolean) -> <init>
    94:105:void remove() -> a
    109:110:void clearTileCache() -> b
    114:117:java.lang.String getId() -> c
    122:124:void setZIndex(float) -> a
    128:128:float getZIndex() -> d
    133:138:void setVisible(boolean) -> a
    142:142:boolean isVisible() -> e
    146:150:boolean equalsRemote(com.sfmap.api.mapcore.ITileOverlayDelegate) -> a
    155:155:int hashCodeRemote() -> f
    162:205:boolean calFPoint(com.sfmap.api.mapcore.TileOverlayDelegateImp$TileCoordinate) -> a
    210:249:void displayTextureLabel(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    252:276:void drawTiles(javax.microedition.khronos.opengles.GL10) -> a
    280:434:java.util.ArrayList getTilesInDomain(int,int,int) -> a
    439:501:boolean refreshLayerTiles(java.util.List,int,boolean) -> a
    506:515:void refresh(boolean) -> b
    519:522:void onPause() -> g
    526:527:void onResume() -> h
    531:535:void onFling(boolean) -> c
    26:26:java.util.ArrayList access$000(com.sfmap.api.mapcore.TileOverlayDelegateImp,int,int,int) -> a
    26:26:boolean access$100(com.sfmap.api.mapcore.TileOverlayDelegateImp,java.util.List,int,boolean) -> a
    26:26:com.sfmap.api.mapcore.IMapDelegate access$200(com.sfmap.api.mapcore.TileOverlayDelegateImp) -> a
    26:26:com.sfmap.api.mapcore.util.ImageFetcherDecode access$300(com.sfmap.api.mapcore.TileOverlayDelegateImp) -> b
    26:26:com.sfmap.api.mapcore.TileOverlayViewDecode access$400(com.sfmap.api.mapcore.TileOverlayDelegateImp) -> c
    34:34:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.TileOverlayDelegateImp$TileCoordinate -> com.sfmap.api.mapcore.av$a:
    int X -> a
    int Y -> b
    int Zoom -> c
    int d -> d
    com.sfmap.mapcore.IPoint pointGeo -> e
    int textureId -> f
    boolean isLoadTexture -> g
    java.nio.FloatBuffer verticesBuffer -> h
    android.graphics.Bitmap bitmap -> i
    com.sfmap.api.mapcore.util.ImageWorkerDecode$BitmapWorkerTask task -> j
    int k -> k
    com.sfmap.api.mapcore.TileOverlayDelegateImp this$0 -> l
    587:599:void <init>(com.sfmap.api.mapcore.TileOverlayDelegateImp,int,int,int,int) -> <init>
    629:636:boolean equals(java.lang.Object) -> equals
    640:640:int hashCode() -> hashCode
    644:652:java.lang.String toString() -> toString
    657:684:void getBitmapFromMemCache(android.graphics.Bitmap) -> a
    688:704:void destroy() -> a
com.sfmap.api.mapcore.TileOverlayDelegateImp$TileServer -> com.sfmap.api.mapcore.av$b:
    int zoom -> e
    boolean needDownload -> f
    com.sfmap.api.mapcore.TileOverlayDelegateImp this$0 -> a
    542:544:void <init>(com.sfmap.api.mapcore.TileOverlayDelegateImp,boolean) -> <init>
    551:562:java.util.List doInBackground(com.sfmap.api.mapcore.IMapDelegate[]) -> a
    567:577:void onPostExecute(java.util.List) -> a
    537:537:void onPostExecute(java.lang.Object) -> a
    537:537:java.lang.Object doInBackground(java.lang.Object[]) -> a
com.sfmap.api.mapcore.TileOverlayViewDecode -> com.sfmap.api.mapcore.aw:
    com.sfmap.api.mapcore.IMapDelegate mMap -> e
    java.util.concurrent.CopyOnWriteArrayList mTileOverlays -> a
    com.sfmap.api.mapcore.TileOverlayViewDecode$ListOverlayComparator listOverlayComparator -> b
    java.util.concurrent.CopyOnWriteArrayList recycleTextureIds -> c
    com.sfmap.api.mapcore.TileOverlayDelegateImp tileOverlayDelegateImp -> d
    22:77:void <init>(android.content.Context,com.sfmap.api.mapcore.IMapDelegate) -> <init>
    81:81:com.sfmap.api.mapcore.IMapDelegate getMap() -> getMap
    88:107:void onDrawGL(javax.microedition.khronos.opengles.GL10) -> a
    111:117:void clear() -> a
    121:127:void changeOverlayIndex() -> b
    131:134:void addTileOverlay(com.sfmap.api.mapcore.ITileOverlayDelegate) -> a
    138:138:boolean remove(com.sfmap.api.mapcore.ITileOverlayDelegate) -> b
    143:149:void refresh(boolean) -> a
    153:159:void onPause() -> c
    163:169:void onResume() -> d
    173:179:void onFling(boolean) -> b
    183:185:void destroy() -> e
com.sfmap.api.mapcore.TileOverlayViewDecode$1 -> com.sfmap.api.mapcore.aw$1:
    com.sfmap.api.mapcore.TileOverlayViewDecode this$0 -> a
    65:65:void <init>(com.sfmap.api.mapcore.TileOverlayViewDecode,int,int) -> <init>
    69:72:java.net.URL getTileUrl(int,int,int) -> getTileUrl
com.sfmap.api.mapcore.TileOverlayViewDecode$ListOverlayComparator -> com.sfmap.api.mapcore.aw$a:
    27:27:void <init>() -> <init>
    32:51:int compare(java.lang.Object,java.lang.Object) -> compare
com.sfmap.api.mapcore.UiSettingsDelegateImpDecode -> com.sfmap.api.mapcore.ax:
    com.sfmap.api.mapcore.IMapDelegate map -> b
    boolean isRotateGesturesEnabled -> c
    boolean isScrollGesturesEnabled -> d
    boolean isTiltGesturesEnabled -> e
    boolean isMyLocationButtonEnabled -> f
    boolean isZoomGesturesEnabled -> g
    boolean isZoomEnabled -> h
    boolean isCompassEnabled -> i
    boolean isScaleEnabled -> j
    int logoPosition -> k
    int zoomPosition -> l
    android.os.Handler handler -> a
    11:56:void <init>(com.sfmap.api.mapcore.IMapDelegate) -> <init>
    61:63:void setScaleControlsEnabled(boolean) -> a
    68:70:void setZoomControlsEnabled(boolean) -> b
    75:77:void setCompassEnabled(boolean) -> c
    82:84:void setMyLocationButtonEnabled(boolean) -> d
    89:90:void setScrollGesturesEnabled(boolean) -> e
    95:96:void setZoomGesturesEnabled(boolean) -> f
    101:102:void setTiltGesturesEnabled(boolean) -> g
    107:108:void setRotateGesturesEnabled(boolean) -> h
    113:117:void setAllGesturesEnabled(boolean) -> i
    122:124:void setLogoPosition(int) -> a
    129:131:void setZoomPosition(int) -> b
    135:136:void setCompassViewPosition(int,int) -> a
    140:140:boolean isScaleControlsEnabled() -> a
    146:146:boolean isZoomControlsEnabled() -> b
    152:152:boolean isCompassEnabled() -> c
    158:158:boolean isMyLocationButtonEnabled() -> d
    164:164:boolean isScrollGesturesEnabled() -> e
    170:170:boolean isZoomGesturesEnabled() -> f
    176:176:boolean isTiltGesturesEnabled() -> g
    182:182:boolean isRotateGesturesEnabled() -> h
    188:188:int getLogoPosition() -> i
    194:194:int getZoomPosition() -> j
    7:7:boolean access$000(com.sfmap.api.mapcore.UiSettingsDelegateImpDecode) -> a
    7:7:com.sfmap.api.mapcore.IMapDelegate access$100(com.sfmap.api.mapcore.UiSettingsDelegateImpDecode) -> b
    7:7:boolean access$200(com.sfmap.api.mapcore.UiSettingsDelegateImpDecode) -> c
    7:7:boolean access$300(com.sfmap.api.mapcore.UiSettingsDelegateImpDecode) -> d
    7:7:boolean access$400(com.sfmap.api.mapcore.UiSettingsDelegateImpDecode) -> e
com.sfmap.api.mapcore.UiSettingsDelegateImpDecode$1 -> com.sfmap.api.mapcore.ax$1:
    com.sfmap.api.mapcore.UiSettingsDelegateImpDecode this$0 -> a
    27:27:void <init>(com.sfmap.api.mapcore.UiSettingsDelegateImpDecode) -> <init>
    30:48:void handleMessage(android.os.Message) -> handleMessage
com.sfmap.api.mapcore.WaterMarkerViewDecode -> com.sfmap.api.mapcore.ay:
    android.graphics.Bitmap waterBitmap_white_zoom -> a
    android.graphics.Bitmap waterBitmap_black_zoom -> b
    android.graphics.Bitmap waterBitmap_white -> c
    android.graphics.Bitmap waterBitmap_black -> d
    android.graphics.Bitmap customBitmap -> e
    android.graphics.Paint mPaint -> f
    boolean isBlack -> g
    com.sfmap.api.mapcore.MapDelegateImp mMapView -> h
    int logoPosition -> i
    int topleftx -> j
    int toplefty -> k
    int imgMargin -> l
    40:65:void destroy() -> a
    28:109:void <init>(android.content.Context,com.sfmap.api.mapcore.MapDelegateImp) -> <init>
    113:120:android.graphics.Bitmap getBitmap() -> b
    129:136:void changeBitmap(boolean) -> a
    141:173:android.graphics.Point getPosition() -> c
    178:179:void setLogoPosition(int) -> a
    186:201:void onDraw(android.graphics.Canvas) -> onDraw
    204:208:void setBitMap(android.graphics.Bitmap) -> a
    211:214:void setLogoPositionByPix(int,int) -> a
com.sfmap.api.mapcore.ZoomControllerViewDecode -> com.sfmap.api.mapcore.az:
    android.graphics.Bitmap zoomin_selected_final -> a
    android.graphics.Bitmap zoomin_unselected_final -> b
    android.graphics.Bitmap zoomout_selected_final -> c
    android.graphics.Bitmap zoomout_unselected_final -> d
    android.graphics.Bitmap zoomin_pressed_final -> e
    android.graphics.Bitmap zoomout_pressed_final -> f
    android.graphics.Bitmap zoomin_selected -> g
    android.graphics.Bitmap zoomin_unselected -> h
    android.graphics.Bitmap zoomout_selected -> i
    android.graphics.Bitmap zoomout_unselected -> j
    android.graphics.Bitmap zoomin_pressed -> k
    android.graphics.Bitmap zoomout_pressed -> l
    android.widget.ImageView zoomin -> m
    android.widget.ImageView zoomout -> n
    com.sfmap.api.mapcore.IMapDelegate mMap -> o
    39:91:void a() -> a
    100:210:void <init>(android.content.Context,com.sfmap.api.mapcore.IMapDelegate) -> <init>
    214:230:void setZoomBitmap(float) -> a
    16:16:com.sfmap.api.mapcore.IMapDelegate access$000(com.sfmap.api.mapcore.ZoomControllerViewDecode) -> a
    16:16:android.graphics.Bitmap access$100(com.sfmap.api.mapcore.ZoomControllerViewDecode) -> b
    16:16:android.widget.ImageView access$200(com.sfmap.api.mapcore.ZoomControllerViewDecode) -> c
    16:16:android.graphics.Bitmap access$300(com.sfmap.api.mapcore.ZoomControllerViewDecode) -> d
    16:16:android.graphics.Bitmap access$400(com.sfmap.api.mapcore.ZoomControllerViewDecode) -> e
    16:16:android.widget.ImageView access$500(com.sfmap.api.mapcore.ZoomControllerViewDecode) -> f
    16:16:android.graphics.Bitmap access$600(com.sfmap.api.mapcore.ZoomControllerViewDecode) -> g
com.sfmap.api.mapcore.ZoomControllerViewDecode$1 -> com.sfmap.api.mapcore.az$1:
    com.sfmap.api.mapcore.ZoomControllerViewDecode this$0 -> a
    137:137:void <init>(com.sfmap.api.mapcore.ZoomControllerViewDecode) -> <init>
    144:168:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.sfmap.api.mapcore.ZoomControllerViewDecode$2 -> com.sfmap.api.mapcore.az$2:
    com.sfmap.api.mapcore.ZoomControllerViewDecode this$0 -> a
    172:172:void <init>(com.sfmap.api.mapcore.ZoomControllerViewDecode) -> <init>
    179:202:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.sfmap.api.mapcore.util.ANRLogUpDateProcessor -> com.sfmap.api.mapcore.util.a:
    boolean a -> a
    12:13:void <init>(android.content.Context) -> <init>
    17:17:java.lang.String getDir() -> a
    22:22:int getLogType() -> b
    27:47:boolean dbIsRight(android.content.Context) -> a
    8:8:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.ANRLogWriter -> com.sfmap.api.mapcore.util.b:
    java.lang.String[] a -> a
    int b -> b
    boolean c -> c
    int d -> d
    com.sfmap.api.mapcore.util.ANRLogWriter$a e -> e
    20:25:void <init>() -> <init>
    29:29:int getType() -> a
    34:34:java.lang.String getDirName() -> b
    39:40:java.lang.String toMD5Encrypt(java.lang.String) -> a
    70:79:com.sfmap.api.mapcore.util.FileOperationListenerDecode a(com.sfmap.api.mapcore.util.LogDBOperation) -> a
    84:170:java.lang.String a(java.util.List) -> a
    175:194:java.lang.String c() -> c
    201:212:void b(java.lang.String) -> b
com.sfmap.api.mapcore.util.ANRLogWriter$1 -> com.sfmap.api.mapcore.util.b$1:
com.sfmap.api.mapcore.util.ANRLogWriter$a -> com.sfmap.api.mapcore.util.b$a:
    com.sfmap.api.mapcore.util.LogDBOperation b -> b
    com.sfmap.api.mapcore.util.ANRLogWriter this$0 -> a
    49:51:void <init>(com.sfmap.api.mapcore.util.ANRLogWriter,com.sfmap.api.mapcore.util.LogDBOperation) -> <init>
    57:63:void a(java.lang.String) -> a
    43:43:void <init>(com.sfmap.api.mapcore.util.ANRLogWriter,com.sfmap.api.mapcore.util.LogDBOperation,com.sfmap.api.mapcore.util.ANRLogWriter$1) -> <init>
com.sfmap.api.mapcore.util.AnrLogEntity -> com.sfmap.api.mapcore.util.c:
    3:3:void <init>() -> <init>
    8:8:java.lang.String getTableName() -> a
com.sfmap.api.mapcore.util.AppInfo -> com.sfmap.api.mapcore.util.AppInfo:
    java.lang.String load_success -> load_success
    java.lang.String TAG -> a
    float currentZoom -> currentZoom
    java.lang.String appName -> b
    java.lang.String packageName -> c
    java.lang.String appVersion -> d
    double lng -> e
    double lat -> f
    int appVersionCode -> g
    int NormalVersion -> NormalVersion
    int OrderVersion -> OrderVersion
    java.lang.String sha1AndPackage -> h
    java.lang.String sha1 -> i
    android.content.Context mContext -> j
    java.lang.String sfMapURL -> k
    java.lang.String sfMapDefURL -> l
    java.lang.String sfTmcURL -> m
    java.lang.String sfTmcDefURL -> n
    java.lang.String sfAuthURL -> o
    java.lang.String sfAuthDefURL -> p
    java.lang.String systemAk -> q
    java.lang.String systemAkDef -> r
    java.lang.String metaApikey -> s
    16:16:void <init>() -> <init>
    52:54:void setSpUrl(java.lang.String) -> setSpUrl
    57:58:void setContext(android.content.Context) -> setContext
    61:61:java.lang.String getPackageName() -> getPackageName
    65:65:java.lang.String getSHA1() -> getSHA1
    69:69:double getLng() -> getLng
    73:74:void setLng(double) -> setLng
    77:77:double getLat() -> getLat
    81:82:void setLat(double) -> setLat
    86:90:java.lang.String getAppKey(android.content.Context) -> getAppKey
    94:95:void setAppMetaApikey(java.lang.String) -> setAppMetaApikey
    98:101:java.lang.String getAppMetaApikey(android.content.Context) -> getAppMetaApikey
    105:120:java.lang.String getApplicationName(android.content.Context) -> getApplicationName
    125:132:java.lang.String getPackageName(android.content.Context) -> getPackageName
    136:150:java.lang.String getApplicationVersion(android.content.Context) -> getApplicationVersion
    154:168:int getApplicationVersionCode(android.content.Context) -> getApplicationVersionCode
    172:173:void setPackageName(java.lang.String) -> setPackageName
    176:177:void setSha1(java.lang.String) -> setSha1
    181:212:java.lang.String getSHA1(android.content.Context) -> getSHA1
    217:246:java.lang.String getSHA1AndPackage(android.content.Context) -> getSHA1AndPackage
    250:251:void setKey(java.lang.String) -> a
    255:259:java.lang.String getKey(android.content.Context) -> getKey
    272:281:java.lang.String getCustomOrDefaultURL(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    290:293:java.lang.String getSfMapURL(android.content.Context) -> getSfMapURL
    303:303:java.lang.String getSfTmcURL(android.content.Context) -> getSfTmcURL
    312:312:java.lang.String getSfAuthURL(android.content.Context) -> getSfAuthURL
    321:321:java.lang.String getOrderMapURL(android.content.Context) -> getOrderMapURL
    330:330:java.lang.String getSystemAk(android.content.Context) -> getSystemAk
    339:339:int getAppVersion(android.content.Context) -> getAppVersion
    17:48:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.AsyncTaskDecode -> com.sfmap.api.mapcore.util.d:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> e
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> b
    java.util.concurrent.Executor SERIAL_EXECUTOR -> c
    java.util.concurrent.Executor DUAL_THREAD_EXECUTOR -> d
    com.sfmap.api.mapcore.util.AsyncTaskDecode$InternalHandler sHandler -> f
    java.util.concurrent.Executor sDefaultExecutor -> g
    com.sfmap.api.mapcore.util.AsyncTaskDecode$WorkerRunnable mWorker -> h
    java.util.concurrent.FutureTask mFuture -> i
    com.sfmap.api.mapcore.util.AsyncTaskDecode$Status mStatus -> j
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> k
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> l
    44:78:void <init>() -> <init>
    81:84:void postResultIfNotInvoked(java.lang.Object) -> c
    90:93:java.lang.Object postResult(java.lang.Object) -> d
    98:98:com.sfmap.api.mapcore.util.AsyncTaskDecode$Status getStatus() -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    105:105:void onPreExecute() -> b
    109:109:void onPostExecute(java.lang.Object) -> a
    113:113:void onProgressUpdate(java.lang.Object[]) -> b
    117:118:void onCancelled(java.lang.Object) -> b
    122:122:void onCancelled() -> c
    126:126:boolean isCancelled() -> d
    131:132:boolean cancel(boolean) -> a
    137:137:com.sfmap.api.mapcore.util.AsyncTaskDecode execute(java.lang.Object[]) -> c
    142:163:com.sfmap.api.mapcore.util.AsyncTaskDecode executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    168:174:void finish(java.lang.Object) -> e
    22:22:java.util.concurrent.atomic.AtomicBoolean access$300(com.sfmap.api.mapcore.util.AsyncTaskDecode) -> a
    22:22:java.lang.Object access$400(com.sfmap.api.mapcore.util.AsyncTaskDecode,java.lang.Object) -> a
    22:22:java.util.concurrent.FutureTask access$500(com.sfmap.api.mapcore.util.AsyncTaskDecode) -> b
    22:22:void access$600(com.sfmap.api.mapcore.util.AsyncTaskDecode,java.lang.Object) -> b
    22:22:void access$700(com.sfmap.api.mapcore.util.AsyncTaskDecode,java.lang.Object) -> c
    28:41:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.AsyncTaskDecode$1 -> com.sfmap.api.mapcore.util.d$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    28:29:void <init>() -> <init>
    32:32:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.sfmap.api.mapcore.util.AsyncTaskDecode$2 -> com.sfmap.api.mapcore.util.d$2:
    com.sfmap.api.mapcore.util.AsyncTaskDecode this$0 -> a
    50:50:void <init>(com.sfmap.api.mapcore.util.AsyncTaskDecode) -> <init>
    52:57:java.lang.Object call() -> call
com.sfmap.api.mapcore.util.AsyncTaskDecode$3 -> com.sfmap.api.mapcore.util.d$3:
    com.sfmap.api.mapcore.util.AsyncTaskDecode this$0 -> a
    62:62:void <init>(com.sfmap.api.mapcore.util.AsyncTaskDecode,java.util.concurrent.Callable) -> <init>
    65:76:void done() -> done
com.sfmap.api.mapcore.util.AsyncTaskDecode$4 -> com.sfmap.api.mapcore.util.d$4:
    int[] $SwitchMap$com$sfmap$api$mapcore$util$AsyncTaskDecode$Status -> a
    144:144:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.AsyncTaskDecode$AsyncTaskResult -> com.sfmap.api.mapcore.util.d$a:
    com.sfmap.api.mapcore.util.AsyncTaskDecode a -> a
    java.lang.Object[] b -> b
    183:186:void <init>(com.sfmap.api.mapcore.util.AsyncTaskDecode,java.lang.Object[]) -> <init>
com.sfmap.api.mapcore.util.AsyncTaskDecode$InternalHandler -> com.sfmap.api.mapcore.util.d$b:
    195:195:void <init>() -> <init>
    199:208:void handleMessage(android.os.Message) -> handleMessage
    195:195:void <init>(com.sfmap.api.mapcore.util.AsyncTaskDecode$1) -> <init>
com.sfmap.api.mapcore.util.AsyncTaskDecode$SerialExecutor -> com.sfmap.api.mapcore.util.d$c:
    java.util.ArrayDeque mTasks -> a
    java.lang.Runnable mActive -> b
    216:219:void <init>() -> <init>
    223:235:void execute(java.lang.Runnable) -> execute
    238:241:void scheduleNext() -> a
    216:216:void <init>(com.sfmap.api.mapcore.util.AsyncTaskDecode$1) -> <init>
com.sfmap.api.mapcore.util.AsyncTaskDecode$SerialExecutor$1 -> com.sfmap.api.mapcore.util.d$c$1:
    java.lang.Runnable val$r -> a
    com.sfmap.api.mapcore.util.AsyncTaskDecode$SerialExecutor this$0 -> b
    223:223:void <init>(com.sfmap.api.mapcore.util.AsyncTaskDecode$SerialExecutor,java.lang.Runnable) -> <init>
    226:230:void run() -> run
com.sfmap.api.mapcore.util.AsyncTaskDecode$Status -> com.sfmap.api.mapcore.util.d$d:
    com.sfmap.api.mapcore.util.AsyncTaskDecode$Status PENDING -> a
    com.sfmap.api.mapcore.util.AsyncTaskDecode$Status RUNNING -> b
    com.sfmap.api.mapcore.util.AsyncTaskDecode$Status FINISHED -> c
    com.sfmap.api.mapcore.util.AsyncTaskDecode$Status[] $VALUES -> d
    211:211:com.sfmap.api.mapcore.util.AsyncTaskDecode$Status[] values() -> values
    211:211:com.sfmap.api.mapcore.util.AsyncTaskDecode$Status valueOf(java.lang.String) -> valueOf
    211:211:void <init>(java.lang.String,int) -> <init>
    211:213:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.AsyncTaskDecode$WorkerRunnable -> com.sfmap.api.mapcore.util.d$e:
    java.lang.Object[] mParams -> b
    189:189:void <init>() -> <init>
    189:189:void <init>(com.sfmap.api.mapcore.util.AsyncTaskDecode$1) -> <init>
com.sfmap.api.mapcore.util.AuthManager -> com.sfmap.api.mapcore.util.e:
    int authResult -> a
    boolean isRequestFinished -> b
    java.lang.String b -> c
    java.lang.String e -> d
    58:59:boolean getKeyAuth(android.content.Context,com.sfmap.api.mapcore.util.SDKInfo,boolean) -> a
    70:70:boolean getKeyAuth(android.content.Context,com.sfmap.api.mapcore.util.SDKInfo) -> a
    75:76:void setApiKey(java.lang.String) -> a
    14:18:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.BaseGestureDetectorDecode -> com.sfmap.api.mapcore.util.f:
    android.content.Context mContext -> a
    boolean mGestureInProgress -> b
    android.view.MotionEvent mPrevEvent -> c
    android.view.MotionEvent mCurrEvent -> d
    float mCurrPressure -> e
    float mPrevPressure -> f
    long mTimeDelta -> g
    19:21:void <init>(android.content.Context) -> <init>
    25:31:boolean onTouchEvent(android.view.MotionEvent) -> a
    void handleStartProgressEvent(int,android.view.MotionEvent) -> a
    void handleInProgressEvent(int,android.view.MotionEvent) -> b
    41:56:void updateStateByEvent(android.view.MotionEvent) -> b
    64:64:int getActionIndex(android.view.MotionEvent) -> c
    69:80:void resetState() -> a
com.sfmap.api.mapcore.util.BaseNetManager -> com.sfmap.api.mapcore.util.g:
    5:5:void <init>() -> <init>
    42:60:byte[] makeSyncPostRequest(com.sfmap.api.mapcore.util.Request) -> a
    66:72:void checkUrl(com.sfmap.api.mapcore.util.Request) -> b
    77:99:com.sfmap.api.mapcore.util.ResponseEntity a(com.sfmap.api.mapcore.util.Request,boolean) -> a
com.sfmap.api.mapcore.util.BasicLogHandler -> com.sfmap.api.mapcore.util.h:
    com.sfmap.api.mapcore.util.BasicLogHandler logHandler -> a
    java.lang.Thread$UncaughtExceptionHandler caughtExceptionThread -> b
    boolean c -> c
    5:9:void <init>() -> <init>
    13:17:void a(java.lang.Throwable,java.lang.String,java.lang.String) -> a
    23:23:void outPutLog(java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
    33:33:void a(android.content.Context,com.sfmap.api.mapcore.util.SDKInfo,boolean) -> a
com.sfmap.api.mapcore.util.Bounds -> com.sfmap.api.mapcore.util.i:
    double left -> a
    double top -> b
    double right -> c
    double bottom -> d
    double centerY -> e
    double centerX -> f
    15:23:void <init>(double,double,double,double) -> <init>
    27:27:boolean covers(double,double) -> a
    32:32:boolean covers(com.sfmap.mapcore.DPoint) -> a
    37:37:boolean contains(double,double,double,double) -> a
    42:42:boolean contains(com.sfmap.api.mapcore.util.Bounds) -> a
    53:53:boolean include(com.sfmap.api.mapcore.util.Bounds) -> b
com.sfmap.api.mapcore.util.CanDeleteState -> com.sfmap.api.mapcore.util.j:
    8:9:void <init>(int,com.sfmap.api.mapcore.util.CityObject) -> <init>
    13:18:void delete() -> a
com.sfmap.api.mapcore.util.CityObject -> com.sfmap.api.mapcore.util.CityObject:
    com.sfmap.api.mapcore.util.CityStateImp defaultState -> a
    com.sfmap.api.mapcore.util.CityStateImp waitingState -> b
    com.sfmap.api.mapcore.util.CityStateImp loadingState -> c
    com.sfmap.api.mapcore.util.CityStateImp pauseState -> d
    com.sfmap.api.mapcore.util.CityStateImp unzipState -> e
    com.sfmap.api.mapcore.util.CityStateImp completeState -> f
    com.sfmap.api.mapcore.util.CityStateImp newVersionState -> g
    com.sfmap.api.mapcore.util.CityStateImp errorState -> h
    com.sfmap.api.mapcore.util.CityStateImp cityStateImp -> i
    android.content.Context context -> j
    java.lang.String k -> k
    java.lang.String l -> l
    long m -> m
    29:29:java.lang.String a() -> a
    33:33:java.lang.String getMyUrl() -> b
    37:47:void <init>(android.content.Context,com.sfmap.api.maps.offlinemap.OfflineMapCity) -> <init>
    15:275:void <init>(android.content.Context,int) -> <init>
    55:88:void a(int) -> a
    91:94:void setCityState(com.sfmap.api.mapcore.util.CityStateImp) -> a
    97:97:com.sfmap.api.mapcore.util.CityStateImp getCityStateImp() -> c
    101:102:void d() -> d
    106:109:void removeTask() -> e
    112:122:void pauseDownloadTask() -> f
    125:126:void g() -> g
    129:130:void h() -> h
    133:137:void i() -> i
    141:142:void download() -> j
    146:147:void k() -> k
    150:156:void startDownload() -> l
    159:166:void onProgress(long,long) -> a
    169:174:void downloadFinish() -> m
    177:185:void onError(com.sfmap.api.mapcore.util.IDownloadListener$ExceptionType) -> a
    188:189:void onStopDownload() -> n
    192:199:void onUnZipStart() -> o
    202:206:void p() -> p
    214:223:void onUnzipSchedule(long) -> a
    226:250:void onUnzipFinish(java.lang.String) -> a
    253:254:void q() -> q
    257:258:void initPath() -> r
    261:264:java.lang.String s() -> s
    268:272:java.lang.String t() -> t
    278:315:void a(java.io.File,java.io.File,java.lang.String) -> a
    318:321:boolean u() -> u
    325:328:com.sfmap.api.mapcore.util.UpdateItem v() -> v
    332:339:void a(com.sfmap.api.mapcore.util.UpdateItem) -> a
    12:12:long access$000(com.sfmap.api.mapcore.util.CityObject) -> a
    12:12:long access$002(com.sfmap.api.mapcore.util.CityObject,long) -> a
com.sfmap.api.mapcore.util.CityObject$1 -> com.sfmap.api.mapcore.util.CityObject$1:
    java.lang.String val$paramString -> a
    java.io.File val$file -> b
    com.sfmap.api.mapcore.util.CityObject this$0 -> c
    280:280:void <init>(com.sfmap.api.mapcore.util.CityObject,java.lang.String,java.io.File) -> <init>
    282:292:void a(java.lang.String,java.lang.String,float) -> a
    295:295:void a(java.lang.String,java.lang.String) -> a
    299:309:void b(java.lang.String,java.lang.String) -> b
    312:313:void a(java.lang.String,java.lang.String,int) -> a
com.sfmap.api.mapcore.util.CityStateImp -> com.sfmap.api.mapcore.util.k:
    int state -> a
    com.sfmap.api.mapcore.util.CityObject cityObject -> b
    9:12:void <init>(int,com.sfmap.api.mapcore.util.CityObject) -> <init>
    16:16:int getState() -> b
    21:21:boolean a(com.sfmap.api.mapcore.util.CityStateImp) -> a
    26:27:void log(com.sfmap.api.mapcore.util.CityStateImp) -> b
    void c() -> c
    33:34:void start() -> d
    38:39:void continueDownload() -> e
    43:44:void pause() -> f
    48:49:void delete() -> a
    53:54:void fail() -> g
    58:59:void hasNew() -> h
    63:64:void complete() -> i
com.sfmap.api.mapcore.util.ClientInfo -> com.sfmap.api.mapcore.util.l:
    33:146:java.lang.String initXInfo(android.content.Context,com.sfmap.api.mapcore.util.SDKInfo,java.util.Map,boolean) -> a
    286:293:java.lang.String getClientInfo(android.content.Context,com.sfmap.api.mapcore.util.SDKInfo) -> a
    297:313:void writeField(java.io.ByteArrayOutputStream,java.lang.String) -> a
    317:326:void writeField(java.io.ByteArrayOutputStream,byte,byte[]) -> a
    329:339:java.lang.String getTS() -> a
    343:350:java.lang.String Scode(android.content.Context,java.lang.String,java.lang.String) -> a
com.sfmap.api.mapcore.util.CompleteState -> com.sfmap.api.mapcore.util.m:
    8:9:void <init>(int,com.sfmap.api.mapcore.util.CityObject) -> <init>
    13:14:void c() -> c
    18:23:void hasNew() -> h
com.sfmap.api.mapcore.util.ConfigerHelper -> com.sfmap.api.mapcore.util.n:
    com.sfmap.api.mapcore.util.ConfigerHelper instance -> b
    java.util.HashMap mConfStrList -> a
    34:37:com.sfmap.api.mapcore.util.ConfigerHelper getInstance(android.content.Context) -> a
    40:43:void <init>(android.content.Context) -> <init>
    46:47:java.lang.String getKeyValue(java.lang.String) -> a
    56:69:java.io.InputStream GetConfigerFile(android.content.Context) -> b
    74:104:void readConfiger(android.content.Context) -> c
    20:20:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.CrashLogEntity -> com.sfmap.api.mapcore.util.o:
    3:3:void <init>() -> <init>
    8:8:java.lang.String getTableName() -> a
com.sfmap.api.mapcore.util.CrashLogUpDateProcessor -> com.sfmap.api.mapcore.util.p:
    boolean a -> a
    13:14:void <init>(android.content.Context) -> <init>
    18:18:java.lang.String getDir() -> a
    23:23:int getLogType() -> b
    28:49:boolean dbIsRight(android.content.Context) -> a
    9:9:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.CrashLogWriter -> com.sfmap.api.mapcore.util.q:
    com.sfmap.api.mapcore.util.CrashLogWriter$a a -> a
    6:6:void <init>() -> <init>
    13:13:int getType() -> a
    18:24:java.lang.String toMD5Encrypt(java.lang.String) -> a
    29:29:java.lang.String getDirName() -> b
    59:67:com.sfmap.api.mapcore.util.FileOperationListenerDecode a(com.sfmap.api.mapcore.util.LogDBOperation) -> a
    72:72:java.lang.String a(java.util.List) -> a
com.sfmap.api.mapcore.util.CrashLogWriter$a -> com.sfmap.api.mapcore.util.q$a:
    com.sfmap.api.mapcore.util.LogDBOperation b -> b
    com.sfmap.api.mapcore.util.CrashLogWriter this$0 -> a
    38:40:void <init>(com.sfmap.api.mapcore.util.CrashLogWriter,com.sfmap.api.mapcore.util.LogDBOperation) -> <init>
    46:52:void a(java.lang.String) -> a
com.sfmap.api.mapcore.util.DBCreator -> com.sfmap.api.mapcore.util.r:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> a
    java.lang.String getDBFileName() -> a
    int c() -> b
com.sfmap.api.mapcore.util.DBHelper -> com.sfmap.api.mapcore.util.s:
    com.sfmap.api.mapcore.util.DBCreator dbCreator -> a
    14:16:void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,com.sfmap.api.mapcore.util.DBCreator) -> <init>
    20:21:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    25:26:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.sfmap.api.mapcore.util.DBOperation -> com.sfmap.api.mapcore.util.t:
    com.sfmap.api.mapcore.util.DBHelper dbHelper -> a
    android.database.sqlite.SQLiteDatabase db -> b
    com.sfmap.api.mapcore.util.DBCreator dbCreator -> c
    18:28:void <init>(android.content.Context,com.sfmap.api.mapcore.util.DBCreator) -> <init>
    34:44:android.database.sqlite.SQLiteDatabase getReadAbleDataBase(boolean) -> a
    51:57:android.database.sqlite.SQLiteDatabase getWritableDatabase(boolean) -> b
    62:79:java.lang.String whereStr(java.util.Map) -> a
    84:112:void deleteData(java.lang.String,com.sfmap.api.mapcore.util.SQlEntity) -> a
    116:117:void updataDB(java.lang.String,com.sfmap.api.mapcore.util.SQlEntity) -> b
    121:157:void updateData(java.lang.String,com.sfmap.api.mapcore.util.SQlEntity,boolean) -> a
    161:170:void searchListData(com.sfmap.api.mapcore.util.SQlEntity,java.lang.String) -> a
    174:175:void insertDB(com.sfmap.api.mapcore.util.SQlEntity) -> a
    179:204:void insertData(com.sfmap.api.mapcore.util.SQlEntity,boolean) -> a
    208:216:void a(android.database.sqlite.SQLiteDatabase,com.sfmap.api.mapcore.util.SQlEntity) -> a
    220:250:void insertListData(java.util.List) -> a
    254:366:java.util.List searchListData(java.lang.String,com.sfmap.api.mapcore.util.SQlEntity,boolean) -> b
    371:371:java.util.List searchListData(java.lang.String,com.sfmap.api.mapcore.util.SQlEntity) -> c
com.sfmap.api.mapcore.util.DTDownloadEntity -> com.sfmap.api.mapcore.util.u:
    com.sfmap.api.mapcore.util.DTDownloadInfo downloadInfo -> a
    6:9:void <init>() -> <init>
    14:35:com.sfmap.api.mapcore.util.DTDownloadInfo select(android.database.Cursor) -> a
    40:65:android.content.ContentValues a() -> b
    70:70:java.lang.String getTableName() -> a
    75:76:void setLogInfo(com.sfmap.api.mapcore.util.DTDownloadInfo) -> a
    80:85:java.lang.String a(java.lang.String) -> a
    6:6:java.lang.Object select(android.database.Cursor) -> b
com.sfmap.api.mapcore.util.DTDownloadInfo -> com.sfmap.api.mapcore.util.v:
    java.lang.String adcode -> a
    long fileLength -> b
    int splitter -> c
    long startPos -> d
    long endPos -> e
    5:11:void <init>() -> <init>
    5:20:void <init>(java.lang.String,int,int,int,int) -> <init>
    5:29:void <init>(java.lang.String,long,int,long,long) -> <init>
    33:38:long a(int) -> a
    43:48:long b(int) -> b
    53:53:java.lang.String getAdcode() -> a
    58:58:long getFileLength() -> b
    63:63:int getsplitter() -> c
    68:68:long getStartPos() -> d
    73:73:long getEndPos() -> e
com.sfmap.api.mapcore.util.DTEntity -> com.sfmap.api.mapcore.util.w:
    com.sfmap.api.mapcore.util.DTInfo dtInfo -> a
    6:9:void <init>() -> <init>
    14:67:com.sfmap.api.mapcore.util.DTInfo select(android.database.Cursor) -> a
    72:101:android.content.ContentValues a() -> b
    106:106:java.lang.String getTableName() -> a
    111:112:void setLogInfo(com.sfmap.api.mapcore.util.DTInfo) -> a
    116:121:java.lang.String getAdcodeStr(java.lang.String) -> a
    6:6:java.lang.Object select(android.database.Cursor) -> b
com.sfmap.api.mapcore.util.DTFileEntity -> com.sfmap.api.mapcore.util.x:
    com.sfmap.api.mapcore.util.DTFileInfo a -> a
    6:9:void <init>() -> <init>
    14:28:com.sfmap.api.mapcore.util.DTFileInfo select(android.database.Cursor) -> a
    33:49:android.content.ContentValues a() -> b
    54:54:java.lang.String getTableName() -> a
    59:60:void setLogInfo(com.sfmap.api.mapcore.util.DTFileInfo) -> a
    64:69:java.lang.String adcodeStr(java.lang.String) -> a
    74:79:java.lang.String b(java.lang.String) -> b
    6:6:java.lang.Object select(android.database.Cursor) -> b
com.sfmap.api.mapcore.util.DTFileInfo -> com.sfmap.api.mapcore.util.y:
    java.lang.String adcode -> a
    java.lang.String file -> b
    5:8:void <init>() -> <init>
    5:14:void <init>(java.lang.String,java.lang.String) -> <init>
    18:18:java.lang.String getAdcode() -> a
    23:23:java.lang.String getFile() -> b
com.sfmap.api.mapcore.util.DTInfo -> com.sfmap.api.mapcore.util.z:
    com.sfmap.api.mapcore.util.UpdateItem a -> a
    5:10:void <init>(com.sfmap.api.mapcore.util.UpdateItem) -> <init>
    14:14:com.sfmap.api.mapcore.util.UpdateItem a() -> a
    19:19:java.lang.String b() -> b
    24:24:java.lang.String c() -> c
    29:29:java.lang.String d() -> d
    34:34:java.lang.String e() -> e
    39:39:java.lang.String getVersion() -> f
    44:44:long g() -> g
    49:49:long h() -> h
    54:54:java.lang.String i() -> i
    59:59:int j() -> j
    64:64:boolean k() -> k
    69:69:int l() -> l
    74:74:java.lang.String m() -> m
    79:79:int n() -> n
com.sfmap.api.mapcore.util.DefaultState -> com.sfmap.api.mapcore.util.aa:
    8:9:void <init>(int,com.sfmap.api.mapcore.util.CityObject) -> <init>
    13:20:void c() -> c
com.sfmap.api.mapcore.util.DeviceInfo -> com.sfmap.api.mapcore.util.ab:
    java.lang.String utdid -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    43:52:java.lang.String b(android.content.Context) -> a
    57:66:int getNetworkType(android.content.Context) -> b
    71:80:int getNetType(android.content.Context) -> c
    87:93:java.lang.String e(android.content.Context) -> d
    100:127:void a() -> a
    164:215:java.lang.String getUTDID(android.content.Context) -> e
    220:237:java.lang.String g(android.content.Context) -> f
    242:273:java.lang.String getWifiMacs(android.content.Context) -> g
    282:296:java.lang.String getDeviceMac(android.content.Context) -> h
    303:334:java.lang.String[] cellInfo(android.content.Context) -> i
    339:362:java.lang.String getMNC(android.content.Context) -> j
    367:376:int getNetWorkType(android.content.Context) -> k
    381:390:int getActiveNetWorkType(android.content.Context) -> l
    431:446:java.lang.String getReslution(android.content.Context) -> m
    455:472:java.lang.String getDeviceID(android.content.Context) -> n
    477:486:java.lang.String getSubscriberId1(android.content.Context) -> o
    493:499:java.lang.String getNetworkOperatorName(android.content.Context) -> p
    506:518:java.lang.String t(android.content.Context) -> q
    523:533:java.lang.String getNetworkOperatorName1(android.content.Context) -> r
    538:552:int getNetType1(android.content.Context) -> s
    557:564:java.lang.String getSubscriberId(android.content.Context) -> t
    569:577:int getNetworkType1(android.content.Context) -> u
    582:593:java.util.List a(java.util.List) -> a
    36:36:boolean access$002(boolean) -> a
    36:36:boolean access$000() -> b
    36:36:java.lang.String access$102(java.lang.String) -> a
    38:502:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.DeviceInfo$a -> com.sfmap.api.mapcore.util.ab$a:
    129:129:void <init>() -> <init>
    135:139:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    147:150:void characters(char[],int,int) -> characters
    156:157:void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.sfmap.api.mapcore.util.DiskLruCache -> com.sfmap.api.mapcore.util.ac:
    java.util.regex.Pattern a -> a
    java.io.File directory -> c
    java.io.File journalFile -> d
    java.io.File journalFileTmp -> e
    java.io.File journalFileBkp -> f
    int appVersion -> g
    long maxSize -> h
    int valueCount -> i
    long j -> j
    java.io.Writer writer -> k
    java.util.LinkedHashMap lruEntries -> l
    int redundantOpCount -> m
    com.sfmap.api.mapcore.util.FileOperationListenerDecode n -> n
    long o -> o
    java.util.concurrent.ThreadPoolExecutor b -> b
    java.util.concurrent.Callable p -> p
    java.io.OutputStream q -> q
    100:101:void a(com.sfmap.api.mapcore.util.FileOperationListenerDecode) -> a
    92:116:void <init>(java.io.File,int,int,long) -> <init>
    130:165:com.sfmap.api.mapcore.util.DiskLruCache open(java.io.File,int,int,long) -> a
    171:195:void e() -> e
    201:240:void readJournalLine(java.lang.String) -> d
    245:267:void processJournal() -> f
    272:309:void g() -> g
    313:316:void deleteIfExists(java.io.File) -> a
    321:327:void rename(java.io.File,java.io.File,boolean) -> a
    332:366:com.sfmap.api.mapcore.util.DiskLruCache$Snapshot get(java.lang.String) -> a
    372:372:com.sfmap.api.mapcore.util.DiskLruCache$Editor edit(java.lang.String) -> b
    378:403:com.sfmap.api.mapcore.util.DiskLruCache$Editor a(java.lang.String,long) -> a
    410:480:void completeEdit(com.sfmap.api.mapcore.util.DiskLruCache$Editor,boolean) -> a
    484:485:boolean h() -> h
    491:515:boolean remove(java.lang.String) -> c
    520:520:boolean isClosed() -> a
    525:528:void isClose() -> i
    533:536:void flush() -> b
    541:562:void close() -> close
    567:577:void j() -> j
    582:584:void delete() -> c
    588:592:void e(java.lang.String) -> e
    81:81:int access$1100(com.sfmap.api.mapcore.util.DiskLruCache) -> a
    81:81:java.io.File access$1300(com.sfmap.api.mapcore.util.DiskLruCache) -> b
    81:81:java.io.OutputStream access$1400() -> d
    81:81:void access$1500(com.sfmap.api.mapcore.util.DiskLruCache,com.sfmap.api.mapcore.util.DiskLruCache$Editor,boolean) -> a
    81:81:java.io.Writer access$1700(com.sfmap.api.mapcore.util.DiskLruCache) -> c
    81:81:void access$1800(com.sfmap.api.mapcore.util.DiskLruCache) -> d
    81:81:boolean access$1900(com.sfmap.api.mapcore.util.DiskLruCache) -> e
    81:81:void access$2000(com.sfmap.api.mapcore.util.DiskLruCache) -> f
    81:81:int access$2102(com.sfmap.api.mapcore.util.DiskLruCache,int) -> a
    84:632:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.DiskLruCache$1 -> com.sfmap.api.mapcore.util.ac$1:
com.sfmap.api.mapcore.util.DiskLruCache$Editor -> com.sfmap.api.mapcore.util.ac$a:
    com.sfmap.api.mapcore.util.DiskLruCache$Entry entry -> b
    boolean[] c -> c
    boolean hasErrors -> d
    boolean e -> e
    com.sfmap.api.mapcore.util.DiskLruCache this$0 -> a
    641:645:void <init>(com.sfmap.api.mapcore.util.DiskLruCache,com.sfmap.api.mapcore.util.DiskLruCache$Entry) -> <init>
    650:686:java.io.OutputStream newOutputStream(int) -> a
    695:705:void commit() -> a
    713:714:void abort() -> b
    633:633:void <init>(com.sfmap.api.mapcore.util.DiskLruCache,com.sfmap.api.mapcore.util.DiskLruCache$Entry,com.sfmap.api.mapcore.util.DiskLruCache$1) -> <init>
    633:633:com.sfmap.api.mapcore.util.DiskLruCache$Entry access$900(com.sfmap.api.mapcore.util.DiskLruCache$Editor) -> a
    633:633:boolean[] access$1000(com.sfmap.api.mapcore.util.DiskLruCache$Editor) -> b
    633:633:boolean access$1602(com.sfmap.api.mapcore.util.DiskLruCache$Editor,boolean) -> a
com.sfmap.api.mapcore.util.DiskLruCache$Editor$FaultHidingOutputStream -> com.sfmap.api.mapcore.util.ac$a$a:
    com.sfmap.api.mapcore.util.DiskLruCache$Editor this$1 -> a
    720:722:void <init>(com.sfmap.api.mapcore.util.DiskLruCache$Editor,java.io.OutputStream) -> <init>
    728:734:void write(int) -> write
    740:746:void write(byte[],int,int) -> write
    752:758:void close() -> close
    764:770:void flush() -> flush
    716:716:void <init>(com.sfmap.api.mapcore.util.DiskLruCache$Editor,java.io.OutputStream,com.sfmap.api.mapcore.util.DiskLruCache$1) -> <init>
com.sfmap.api.mapcore.util.DiskLruCache$Entry -> com.sfmap.api.mapcore.util.ac$b:
    java.lang.String key -> b
    long[] lengths -> c
    boolean readable -> d
    com.sfmap.api.mapcore.util.DiskLruCache$Editor currentEditor -> e
    long sequenceNumber -> f
    com.sfmap.api.mapcore.util.DiskLruCache this$0 -> a
    790:794:void <init>(com.sfmap.api.mapcore.util.DiskLruCache,java.lang.String) -> <init>
    799:803:java.lang.String gertLengths() -> a
    812:825:void setLengths(java.lang.String[]) -> a
    830:830:java.io.IOException invalidLengths(java.lang.String[]) -> b
    836:836:java.io.File getCleanFile(int) -> a
    842:842:java.io.File getDirtyFile(int) -> b
    774:774:void <init>(com.sfmap.api.mapcore.util.DiskLruCache,java.lang.String,com.sfmap.api.mapcore.util.DiskLruCache$1) -> <init>
    774:774:boolean access$102(com.sfmap.api.mapcore.util.DiskLruCache$Entry,boolean) -> a
    774:774:com.sfmap.api.mapcore.util.DiskLruCache$Editor access$202(com.sfmap.api.mapcore.util.DiskLruCache$Entry,com.sfmap.api.mapcore.util.DiskLruCache$Editor) -> a
    774:774:void access$300(com.sfmap.api.mapcore.util.DiskLruCache$Entry,java.lang.String[]) -> a
    774:774:com.sfmap.api.mapcore.util.DiskLruCache$Editor access$200(com.sfmap.api.mapcore.util.DiskLruCache$Entry) -> a
    774:774:long[] access$500(com.sfmap.api.mapcore.util.DiskLruCache$Entry) -> b
    774:774:java.lang.String access$600(com.sfmap.api.mapcore.util.DiskLruCache$Entry) -> c
    774:774:boolean access$100(com.sfmap.api.mapcore.util.DiskLruCache$Entry) -> d
    774:774:long access$700(com.sfmap.api.mapcore.util.DiskLruCache$Entry) -> e
    774:774:long access$702(com.sfmap.api.mapcore.util.DiskLruCache$Entry,long) -> a
com.sfmap.api.mapcore.util.DiskLruCache$Snapshot -> com.sfmap.api.mapcore.util.ac$c:
    java.lang.String key -> b
    long sequenceNumber -> c
    java.io.InputStream[] ins -> d
    long[] e -> e
    com.sfmap.api.mapcore.util.DiskLruCache this$0 -> a
    603:608:void <init>(com.sfmap.api.mapcore.util.DiskLruCache,java.lang.String,long,java.io.InputStream[],long[]) -> <init>
    612:612:java.io.InputStream getInputStream(int) -> a
    617:620:void close() -> close
    594:594:void <init>(com.sfmap.api.mapcore.util.DiskLruCache,java.lang.String,long,java.io.InputStream[],long[],com.sfmap.api.mapcore.util.DiskLruCache$1) -> <init>
com.sfmap.api.mapcore.util.DiskLruCache$df -> com.sfmap.api.mapcore.util.ac$d:
    com.sfmap.api.mapcore.util.DiskLruCache a -> a
    com.sfmap.api.mapcore.util.DiskLruCache this$0 -> b
    856:856:void <init>(com.sfmap.api.mapcore.util.DiskLruCache,com.sfmap.api.mapcore.util.DiskLruCache) -> <init>
    861:878:java.lang.Void a() -> a
    884:884:java.lang.Void call() -> b
    852:852:java.lang.Object call() -> call
com.sfmap.api.mapcore.util.DiskLruCache$dg -> com.sfmap.api.mapcore.util.ac$e:
    625:626:void <init>() -> <init>
    629:629:void write(int) -> write
com.sfmap.api.mapcore.util.DownloadManager -> com.sfmap.api.mapcore.util.ad:
    com.sfmap.api.mapcore.util.HttpUrlUtil httpUtil -> a
    com.sfmap.api.mapcore.util.Request request -> b
    16:28:void <init>(com.sfmap.api.mapcore.util.Request,long,long) -> <init>
    32:33:void makeGetRequest(com.sfmap.api.mapcore.util.DownloadManager$DownloadListener) -> a
    37:38:void a() -> a
com.sfmap.api.mapcore.util.DownloadManager$DownloadListener -> com.sfmap.api.mapcore.util.ad$a:
    void a(byte[],long) -> a
    void d() -> a
    void e() -> b
    void a(java.lang.Throwable) -> a
com.sfmap.api.mapcore.util.EarClippingTriangulator -> com.sfmap.api.mapcore.util.ae:
    com.sfmap.api.mapcore.util.ShortArray a -> a
    short[] b -> b
    float[] c -> c
    int d -> d
    com.sfmap.api.mapcore.util.IntArray e -> e
    com.sfmap.api.mapcore.util.ShortArray f -> f
    3:10:void <init>() -> <init>
    14:14:com.sfmap.api.mapcore.util.ShortArray a(float[]) -> a
    19:53:com.sfmap.api.mapcore.util.ShortArray a(float[],int,int) -> a
    58:77:void a() -> a
    81:86:int a(int) -> a
    91:103:int b() -> b
    108:135:boolean b(int) -> b
    140:150:void c(int) -> c
    154:154:int d(int) -> d
    159:159:int e(int) -> e
    164:181:boolean b(float[],int,int) -> b
    186:189:int a(float,float,float,float,float,float) -> a
com.sfmap.api.mapcore.util.Encrypt -> com.sfmap.api.mapcore.util.af:
    char[] base64EncodeChars -> a
    byte[] base64DecodeChars -> b
    21:24:java.lang.String base64Dec(java.lang.String) -> a
    170:231:byte[] base64Decode(java.lang.String) -> b
    236:267:java.lang.String encodeBase64(byte[]) -> c
    274:280:java.lang.String base64(byte[]) -> a
    283:291:java.lang.String parseByte2HexStr(byte[]) -> b
    40:59:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.EncryptUtil -> com.sfmap.api.mapcore.util.ag:
    9:24:java.lang.String a(java.lang.String) -> a
    29:32:java.lang.String b(java.lang.String) -> b
com.sfmap.api.mapcore.util.ErrorState -> com.sfmap.api.mapcore.util.ah:
    8:9:void <init>(int,com.sfmap.api.mapcore.util.CityObject) -> <init>
    13:14:void c() -> c
    18:25:void start() -> d
com.sfmap.api.mapcore.util.ExceptionLogEntity -> com.sfmap.api.mapcore.util.ai:
    3:3:void <init>() -> <init>
    8:8:java.lang.String getTableName() -> a
com.sfmap.api.mapcore.util.ExceptionLogUpDateProcessor -> com.sfmap.api.mapcore.util.aj:
    boolean a -> a
    14:15:void <init>(android.content.Context) -> <init>
    19:19:java.lang.String getDir() -> a
    24:24:int getLogType() -> b
    29:50:boolean dbIsRight(android.content.Context) -> a
    10:10:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.ExceptionLogWriter -> com.sfmap.api.mapcore.util.ak:
    com.sfmap.api.mapcore.util.ExceptionLogWriter$a a -> a
    5:5:void <init>() -> <init>
    12:12:int getType() -> a
    17:19:java.lang.String toMD5Encrypt(java.lang.String) -> a
    24:24:java.lang.String getDirName() -> b
    31:39:com.sfmap.api.mapcore.util.FileOperationListenerDecode a(com.sfmap.api.mapcore.util.LogDBOperation) -> a
    67:67:java.lang.String a(java.util.List) -> a
com.sfmap.api.mapcore.util.ExceptionLogWriter$a -> com.sfmap.api.mapcore.util.ak$a:
    com.sfmap.api.mapcore.util.LogDBOperation b -> b
    com.sfmap.api.mapcore.util.ExceptionLogWriter this$0 -> a
    48:50:void <init>(com.sfmap.api.mapcore.util.ExceptionLogWriter,com.sfmap.api.mapcore.util.LogDBOperation) -> <init>
    56:62:void a(java.lang.String) -> a
com.sfmap.api.mapcore.util.FileAccessI -> com.sfmap.api.mapcore.util.al:
    java.io.RandomAccessFile accessFile -> a
    14:15:void <init>() -> <init>
    19:40:void <init>(java.lang.String,long) -> <init>
    45:48:int a(byte[]) -> a
    53:65:void close() -> a
com.sfmap.api.mapcore.util.FileCopy -> com.sfmap.api.mapcore.util.am:
    8:8:void <init>() -> <init>
    12:78:long copyFile(java.io.File,java.io.File,long,long,com.sfmap.api.mapcore.util.FileCopy$a) -> a
    83:83:float toPercent(long,long) -> a
com.sfmap.api.mapcore.util.FileCopy$a -> com.sfmap.api.mapcore.util.am$a:
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,float) -> a
    void b(java.lang.String,java.lang.String) -> b
    void a(java.lang.String,java.lang.String,int) -> a
com.sfmap.api.mapcore.util.FileOperationListenerDecode -> com.sfmap.api.mapcore.util.an:
    void a(java.lang.String) -> a
com.sfmap.api.mapcore.util.FileUtils -> com.sfmap.api.mapcore.util.ao:
    java.nio.charset.Charset US_ASCII -> a
    java.nio.charset.Charset UTF_8 -> b
    16:29:void deleteContents(java.io.File) -> a
    33:41:void closeQuietly(java.io.Closeable) -> a
    10:11:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.Format -> com.sfmap.api.mapcore.util.ap:
    10:16:java.lang.String ThrowableToHtml(java.lang.Throwable) -> a
    21:32:java.lang.String getDateAndTime(long) -> a
com.sfmap.api.mapcore.util.HttpUrlUtil -> com.sfmap.api.mapcore.util.aq:
    com.sfmap.api.mapcore.util.NetCompleteListener netCompleteListener -> a
    int connTimeout -> b
    int readTimeout -> c
    boolean isSSL -> d
    javax.net.ssl.SSLContext e -> e
    java.net.Proxy proxy -> f
    boolean g -> g
    long h -> h
    long i -> i
    javax.net.ssl.HostnameVerifier j -> j
    43:44:void setNetCompleteListener(com.sfmap.api.mapcore.util.NetCompleteListener) -> a
    37:479:void <init>(int,int,java.net.Proxy,boolean) -> <init>
    72:73:void <init>(int,int,java.net.Proxy) -> <init>
    77:78:void a() -> a
    82:83:void a(long) -> a
    87:88:void b(long) -> b
    92:197:void makeGetRequest(java.lang.String,java.util.Map,java.util.Map,com.sfmap.api.mapcore.util.DownloadManager$DownloadListener) -> a
    204:242:com.sfmap.api.mapcore.util.ResponseEntity makeGetRequest(java.lang.String,java.util.Map,java.util.Map) -> a
    251:296:com.sfmap.api.mapcore.util.ResponseEntity makePostReqeust(java.lang.String,java.util.Map,byte[]) -> a
    303:340:java.net.HttpURLConnection a(java.lang.String,java.util.Map,boolean) -> a
    346:451:com.sfmap.api.mapcore.util.ResponseEntity parseResult(java.net.HttpURLConnection) -> a
    457:477:void addHeaders(java.util.Map,java.net.HttpURLConnection) -> a
    483:503:java.lang.String getParaString(java.util.Map) -> a
com.sfmap.api.mapcore.util.HttpUrlUtil$ds -> com.sfmap.api.mapcore.util.aq$a:
    com.sfmap.api.mapcore.util.HttpUrlUtil this$0 -> a
    508:508:void <init>(com.sfmap.api.mapcore.util.HttpUrlUtil,com.sfmap.api.mapcore.util.HttpUrlUtil) -> <init>
    512:515:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.sfmap.api.mapcore.util.IDownloadListener -> com.sfmap.api.mapcore.util.ar:
    void startDownload() -> l
    void onProgress(long,long) -> a
    void downloadFinish() -> m
    void onError(com.sfmap.api.mapcore.util.IDownloadListener$ExceptionType) -> a
    void onStopDownload() -> n
com.sfmap.api.mapcore.util.IDownloadListener$ExceptionType -> com.sfmap.api.mapcore.util.ar$a:
    com.sfmap.api.mapcore.util.IDownloadListener$ExceptionType map_exception -> a
    com.sfmap.api.mapcore.util.IDownloadListener$ExceptionType network_exception -> b
    com.sfmap.api.mapcore.util.IDownloadListener$ExceptionType file_io_exception -> c
    com.sfmap.api.mapcore.util.IDownloadListener$ExceptionType success_no_exception -> d
    com.sfmap.api.mapcore.util.IDownloadListener$ExceptionType cancel_no_exception -> e
    com.sfmap.api.mapcore.util.IDownloadListener$ExceptionType md5_exception -> f
    com.sfmap.api.mapcore.util.IDownloadListener$ExceptionType[] $VALUES -> g
    15:15:com.sfmap.api.mapcore.util.IDownloadListener$ExceptionType[] values() -> values
    15:15:com.sfmap.api.mapcore.util.IDownloadListener$ExceptionType valueOf(java.lang.String) -> valueOf
    15:15:void <init>(java.lang.String,int) -> <init>
    15:22:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.IMMapCoreException -> com.sfmap.api.mapcore.util.as:
    java.lang.String errorMessage -> a
    int errorCode -> b
    6:14:void <init>(java.lang.String) -> <init>
    18:18:java.lang.String getErrorMessage() -> a
    23:68:void getErrorCode(java.lang.String) -> a
com.sfmap.api.mapcore.util.IUnZipListener -> com.sfmap.api.mapcore.util.at:
    void onUnZipStart() -> o
    void p() -> p
    void onUnzipSchedule(long) -> a
    void onUnzipFinish(java.lang.String) -> a
    void q() -> q
com.sfmap.api.mapcore.util.ImageCacheDecode -> com.sfmap.api.mapcore.util.au:
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> a
    android.graphics.Bitmap$CompressFormat a -> b
    com.sfmap.api.mapcore.util.DiskLruCache mDiskLruCache -> c
    com.sfmap.api.mapcore.util.LruCacheDecode mMemoryCache -> d
    com.sfmap.api.mapcore.util.ImageCacheDecode$ImageCacheParams imageCacheParams -> e
    java.lang.Object mDiskCacheLock -> f
    boolean mDiskCacheInitializing -> g
    java.util.HashMap mReusableBitmaps -> h
    43:49:void <init>(com.sfmap.api.mapcore.util.ImageCacheDecode$ImageCacheParams) -> <init>
    52:53:com.sfmap.api.mapcore.util.ImageCacheDecode getInstance(com.sfmap.api.mapcore.util.ImageCacheDecode$ImageCacheParams) -> a
    57:88:void init(com.sfmap.api.mapcore.util.ImageCacheDecode$ImageCacheParams) -> b
    91:118:void initDiskCache() -> a
    121:133:void cleanUp(java.io.File) -> b
    136:174:void put(java.lang.String,android.graphics.Bitmap) -> a
    177:197:android.graphics.Bitmap getBitmapFromMemCache(java.lang.String) -> a
    201:239:android.graphics.Bitmap getBitmapFromDiskCache(java.lang.String) -> b
    243:263:void clearCache() -> b
    266:276:void flush() -> c
    279:299:void close() -> d
    341:346:java.io.File getDiskCacheDir(android.content.Context,java.lang.String) -> a
    352:360:java.lang.String hashKeyForDisk(java.lang.String) -> c
    364:372:java.lang.String bytesToHexString(byte[]) -> a
    376:380:int getBitmapSize(android.graphics.Bitmap) -> a
    384:387:boolean isExternalStorageRemovable() -> e
    391:397:java.io.File getExternalCacheDir(android.content.Context) -> a
    402:406:long getUsableSpace(java.io.File) -> a
    21:21:java.util.HashMap access$000(com.sfmap.api.mapcore.util.ImageCacheDecode) -> a
    21:21:android.graphics.Bitmap$CompressFormat access$100() -> f
    30:39:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.ImageCacheDecode$1 -> com.sfmap.api.mapcore.util.au$1:
    com.sfmap.api.mapcore.util.ImageCacheDecode this$0 -> a
    64:64:void <init>(com.sfmap.api.mapcore.util.ImageCacheDecode,int) -> <init>
    70:76:void entryRemoved(boolean,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap) -> a
    80:81:int sizeOf(java.lang.String,android.graphics.Bitmap) -> a
    64:64:int sizeOf(java.lang.Object,java.lang.Object) -> a
    64:64:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
com.sfmap.api.mapcore.util.ImageCacheDecode$ImageCacheParams -> com.sfmap.api.mapcore.util.au$a:
    int memCacheSize -> a
    int diskCacheSize -> b
    java.io.File diskCacheDir -> c
    android.graphics.Bitmap$CompressFormat compressFormat -> d
    int compressQuality -> e
    boolean memoryCacheEnabled -> f
    boolean diskCacheEnabled -> g
    boolean initDiskCacheOnCreate -> h
    302:314:void <init>(android.content.Context,java.lang.String) -> <init>
    317:318:void setMemCacheSize(int) -> a
    321:325:void setDiskCacheSize(int) -> b
    328:329:void setDiskCacheDir(java.lang.String) -> a
    332:333:void enableMemoryCache(boolean) -> a
    336:337:void enableDiskCache(boolean) -> b
com.sfmap.api.mapcore.util.ImageFetcherDecode -> com.sfmap.api.mapcore.util.av:
    com.sfmap.api.maps.model.TileProvider tileProvider -> e
    15:21:void <init>(android.content.Context,int,int) -> <init>
    25:26:void init(android.content.Context) -> a
    30:31:void setTileProvider(com.sfmap.api.maps.model.TileProvider) -> a
    35:40:void checkConnection(android.content.Context) -> b
    44:55:android.graphics.Bitmap processBitmap(com.sfmap.api.mapcore.TileOverlayDelegateImp$TileCoordinate) -> c
    60:60:android.graphics.Bitmap processBitmap(java.lang.Object) -> a
com.sfmap.api.mapcore.util.ImageResizerDecode -> com.sfmap.api.mapcore.util.aw:
    int mImageWidth -> a
    int mImageHeight -> b
    18:20:void <init>(android.content.Context,int,int) -> <init>
    24:26:void a(int,int) -> a
    30:32:android.graphics.Bitmap a(int) -> a
    37:37:android.graphics.Bitmap processBitmap(java.lang.Object) -> a
    42:49:android.graphics.Bitmap a(android.content.res.Resources,int,int,int,com.sfmap.api.mapcore.util.ImageCacheDecode) -> a
    54:62:android.graphics.Bitmap a(java.io.FileDescriptor,int,int,com.sfmap.api.mapcore.util.ImageCacheDecode) -> a
    67:85:int a(android.graphics.BitmapFactory$Options,int,int) -> a
com.sfmap.api.mapcore.util.ImageWorkerDecode -> com.sfmap.api.mapcore.util.ax:
    com.sfmap.api.mapcore.util.ImageCacheDecode mImageCache -> a
    com.sfmap.api.mapcore.util.ImageCacheDecode$ImageCacheParams mImageCacheParams -> b
    boolean mExitTasksEarly -> e
    boolean mPauseWork -> c
    java.lang.Object mPauseWorkLock -> f
    android.content.res.Resources mResources -> d
    12:24:void <init>(android.content.Context) -> <init>
    29:52:void loadImage(boolean,com.sfmap.api.mapcore.TileOverlayDelegateImp$TileCoordinate) -> a
    56:59:void addImageCache(com.sfmap.api.mapcore.util.ImageCacheDecode$ImageCacheParams) -> a
    63:65:void setExitTasksEarly(boolean) -> a
    android.graphics.Bitmap processBitmap(java.lang.Object) -> a
    71:71:com.sfmap.api.mapcore.util.ImageCacheDecode getImageCache() -> a
    76:82:void cancelWork(com.sfmap.api.mapcore.TileOverlayDelegateImp$TileCoordinate) -> a
    87:90:com.sfmap.api.mapcore.util.ImageWorkerDecode$BitmapWorkerTask getBitmapWorkerTask(com.sfmap.api.mapcore.TileOverlayDelegateImp$TileCoordinate) -> c
    190:196:void setPauseWork(boolean) -> b
    226:229:void initDiskCacheInternal() -> b
    233:236:void clearCacheInternal() -> c
    240:243:void flushCacheInternal() -> d
    247:251:void closeCacheInternal() -> e
    255:256:void clearCache() -> f
    260:261:void flushCache() -> g
    265:266:void closeCache() -> h
    9:9:java.lang.Object access$000(com.sfmap.api.mapcore.util.ImageWorkerDecode) -> a
    9:9:com.sfmap.api.mapcore.util.ImageCacheDecode access$100(com.sfmap.api.mapcore.util.ImageWorkerDecode) -> b
    9:9:boolean access$200(com.sfmap.api.mapcore.util.ImageWorkerDecode) -> c
    9:9:com.sfmap.api.mapcore.util.ImageWorkerDecode$BitmapWorkerTask access$300(com.sfmap.api.mapcore.TileOverlayDelegateImp$TileCoordinate) -> b
com.sfmap.api.mapcore.util.ImageWorkerDecode$BitmapWorkerTask -> com.sfmap.api.mapcore.util.ax$a:
    java.lang.ref.WeakReference tileReference -> e
    com.sfmap.api.mapcore.util.ImageWorkerDecode this$0 -> a
    99:101:void <init>(com.sfmap.api.mapcore.util.ImageWorkerDecode,com.sfmap.api.mapcore.TileOverlayDelegateImp$TileCoordinate) -> <init>
    104:150:android.graphics.Bitmap doInBackground(java.lang.Boolean[]) -> a
    155:167:void onPostExecute(android.graphics.Bitmap) -> a
    171:175:void onCancelled(android.graphics.Bitmap) -> b
    179:184:com.sfmap.api.mapcore.TileOverlayDelegateImp$TileCoordinate getAttachedTileCoordinate() -> e
    93:93:void onCancelled(java.lang.Object) -> b
    93:93:void onPostExecute(java.lang.Object) -> a
    93:93:java.lang.Object doInBackground(java.lang.Object[]) -> a
com.sfmap.api.mapcore.util.ImageWorkerDecode$CacheAsyncTask -> com.sfmap.api.mapcore.util.ax$b:
    com.sfmap.api.mapcore.util.ImageWorkerDecode this$0 -> a
    200:201:void <init>(com.sfmap.api.mapcore.util.ImageWorkerDecode) -> <init>
    206:220:java.lang.Void doInBackground(java.lang.Object[]) -> d
    198:198:java.lang.Object doInBackground(java.lang.Object[]) -> a
com.sfmap.api.mapcore.util.IndoorBuilding -> com.sfmap.api.mapcore.util.ay:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    int f -> f
    int[] g -> g
    java.lang.String[] h -> h
    java.lang.String[] i -> i
    int j -> j
    int[] k -> k
    com.sfmap.mapcore.IPoint l -> l
    21:23:void <init>() -> <init>
com.sfmap.api.mapcore.util.IntArray -> com.sfmap.api.mapcore.util.az:
    int[] a -> a
    int b -> b
    boolean c -> c
    11:12:void <init>() -> <init>
    15:18:void <init>(boolean,int) -> <init>
    22:27:void a(int) -> a
    31:42:int b(int) -> b
    47:48:void a() -> a
    52:56:int[] c(int) -> c
    61:65:int[] d(int) -> d
    70:86:boolean equals(java.lang.Object) -> equals
    91:104:java.lang.String toString() -> toString
com.sfmap.api.mapcore.util.LoadingState -> com.sfmap.api.mapcore.util.ba:
    8:9:void <init>(int,com.sfmap.api.mapcore.util.CityObject) -> <init>
    13:14:void c() -> c
    18:23:void pause() -> f
    27:32:void complete() -> i
    36:41:void fail() -> g
com.sfmap.api.mapcore.util.Log -> com.sfmap.api.mapcore.util.bb:
    18:40:void toLog(android.content.Context,java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
    72:82:void writerANRLog(android.content.Context) -> a
    88:134:void processLog(android.content.Context) -> b
com.sfmap.api.mapcore.util.Log$1 -> com.sfmap.api.mapcore.util.bb$1:
    int val$logType -> a
    android.content.Context val$context -> b
    java.lang.Throwable val$throwable -> c
    java.lang.String val$className -> d
    java.lang.String val$methodName -> e
    22:22:void <init>(int,android.content.Context,java.lang.Throwable,java.lang.String,java.lang.String) -> <init>
    25:33:void run() -> run
com.sfmap.api.mapcore.util.Log$3 -> com.sfmap.api.mapcore.util.bb$2:
    android.content.Context val$context -> a
    92:92:void <init>(android.content.Context) -> <init>
    94:126:void run() -> run
com.sfmap.api.mapcore.util.LogDBCreator -> com.sfmap.api.mapcore.util.bc:
    com.sfmap.api.mapcore.util.LogDBCreator instance -> a
    5:5:void <init>() -> <init>
    32:35:com.sfmap.api.mapcore.util.LogDBCreator getInstance() -> c
    42:54:void onCreate(android.database.sqlite.SQLiteDatabase) -> a
    56:56:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> a
    60:60:java.lang.String getDBFileName() -> a
    65:65:int c() -> b
com.sfmap.api.mapcore.util.LogDBOperation -> com.sfmap.api.mapcore.util.bd:
    com.sfmap.api.mapcore.util.DBOperation dbOperation -> a
    11:13:void <init>(android.content.Context) -> <init>
    17:35:com.sfmap.api.mapcore.util.LogEntity getLog(int) -> a
    42:49:void delLog(java.lang.String,int) -> a
    55:61:void b(java.lang.String,int) -> b
    65:68:void deleteLog(java.lang.String,int) -> c
    74:84:void updateLogInfo(com.sfmap.api.mapcore.util.LogInfo,int) -> a
    88:100:java.util.List a(int,int) -> a
    107:128:void writeToDB(com.sfmap.api.mapcore.util.LogInfo,int) -> b
    132:134:void insertToDB(com.sfmap.api.mapcore.util.LogInfo,com.sfmap.api.mapcore.util.LogEntity) -> a
    138:162:void updataDB(com.sfmap.api.mapcore.util.LogInfo,com.sfmap.api.mapcore.util.LogEntity) -> b
com.sfmap.api.mapcore.util.LogEntity -> com.sfmap.api.mapcore.util.be:
    com.sfmap.api.mapcore.util.LogInfo logInfo -> a
    8:15:void <init>() -> <init>
    19:37:android.content.ContentValues a() -> b
    44:66:com.sfmap.api.mapcore.util.LogInfo select(android.database.Cursor) -> a
    71:72:void setLogInfo(com.sfmap.api.mapcore.util.LogInfo) -> a
    76:78:java.lang.String getWhereString(java.lang.String) -> a
    83:92:java.lang.String a(int) -> a
    8:8:java.lang.Object select(android.database.Cursor) -> b
com.sfmap.api.mapcore.util.LogInfo -> com.sfmap.api.mapcore.util.bf:
    java.lang.String sdkType -> a
    int b -> b
    java.lang.String md5 -> c
    int d -> d
    3:8:void <init>() -> <init>
    12:12:int a() -> a
    17:18:void a(int) -> a
    22:22:java.lang.String getMD5() -> b
    27:28:void setMD5(java.lang.String) -> a
    32:32:java.lang.String getSdkType() -> c
    37:38:void setSdkType(java.lang.String) -> b
    42:42:int d() -> d
    47:48:void b(int) -> b
com.sfmap.api.mapcore.util.LogManager -> com.sfmap.api.mapcore.util.bg:
    java.lang.String productInfo -> a
    13:13:void writeLog(java.lang.String,java.lang.String,int) -> a
    8:8:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.LogUpDateProcessor -> com.sfmap.api.mapcore.util.bh:
    com.sfmap.api.mapcore.util.DiskLruCache cache -> a
    21:39:com.sfmap.api.mapcore.util.LogUpDateProcessor getLogProcessor(android.content.Context,int) -> a
    43:55:void <init>(android.content.Context) -> <init>
    61:91:void processUpdateLog(android.content.Context) -> b
    95:107:boolean a(java.lang.String) -> a
    java.lang.String getDir() -> a
    int getLogType() -> b
    boolean dbIsRight(android.content.Context) -> a
    120:130:void processDelete(com.sfmap.api.mapcore.util.LogDBOperation,int) -> a
    134:182:int processUpdate(android.content.Context,java.lang.String) -> a
    187:202:void deleteLog(java.util.List,com.sfmap.api.mapcore.util.LogDBOperation,int) -> a
    206:227:java.lang.String getPublicInfo(android.content.Context) -> c
    232:255:java.lang.String a(java.util.List,android.content.Context) -> a
    260:318:java.lang.String readLog(java.lang.String) -> b
    323:339:void closeDiskLru() -> c
    343:368:com.sfmap.api.mapcore.util.DiskLruCache initDiskLru(android.content.Context,java.lang.String) -> b
com.sfmap.api.mapcore.util.LogUpdateRequest -> com.sfmap.api.mapcore.util.bi:
    byte[] postData -> a
    java.lang.String scode -> b
    java.lang.String ts -> c
    java.lang.String ak -> d
    12:21:void <init>(android.content.Context,byte[]) -> <init>
    25:30:java.util.Map getHeadMaps() -> a
    35:35:java.util.Map getRequestParam() -> b
    40:40:java.lang.String getUrl() -> c
    45:45:byte[] a_() -> d
com.sfmap.api.mapcore.util.LogWriter -> com.sfmap.api.mapcore.util.bj:
    com.sfmap.api.mapcore.util.SDKInfo sdkInfo -> a
    16:16:void <init>() -> <init>
    23:41:com.sfmap.api.mapcore.util.LogWriter getLogWriterByType(int) -> a
    46:92:void writerLog(android.content.Context,java.lang.Throwable,java.lang.String,java.lang.String) -> a
    131:158:void writerANRLog(android.content.Context) -> a
    java.lang.String a(java.util.List) -> a
    164:165:void setSDKInfo(com.sfmap.api.mapcore.util.SDKInfo) -> a
    169:182:java.util.List getSDKLog(android.content.Context) -> b
    187:193:void outputLog(com.sfmap.api.mapcore.util.LogDBOperation,java.lang.String,java.lang.String,int,boolean) -> a
    int getType() -> a
    java.lang.String toMD5Encrypt(java.lang.String) -> a
    com.sfmap.api.mapcore.util.FileOperationListenerDecode a(com.sfmap.api.mapcore.util.LogDBOperation) -> a
    java.lang.String getDirName() -> b
    205:218:java.lang.String appendParam(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> a
    223:238:java.lang.String base64AndHex(android.content.Context,java.lang.String) -> a
    243:247:java.lang.String getTime() -> c
    252:261:java.lang.String throwableHtml(java.lang.Throwable) -> a
    266:266:java.lang.String throwableToStrings(java.lang.Throwable) -> b
    271:272:java.lang.String getClientInfo(android.content.Context,com.sfmap.api.mapcore.util.SDKInfo) -> a
    277:278:java.lang.String getAppKey(android.content.Context) -> c
    283:345:boolean outToDiskCache(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.sfmap.api.mapcore.util.LogDBOperation) -> a
    350:366:boolean isContain(java.lang.String[],java.lang.String) -> a
com.sfmap.api.mapcore.util.LruCacheDecode -> com.sfmap.api.mapcore.util.bk:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    18:24:void <init>(int) -> <init>
    28:63:java.lang.Object get(java.lang.Object) -> a
    68:85:java.lang.Object put(java.lang.Object,java.lang.Object) -> b
    95:122:void trimToSize(int) -> a
    124:124:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    128:128:java.lang.Object create(java.lang.Object) -> b
    133:137:int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    142:142:int sizeOf(java.lang.Object,java.lang.Object) -> a
    147:148:void evictAll() -> a
    153:158:java.lang.String toString() -> toString
com.sfmap.api.mapcore.util.MD5 -> com.sfmap.api.mapcore.util.bl:
    15:56:java.lang.String getFileMD5(java.lang.String) -> a
    76:77:java.lang.String encryptString(java.lang.String) -> b
    131:145:byte[] stringToMD5(java.lang.String) -> c
    150:158:byte[] toMD5(java.lang.String) -> d
com.sfmap.api.mapcore.util.MapThrowException -> com.sfmap.api.mapcore.util.bm:
    8:11:java.lang.Object ThrowNullPointerException(java.lang.Object) -> a
    16:19:java.lang.Object ThrowNullPointerException(java.lang.Object,java.lang.Object) -> a
    24:27:void ThrowIllegalStateException(boolean,java.lang.Object) -> a
    31:34:void bThrowIllegalArgumentException(boolean,java.lang.Object) -> b
    38:41:void ThrowIllegalArgumentException(boolean,java.lang.String,java.lang.Object[]) -> a
com.sfmap.api.mapcore.util.MultiTouchSupportDecode -> com.sfmap.api.mapcore.util.bn:
    boolean multiTouchAPISupported -> d
    com.sfmap.api.mapcore.util.MultiTouchSupportDecode$MultiTouchDragListener listener -> e
    java.lang.reflect.Method getPointerCount -> a
    java.lang.reflect.Method getX -> b
    java.lang.reflect.Method getY -> c
    long mUpTime -> f
    boolean inDragMode -> g
    15:56:void <init>(android.content.Context,com.sfmap.api.mapcore.util.MultiTouchSupportDecode$MultiTouchDragListener) -> <init>
    30:30:boolean isDragMode() -> a
    35:35:long getUpdateTime() -> b
    42:54:void initMethods() -> c
    60:106:boolean onTouchEvent(android.view.MotionEvent) -> a
com.sfmap.api.mapcore.util.MultiTouchSupportDecode$MultiTouchDragListener -> com.sfmap.api.mapcore.util.bn$a:
    boolean onMultiTouchDraging(android.view.MotionEvent,float,float,float,float) -> a
    void onMultiTouchGestureInit(float,float,float,float,float) -> a
    void onMultiTouchSingleTap() -> a
com.sfmap.api.mapcore.util.NetCompleteListener -> com.sfmap.api.mapcore.util.bo:
    void complete() -> a
com.sfmap.api.mapcore.util.NetFileFetch -> com.sfmap.api.mapcore.util.bp:
    com.sfmap.api.mapcore.util.SiteInfoBean siteInfo -> a
    long b -> b
    long myFileLength -> c
    long fileLength -> d
    boolean e -> e
    android.content.Context context -> i
    com.sfmap.api.mapcore.util.OfflineDBOperation dbOperation -> f
    com.sfmap.api.mapcore.util.IDownloadListener listener -> j
    java.lang.String k -> k
    com.sfmap.api.mapcore.util.DownloadManager downloadManager -> l
    com.sfmap.api.mapcore.util.FileAccessI access -> m
    long g -> g
    com.sfmap.api.mapcore.util.NetFileFetch$a h -> h
    14:40:void <init>(com.sfmap.api.mapcore.util.SiteInfoBean,java.lang.String,android.content.Context,com.sfmap.api.mapcore.util.IDownloadListener) -> <init>
    45:51:void f() -> e
    55:65:void g() -> f
    71:128:void start() -> c
    136:147:boolean tempFileExist() -> g
    153:170:void authOffLineDownLoad() -> h
    205:212:void j() -> i
    216:218:void k() -> j
    222:228:void a(long) -> a
    232:241:boolean l() -> k
    251:256:void c() -> d
    260:264:void d() -> a
    268:291:void e() -> b
    293:300:boolean checkMD5(java.lang.String,java.lang.String) -> a
    304:312:void renameZipFile() -> l
    316:328:void a(java.lang.Throwable) -> a
    334:350:void a(byte[],long) -> a
    354:355:void a(com.sfmap.api.mapcore.util.NetFileFetch$a) -> a
com.sfmap.api.mapcore.util.NetFileFetch$a -> com.sfmap.api.mapcore.util.bp$a:
    void onNetfileFetchFinish() -> a
com.sfmap.api.mapcore.util.NetManger -> com.sfmap.api.mapcore.util.bq:
    com.sfmap.api.mapcore.util.NetManger netManger -> a
    com.sfmap.api.mapcore.util.ThreadPool pool -> b
    android.os.Handler handler -> c
    17:17:com.sfmap.api.mapcore.util.NetManger a(boolean) -> a
    24:34:com.sfmap.api.mapcore.util.NetManger a(boolean,int) -> a
    38:56:void <init>(boolean,int) -> <init>
    61:79:byte[] makeSyncPostRequest(com.sfmap.api.mapcore.util.Request) -> a
    85:101:byte[] d(com.sfmap.api.mapcore.util.Request) -> c
    107:130:com.sfmap.api.mapcore.util.ResponseEntity b(com.sfmap.api.mapcore.util.Request,boolean) -> b
    11:11:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.NetManger$1 -> com.sfmap.api.mapcore.util.bq$1:
com.sfmap.api.mapcore.util.NetManger$a -> com.sfmap.api.mapcore.util.bq$a:
    160:161:void <init>(android.os.Looper) -> <init>
    163:163:void <init>() -> <init>
    169:188:void handleMessage(android.os.Message) -> handleMessage
    155:155:void <init>(android.os.Looper,com.sfmap.api.mapcore.util.NetManger$1) -> <init>
com.sfmap.api.mapcore.util.NewVersionState -> com.sfmap.api.mapcore.util.br:
    8:9:void <init>(int,com.sfmap.api.mapcore.util.CityObject) -> <init>
    13:14:void c() -> c
    18:22:void start() -> d
com.sfmap.api.mapcore.util.NormalLogEntity -> com.sfmap.api.mapcore.util.bs:
    6:6:void <init>() -> <init>
    10:10:java.lang.String getTableName() -> a
com.sfmap.api.mapcore.util.NormalLogUpDateProcessor -> com.sfmap.api.mapcore.util.bt:
    boolean a -> a
    16:17:void <init>(android.content.Context) -> <init>
    21:21:java.lang.String getDir() -> a
    26:26:int getLogType() -> b
    31:52:boolean dbIsRight(android.content.Context) -> a
    12:12:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.NormalLogWriter -> com.sfmap.api.mapcore.util.bu:
    com.sfmap.api.mapcore.util.NormalLogWriter$a a -> a
    9:9:void <init>() -> <init>
    15:15:int getType() -> a
    20:26:java.lang.String toMD5Encrypt(java.lang.String) -> a
    31:31:java.lang.String getDirName() -> b
    61:69:com.sfmap.api.mapcore.util.FileOperationListenerDecode a(com.sfmap.api.mapcore.util.LogDBOperation) -> a
    74:74:java.lang.String a(java.util.List) -> a
com.sfmap.api.mapcore.util.NormalLogWriter$a -> com.sfmap.api.mapcore.util.bu$a:
    com.sfmap.api.mapcore.util.LogDBOperation db -> b
    com.sfmap.api.mapcore.util.NormalLogWriter this$0 -> a
    40:42:void <init>(com.sfmap.api.mapcore.util.NormalLogWriter,com.sfmap.api.mapcore.util.LogDBOperation) -> <init>
    48:54:void a(java.lang.String) -> a
com.sfmap.api.mapcore.util.OfflineDBCreator -> com.sfmap.api.mapcore.util.bv:
    com.sfmap.api.mapcore.util.OfflineDBCreator instance -> a
    5:5:void <init>() -> <init>
    38:41:com.sfmap.api.mapcore.util.OfflineDBCreator getInstance() -> c
    48:57:void onCreate(android.database.sqlite.SQLiteDatabase) -> a
    61:61:java.lang.String getDBFileName() -> a
    66:66:int c() -> b
    69:69:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> a
com.sfmap.api.mapcore.util.OfflineDBOperation -> com.sfmap.api.mapcore.util.bw:
    com.sfmap.api.mapcore.util.OfflineDBOperation instance -> a
    com.sfmap.api.mapcore.util.DBOperation dbOperation -> b
    android.content.Context context -> c
    15:18:com.sfmap.api.mapcore.util.OfflineDBOperation getInstance(android.content.Context) -> a
    22:25:void <init>(android.content.Context) -> <init>
    29:39:com.sfmap.api.mapcore.util.DBOperation getDB(android.content.Context) -> b
    44:50:boolean isInit() -> b
    55:64:java.util.ArrayList getOfflineCityListFromDB() -> a
    69:79:void a(com.sfmap.api.mapcore.util.UpdateItem) -> a
    83:100:void a(java.lang.String,java.lang.String) -> a
    104:112:java.util.List a(java.lang.String) -> a
    117:125:java.util.List b(java.lang.String) -> b
    130:136:java.util.List a(java.util.List) -> a
    141:149:void c(java.lang.String) -> c
    153:159:void a(java.lang.String,int,long,long,long) -> a
    163:172:void a(java.lang.String,int,long,long[],long[]) -> a
    176:189:long[] a(java.lang.String,int) -> a
    194:204:int d(java.lang.String) -> d
    214:224:java.lang.String getDownloadMapVersion(java.lang.String) -> e
    229:238:boolean f(java.lang.String) -> f
com.sfmap.api.mapcore.util.OfflineDownloadManager -> com.sfmap.api.mapcore.util.bx:
    android.content.Context context -> h
    java.util.concurrent.CopyOnWriteArrayList cityList -> a
    com.sfmap.api.mapcore.util.OfflineDownloadManager offlineDownloadManager -> i
    com.sfmap.api.mapcore.util.OfflineDownloadManager$DownloadListener listener -> j
    com.sfmap.api.mapcore.util.TaskManager taskManager -> k
    java.lang.String dataPath -> b
    java.lang.String version -> c
    com.sfmap.api.mapcore.util.OfflineDBOperation offlineDBOperation -> l
    java.util.concurrent.ExecutorService executorService -> m
    java.util.concurrent.ExecutorService executorService1 -> n
    com.sfmap.api.mapcore.util.OfflineDownloadManager$OfflineMapHandler offlineMapHandler -> d
    com.sfmap.api.mapcore.util.OfflineMapDownloadList downloadList -> e
    com.sfmap.api.mapcore.util.OfflineMapRemoveTask removeTask -> f
    com.sfmap.api.mapcore.util.OfflineMapDataVerify offlineMapDataVerify -> g
    24:43:void <init>(android.content.Context) -> <init>
    47:50:com.sfmap.api.mapcore.util.OfflineDownloadManager getInstance(android.content.Context) -> a
    58:82:void init() -> f
    86:111:void paseCityListJson() -> g
    121:126:void parseCityList(java.lang.String) -> f
    130:159:void sestUploadlist() -> h
    163:174:void a(java.util.ArrayList) -> a
    178:228:void updateOfflineMapByName(java.lang.String) -> a
    230:235:void reInitManager() -> i
    237:247:void clearList() -> j
    251:254:void checkConnection() -> k
    259:267:void getUpdateCityList(java.lang.String) -> b
    271:275:boolean b(java.lang.String) -> c
    280:303:void c(java.lang.String) -> d
    309:315:void addDownloadTask(com.sfmap.api.mapcore.util.CityObject) -> a
    319:324:void b(com.sfmap.api.mapcore.util.CityObject) -> b
    328:333:void stop() -> a
    337:344:void pause() -> b
    348:365:void destroy() -> c
    369:374:com.sfmap.api.mapcore.util.CityObject getCity(java.lang.String) -> g
    389:395:void downloadByCityName(java.lang.String) -> e
    409:410:void stopDownloadCity(com.sfmap.api.mapcore.util.CityObject) -> c
    414:415:void removeTask(com.sfmap.api.mapcore.util.CityObject) -> d
    419:420:void setDownloadListener(com.sfmap.api.mapcore.util.OfflineDownloadManager$DownloadListener) -> a
    424:425:void removeListener() -> d
    21:21:com.sfmap.api.mapcore.util.OfflineDownloadManager access$000() -> e
    21:21:com.sfmap.api.mapcore.util.CityObject access$100(com.sfmap.api.mapcore.util.OfflineDownloadManager,java.lang.String) -> a
    21:21:com.sfmap.api.mapcore.util.OfflineDBOperation access$200(com.sfmap.api.mapcore.util.OfflineDownloadManager) -> a
    21:21:void access$300(com.sfmap.api.mapcore.util.OfflineDownloadManager) -> b
    21:21:android.content.Context access$400(com.sfmap.api.mapcore.util.OfflineDownloadManager) -> c
    21:21:com.sfmap.api.mapcore.util.OfflineDownloadManager$DownloadListener access$500(com.sfmap.api.mapcore.util.OfflineDownloadManager) -> d
    21:21:void access$600(com.sfmap.api.mapcore.util.OfflineDownloadManager) -> e
    28:29:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.OfflineDownloadManager$1 -> com.sfmap.api.mapcore.util.bx$1:
    java.lang.String val$cityName -> a
    com.sfmap.api.mapcore.util.OfflineDownloadManager this$0 -> b
    188:188:void <init>(com.sfmap.api.mapcore.util.OfflineDownloadManager,java.lang.String) -> <init>
    190:226:void run() -> run
com.sfmap.api.mapcore.util.OfflineDownloadManager$2 -> com.sfmap.api.mapcore.util.bx$2:
    com.sfmap.api.mapcore.util.CityObject val$localg -> a
    com.sfmap.api.mapcore.util.OfflineDownloadManager this$0 -> b
    294:294:void <init>(com.sfmap.api.mapcore.util.OfflineDownloadManager,com.sfmap.api.mapcore.util.CityObject) -> <init>
    296:301:void run() -> run
com.sfmap.api.mapcore.util.OfflineDownloadManager$DownloadListener -> com.sfmap.api.mapcore.util.bx$a:
    void updateState(com.sfmap.api.mapcore.util.CityObject) -> a
    void postCheckUpdateRes(com.sfmap.api.mapcore.util.CityObject) -> b
    void c(com.sfmap.api.mapcore.util.CityObject) -> c
    void reLoadCityList() -> a
com.sfmap.api.mapcore.util.OfflineDownloadManager$OfflineMapHandler -> com.sfmap.api.mapcore.util.bx$b:
    com.sfmap.api.mapcore.util.OfflineDownloadManager this$0 -> a
    442:444:void <init>(com.sfmap.api.mapcore.util.OfflineDownloadManager,android.os.Looper) -> <init>
    450:470:void handleMessage(android.os.Message) -> handleMessage
com.sfmap.api.mapcore.util.OfflineDownloadRequest -> com.sfmap.api.mapcore.util.by:
    java.lang.String url -> a
    11:13:void <init>(java.lang.String) -> <init>
    17:17:java.util.Map getHeadMaps() -> a
    22:22:java.util.Map getRequestParam() -> b
    27:27:java.lang.String getUrl() -> c
com.sfmap.api.mapcore.util.OfflineInitBean -> com.sfmap.api.mapcore.util.bz:
    boolean hasNewVersion -> a
    java.lang.String version -> b
    3:3:void <init>() -> <init>
    9:9:java.lang.String getVersion() -> a
    14:14:boolean hasNewVersion() -> b
    19:20:void setHasNewVersion(boolean) -> a
    24:25:void setVersion(java.lang.String) -> a
com.sfmap.api.mapcore.util.OfflineInitHandler -> com.sfmap.api.mapcore.util.ca:
    14:17:void <init>(android.content.Context,java.lang.String) -> <init>
    21:22:java.lang.String getUrl() -> c
    28:51:com.sfmap.api.mapcore.util.OfflineInitBean parseJson(java.lang.String) -> a
    56:66:java.util.Map getRequestParam() -> b
    9:9:java.lang.Object parseJson(java.lang.String) -> b
com.sfmap.api.mapcore.util.OfflineMapDataVerify -> com.sfmap.api.mapcore.util.cb:
    android.content.Context context -> a
    com.sfmap.api.mapcore.util.OfflineDBOperation offlineDBOperation -> b
    18:21:void <init>(android.content.Context) -> <init>
    25:26:void run() -> run
    30:63:void a() -> a
    67:87:java.util.ArrayList paseOfflineCityList(android.content.Context) -> a
    97:101:com.sfmap.api.mapcore.util.UpdateItem jsonToUpdateItem(java.io.File) -> a
    106:120:boolean a(java.lang.String) -> a
    125:127:void destroy() -> destroy
com.sfmap.api.mapcore.util.OfflineMapDownloadList -> com.sfmap.api.mapcore.util.cc:
    java.util.ArrayList mapProvinceArrayList -> a
    com.sfmap.api.mapcore.util.OfflineDBOperation offlineDBOperation -> b
    android.content.Context context -> c
    android.os.Handler handler -> d
    16:24:void <init>(android.content.Context,android.os.Handler) -> <init>
    27:30:void a(com.sfmap.api.mapcore.util.UpdateItem) -> a
    33:36:void d(java.lang.String) -> c
    39:39:boolean a(int,int) -> a
    43:46:boolean b(int) -> b
    50:59:boolean a(com.sfmap.api.maps.offlinemap.OfflineMapProvince) -> a
    63:67:java.util.ArrayList getOfflineMapProvinceList() -> a
    85:96:com.sfmap.api.maps.offlinemap.OfflineMapCity b(java.lang.String) -> a
    100:109:com.sfmap.api.maps.offlinemap.OfflineMapProvince getProvinceByName(java.lang.String) -> b
    113:119:java.util.ArrayList b() -> b
    149:157:void updateAllCity(java.util.List) -> a
    170:181:java.util.ArrayList getDownloadOfflineMapCityList() -> c
    185:193:java.util.ArrayList getDownloadOfflineMapProvinceList() -> d
    197:211:java.util.ArrayList getDownloadingCityList() -> e
    215:223:java.util.ArrayList f() -> f
    227:227:boolean checkStatus(int) -> a
    231:251:void a(com.sfmap.api.mapcore.util.CityObject) -> a
    254:264:void a(com.sfmap.api.mapcore.util.CityObject,com.sfmap.api.maps.offlinemap.OfflineMapCity) -> a
    267:285:void a(com.sfmap.api.mapcore.util.CityObject,com.sfmap.api.maps.offlinemap.OfflineMapProvince) -> a
    288:292:void g() -> g
    295:296:void h() -> h
com.sfmap.api.mapcore.util.OfflineMapDownloadTask -> com.sfmap.api.mapcore.util.cd:
    com.sfmap.api.mapcore.util.NetFileFetch netFileFetch -> b
    com.sfmap.api.mapcore.util.UnZipFile unZipFile -> c
    com.sfmap.api.mapcore.util.CityObject cityObject -> d
    android.content.Context context -> e
    android.os.Bundle bundle -> f
    com.sfmap.api.maps.MapController mMap -> g
    boolean isStoped -> h
    17:26:void <init>(com.sfmap.api.mapcore.util.TaskItem,android.content.Context) -> <init>
    30:32:void <init>(com.sfmap.api.mapcore.util.TaskItem,android.content.Context,com.sfmap.api.maps.MapController) -> <init>
    36:50:void myRun() -> b
    52:53:void canDownload() -> c
    56:69:void stopTask() -> d
    73:73:java.lang.String fileParents() -> g
    79:93:void g() -> h
    97:103:void clear() -> e
    107:113:void onNetfileFetchFinish() -> a
com.sfmap.api.mapcore.util.OfflineMapRemoveTask -> com.sfmap.api.mapcore.util.ce:
    android.content.Context a -> a
    14:16:void <init>(android.content.Context) -> <init>
    20:21:void a(com.sfmap.api.mapcore.util.CityObject) -> a
    25:39:boolean b(com.sfmap.api.mapcore.util.CityObject) -> b
    44:90:boolean a(java.lang.String,android.content.Context) -> a
com.sfmap.api.mapcore.util.OfflineUpdateCityHandler -> com.sfmap.api.mapcore.util.cf:
    android.content.Context context -> j
    28:31:void <init>(android.content.Context,java.lang.String) -> <init>
    35:36:void setContext(android.content.Context) -> a
    41:63:java.util.List parseJson(java.lang.String) -> a
    68:118:void saveOfflinemapJson(java.lang.String) -> d
    123:132:long getBlockSize() -> e
    137:138:java.lang.String getUrl() -> c
    144:169:java.util.List parseNetJson(java.lang.String) -> c
    174:186:java.util.Map getRequestParam() -> b
    21:21:java.lang.Object parseJson(java.lang.String) -> b
com.sfmap.api.mapcore.util.PauseState -> com.sfmap.api.mapcore.util.cg:
    8:9:void <init>(int,com.sfmap.api.mapcore.util.CityObject) -> <init>
    13:16:void c() -> c
    20:25:void continueDownload() -> e
com.sfmap.api.mapcore.util.ProtocalHandler -> com.sfmap.api.mapcore.util.ch:
    java.lang.Object task -> a
    int maxTry -> b
    java.lang.String c -> c
    android.content.Context cnt -> d
    int j -> j
    int e -> e
    int f -> f
    13:23:void <init>(android.content.Context,java.lang.Object) -> <init>
    27:29:void a(android.content.Context,java.lang.Object) -> a
    java.lang.Object parseJson(java.lang.String) -> b
    37:40:java.lang.Object getData() -> f
    46:97:java.lang.Object getDataMayThrow() -> e
    103:118:java.lang.Object getObject(byte[]) -> a
    123:129:java.util.Map getHeadMaps() -> a
    135:135:java.lang.Object a(byte[]) -> b
    140:140:java.lang.Object e() -> g
com.sfmap.api.mapcore.util.RSAUtils -> com.sfmap.api.mapcore.util.ci:
    122:142:byte[] encryptByPublicKey(byte[],java.security.interfaces.RSAPublicKey) -> a
    301:318:byte[][] splitArray(byte[],int) -> a
    322:338:java.security.PublicKey getPublicKey() -> a
com.sfmap.api.mapcore.util.RegionUtil -> com.sfmap.api.mapcore.util.cj:
    9:22:boolean a(double,double) -> a
    27:38:boolean a(int,int,int) -> a
com.sfmap.api.mapcore.util.Request -> com.sfmap.api.mapcore.util.ck:
    int connTimeout -> g
    int readTimeout -> h
    java.net.Proxy proxy -> i
    8:12:void <init>() -> <init>
    16:28:java.lang.String getUrlAndParam() -> h
    33:51:byte[] getConnectionDatas() -> i
    java.util.Map getHeadMaps() -> a
    java.util.Map getRequestParam() -> b
    java.lang.String getUrl() -> c
    62:63:void setConnTimeout(int) -> a
    67:68:void setReadTimeout(int) -> b
    72:72:byte[] a_() -> d
com.sfmap.api.mapcore.util.ResourcesUtilDecode -> com.sfmap.api.mapcore.util.cl:
    boolean resExist -> a
    20:36:android.content.res.AssetManager getSelfAssets(android.content.Context) -> a
    10:16:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.Response -> com.sfmap.api.mapcore.util.cm:
    void a() -> a
    void a(com.sfmap.api.mapcore.util.IMMapCoreException) -> a
com.sfmap.api.mapcore.util.ResponseEntity -> com.sfmap.api.mapcore.util.cn:
    byte[] resBytes -> a
    java.util.Map b -> b
    6:6:void <init>() -> <init>
com.sfmap.api.mapcore.util.ResponseMessageEntity -> com.sfmap.api.mapcore.util.co:
    com.sfmap.api.mapcore.util.IMMapCoreException mapCore -> a
    com.sfmap.api.mapcore.util.Response response -> b
    3:3:void <init>() -> <init>
com.sfmap.api.mapcore.util.RotateGestureDetectorDecode -> com.sfmap.api.mapcore.util.cp:
    com.sfmap.api.mapcore.util.RotateGestureDetectorDecode$OnRotateGestureListener mListener -> l
    boolean mSloppyGesture -> m
    14:16:void <init>(android.content.Context,com.sfmap.api.mapcore.util.RotateGestureDetectorDecode$OnRotateGestureListener) -> <init>
    20:48:void handleStartProgressEvent(int,android.view.MotionEvent) -> a
    53:81:void handleInProgressEvent(int,android.view.MotionEvent) -> b
    85:87:void resetState() -> a
    91:92:float getRotationDegreesDelta() -> b
com.sfmap.api.mapcore.util.RotateGestureDetectorDecode$OnRotateGestureListener -> com.sfmap.api.mapcore.util.cp$a:
    boolean onRotate(com.sfmap.api.mapcore.util.RotateGestureDetectorDecode) -> a
    boolean onRotateBegin(com.sfmap.api.mapcore.util.RotateGestureDetectorDecode) -> b
    void onRotateEnd(com.sfmap.api.mapcore.util.RotateGestureDetectorDecode) -> c
com.sfmap.api.mapcore.util.SDKDBOperation -> com.sfmap.api.mapcore.util.cq:
    com.sfmap.api.mapcore.util.DBOperation a -> a
    android.content.Context b -> b
    12:15:void <init>(android.content.Context,boolean) -> <init>
    19:32:com.sfmap.api.mapcore.util.DBOperation a(android.content.Context,boolean) -> a
    39:61:void a(com.sfmap.api.mapcore.util.SDKInfo) -> a
    65:76:java.util.List a() -> a
com.sfmap.api.mapcore.util.SDKEntity -> com.sfmap.api.mapcore.util.cr:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.sfmap.api.mapcore.util.SDKInfo g -> g
    8:17:void <init>() -> <init>
    21:45:android.content.ContentValues a() -> b
    51:77:com.sfmap.api.mapcore.util.SDKInfo select(android.database.Cursor) -> a
    82:83:void setLogInfo(com.sfmap.api.mapcore.util.SDKInfo) -> a
    87:87:java.lang.String getTableName() -> a
    94:100:java.lang.String[] b(java.lang.String) -> b
    107:120:java.lang.String a(java.lang.String[]) -> a
    125:128:java.lang.String a(java.lang.String) -> a
    133:133:java.lang.String c() -> c
    8:8:java.lang.Object select(android.database.Cursor) -> b
    11:16:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.SDKInfo -> com.sfmap.api.mapcore.util.cs:
    java.lang.String version -> a
    java.lang.String useragen -> b
    java.lang.String product -> c
    java.lang.String username -> d
    boolean d -> e
    java.lang.String e -> f
    java.lang.String[] packagesNames -> g
    8:22:void <init>(com.sfmap.api.mapcore.util.SDKInfo$createSDKInfo) -> <init>
    78:78:java.lang.String getProduct() -> a
    83:83:java.lang.String getVersion() -> b
    88:88:java.lang.String getUseragen() -> c
    93:93:java.lang.String d() -> d
    98:98:boolean e() -> e
    103:103:java.lang.String[] getPackageNames() -> f
    3:3:void <init>(com.sfmap.api.mapcore.util.SDKInfo$createSDKInfo,com.sfmap.api.mapcore.util.SDKInfo$1) -> <init>
com.sfmap.api.mapcore.util.SDKInfo$1 -> com.sfmap.api.mapcore.util.cs$1:
com.sfmap.api.mapcore.util.SDKInfo$createSDKInfo -> com.sfmap.api.mapcore.util.cs$a:
    java.lang.String version -> a
    java.lang.String product -> b
    java.lang.String useragen -> c
    java.lang.String username -> d
    boolean d -> e
    java.lang.String e -> f
    java.lang.String[] sdkPackages -> g
    30:40:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    44:45:com.sfmap.api.mapcore.util.SDKInfo$createSDKInfo a(boolean) -> a
    50:51:com.sfmap.api.mapcore.util.SDKInfo$createSDKInfo a(java.lang.String) -> a
    56:57:com.sfmap.api.mapcore.util.SDKInfo$createSDKInfo setPackageName(java.lang.String[]) -> a
    63:67:com.sfmap.api.mapcore.util.SDKInfo a() -> a
    24:24:java.lang.String access$000(com.sfmap.api.mapcore.util.SDKInfo$createSDKInfo) -> a
    24:24:java.lang.String access$100(com.sfmap.api.mapcore.util.SDKInfo$createSDKInfo) -> b
    24:24:java.lang.String access$200(com.sfmap.api.mapcore.util.SDKInfo$createSDKInfo) -> c
    24:24:java.lang.String access$300(com.sfmap.api.mapcore.util.SDKInfo$createSDKInfo) -> d
    24:24:boolean access$400(com.sfmap.api.mapcore.util.SDKInfo$createSDKInfo) -> e
    24:24:java.lang.String access$500(com.sfmap.api.mapcore.util.SDKInfo$createSDKInfo) -> f
    24:24:java.lang.String[] access$600(com.sfmap.api.mapcore.util.SDKInfo$createSDKInfo) -> g
com.sfmap.api.mapcore.util.SDKLogHandler -> com.sfmap.api.mapcore.util.ct:
    android.content.Context context -> d
    java.util.concurrent.ExecutorService executorService -> e
    18:26:java.util.concurrent.ExecutorService getLogSingleThreadExecutor() -> a
    31:50:com.sfmap.api.mapcore.util.SDKLogHandler a(android.content.Context,com.sfmap.api.mapcore.util.SDKInfo) -> a
    55:55:com.sfmap.api.mapcore.util.SDKLogHandler getLogHandler() -> b
    60:63:void exception(java.lang.Throwable,java.lang.String,java.lang.String) -> b
    73:93:void colseLogThread() -> c
    96:101:void <init>(android.content.Context,com.sfmap.api.mapcore.util.SDKInfo) -> <init>
    107:132:void setExceptionHandler() -> d
    141:148:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    154:163:void b(java.lang.Throwable,java.lang.String,java.lang.String) -> c
    167:168:void outPutLog(java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
    178:214:void a(android.content.Context,com.sfmap.api.mapcore.util.SDKInfo,boolean) -> a
com.sfmap.api.mapcore.util.SDKLogHandler$1 -> com.sfmap.api.mapcore.util.ct$1:
    com.sfmap.api.mapcore.util.SDKInfo val$sdkInfo -> a
    android.content.Context val$paramContext -> b
    boolean val$paramBoolean -> c
    com.sfmap.api.mapcore.util.SDKLogHandler this$0 -> d
    182:182:void <init>(com.sfmap.api.mapcore.util.SDKLogHandler,com.sfmap.api.mapcore.util.SDKInfo,android.content.Context,boolean) -> <init>
    186:207:void run() -> run
com.sfmap.api.mapcore.util.SDKLogHandler$LogNetListener -> com.sfmap.api.mapcore.util.ct$a:
    android.content.Context context1 -> a
    221:223:void <init>(android.content.Context) -> <init>
    230:237:void complete() -> a
com.sfmap.api.mapcore.util.SQlEntity -> com.sfmap.api.mapcore.util.cu:
    android.content.ContentValues a() -> b
    java.lang.Object select(android.database.Cursor) -> b
    java.lang.String getTableName() -> a
com.sfmap.api.mapcore.util.SfScaleGestureDetector -> com.sfmap.api.mapcore.util.cv:
    android.content.Context mContext -> a
    com.sfmap.api.mapcore.util.SfScaleGestureDetector$OnScaleGestureListener mListener -> b
    float mFocusX -> c
    float mFocusY -> d
    boolean mQuickScaleEnabled -> e
    boolean mStylusScaleEnabled -> f
    float mCurrSpan -> g
    float mPrevSpan -> h
    float mInitialSpan -> i
    float mCurrSpanX -> j
    float mCurrSpanY -> k
    float mPrevSpanX -> l
    float mPrevSpanY -> m
    long mCurrTime -> n
    long mPrevTime -> o
    boolean mInProgress -> p
    int mSpanSlop -> q
    int mMinSpan -> r
    float mTouchUpper -> s
    float mTouchLower -> t
    float mTouchHistoryLastAccepted -> u
    int mTouchHistoryDirection -> v
    long mTouchHistoryLastAcceptedTime -> w
    int mTouchMinMajor -> x
    android.os.Handler mHandler -> y
    float mAnchoredScaleStartX -> z
    float mAnchoredScaleStartY -> A
    int mAnchoredScaleMode -> B
    android.view.GestureDetector mGestureDetector -> C
    boolean mEventBeforeOrAboveStartingGestureEvent -> D
    91:92:void <init>(android.content.Context,com.sfmap.api.mapcore.util.SfScaleGestureDetector$OnScaleGestureListener) -> <init>
    74:126:void <init>(android.content.Context,com.sfmap.api.mapcore.util.SfScaleGestureDetector$OnScaleGestureListener,android.os.Handler) -> <init>
    134:185:void addTouchHistory(android.view.MotionEvent) -> b
    192:197:void clearTouchHistory() -> b
    216:371:boolean onTouchEvent(android.view.MotionEvent) -> a
    375:375:boolean inAnchoredScaleMode() -> c
    385:400:void setQuickScaleEnabled(boolean) -> a
    418:419:void setStylusScaleEnabled(boolean) -> b
    532:542:float getScaleFactor() -> a
    15:15:float access$002(com.sfmap.api.mapcore.util.SfScaleGestureDetector,float) -> a
    15:15:float access$102(com.sfmap.api.mapcore.util.SfScaleGestureDetector,float) -> b
    15:15:int access$202(com.sfmap.api.mapcore.util.SfScaleGestureDetector,int) -> a
com.sfmap.api.mapcore.util.SfScaleGestureDetector$1 -> com.sfmap.api.mapcore.util.cv$1:
    com.sfmap.api.mapcore.util.SfScaleGestureDetector this$0 -> a
    388:388:void <init>(com.sfmap.api.mapcore.util.SfScaleGestureDetector) -> <init>
    392:395:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
com.sfmap.api.mapcore.util.SfScaleGestureDetector$OnScaleGestureListener -> com.sfmap.api.mapcore.util.cv$a:
    boolean onScale(com.sfmap.api.mapcore.util.SfScaleGestureDetector) -> a
    boolean onScaleBegin(com.sfmap.api.mapcore.util.SfScaleGestureDetector) -> b
    void onScaleEnd(com.sfmap.api.mapcore.util.SfScaleGestureDetector) -> c
com.sfmap.api.mapcore.util.ShortArray -> com.sfmap.api.mapcore.util.cw:
    short[] a -> a
    int b -> b
    boolean c -> c
    11:12:void <init>() -> <init>
    15:18:void <init>(boolean,int) -> <init>
    22:27:void a(short) -> a
    31:34:short a(int) -> a
    39:50:short b(int) -> b
    55:56:void a() -> a
    60:64:short[] c(int) -> c
    69:73:short[] d(int) -> d
    78:94:boolean equals(java.lang.Object) -> equals
    99:112:java.lang.String toString() -> toString
com.sfmap.api.mapcore.util.SiteInfoBean -> com.sfmap.api.mapcore.util.cx:
    java.lang.String url -> a
    java.lang.String fileRootPath -> b
    java.lang.String downloadFileName -> c
    int d -> d
    java.lang.String adcode -> e
    java.lang.String md5 -> f
    long citySize -> g
    13:21:void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,long) -> <init>
    30:30:java.lang.String getFileRootPath() -> a
    35:35:java.lang.String getFileTempName() -> b
    40:40:int d() -> c
    45:45:java.lang.String getAdcode() -> d
    48:48:java.lang.String getMD5() -> e
    50:50:long getSize() -> f
com.sfmap.api.mapcore.util.StrictLineReader -> com.sfmap.api.mapcore.util.cy:
    java.io.InputStream inputStream -> a
    java.nio.charset.Charset charset -> b
    byte[] c -> c
    int d -> d
    int e -> e
    22:23:void <init>(java.io.InputStream,java.nio.charset.Charset) -> <init>
    26:39:void <init>(java.io.InputStream,int,java.nio.charset.Charset) -> <init>
    44:52:void close() -> close
    57:107:java.lang.String readLine() -> a
    113:119:void b() -> b
    11:11:java.nio.charset.Charset access$000(com.sfmap.api.mapcore.util.StrictLineReader) -> a
com.sfmap.api.mapcore.util.StrictLineReader$1 -> com.sfmap.api.mapcore.util.cy$1:
    com.sfmap.api.mapcore.util.StrictLineReader this$0 -> a
    76:76:void <init>(com.sfmap.api.mapcore.util.StrictLineReader,int) -> <init>
    79:87:java.lang.String toString() -> toString
com.sfmap.api.mapcore.util.StylesIconsUpdate -> com.sfmap.api.mapcore.util.cz:
    com.sfmap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile mRetFileRecoder -> a
    android.content.Context mContext -> b
    org.apache.http.util.ByteArrayBuffer netWorkData -> c
    int mReceiveDataLen -> d
    boolean canceled -> e
    boolean successed -> f
    int mode -> g
    int updateServerVersion -> h
    33:49:void <init>(android.content.Context,com.sfmap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile,int) -> <init>
    56:56:java.lang.String getMapAddress() -> a
    60:157:void run() -> run
com.sfmap.api.mapcore.util.TaskItem -> com.sfmap.api.mapcore.util.da:
    java.lang.String getMyUrl() -> b
com.sfmap.api.mapcore.util.TaskManager -> com.sfmap.api.mapcore.util.db:
    com.sfmap.api.mapcore.util.TaskManager instance -> a
    com.sfmap.api.mapcore.util.ThreadPool b -> b
    java.util.LinkedHashMap taskList -> c
    boolean d -> d
    18:18:com.sfmap.api.mapcore.util.TaskManager getInstance(int) -> a
    25:35:com.sfmap.api.mapcore.util.TaskManager getInstance(boolean,int) -> a
    14:137:void <init>(boolean,int) -> <init>
    54:72:void a() -> a
    76:86:void stopTask(com.sfmap.api.mapcore.util.TaskItem) -> a
    91:108:void addTask(com.sfmap.api.mapcore.util.TaskItem,android.content.Context,com.sfmap.api.maps.MapController) -> a
    112:116:void b() -> b
    120:135:void removeTask(com.sfmap.api.mapcore.util.TaskItem) -> b
com.sfmap.api.mapcore.util.ThreadPool -> com.sfmap.api.mapcore.util.dc:
    com.sfmap.api.mapcore.util.ThreadPool instance -> a
    java.util.concurrent.ExecutorService executorService -> b
    java.util.concurrent.ConcurrentHashMap c -> c
    com.sfmap.api.mapcore.util.ThreadTask$RunnableInterface d -> d
    40:43:com.sfmap.api.mapcore.util.ThreadPool getInstance(int) -> a
    35:57:void <init>(int) -> <init>
    64:91:void addTask(com.sfmap.api.mapcore.util.ThreadTask) -> a
    97:108:void onDestroy() -> a
    115:141:void destroy() -> b
    145:155:boolean contain(com.sfmap.api.mapcore.util.ThreadTask) -> b
    162:169:void addQueue(com.sfmap.api.mapcore.util.ThreadTask,java.util.concurrent.Future) -> a
    175:185:void removeQueue(com.sfmap.api.mapcore.util.ThreadTask,boolean) -> a
    11:11:void access$000(com.sfmap.api.mapcore.util.ThreadPool,com.sfmap.api.mapcore.util.ThreadTask,boolean) -> a
    33:33:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.ThreadPool$dw -> com.sfmap.api.mapcore.util.dc$a:
    com.sfmap.api.mapcore.util.ThreadPool pool -> a
    com.sfmap.api.mapcore.util.ThreadPool this$0 -> b
    17:18:void <init>(com.sfmap.api.mapcore.util.ThreadPool,com.sfmap.api.mapcore.util.ThreadPool) -> <init>
    20:20:void begin(com.sfmap.api.mapcore.util.ThreadTask) -> a
    24:25:void end(com.sfmap.api.mapcore.util.ThreadTask) -> b
    29:30:void stop(com.sfmap.api.mapcore.util.ThreadTask) -> c
com.sfmap.api.mapcore.util.ThreadTask -> com.sfmap.api.mapcore.util.dd:
    com.sfmap.api.mapcore.util.ThreadTask$RunnableInterface myRunnable -> a
    3:3:void <init>() -> <init>
    12:31:void run() -> run
    void myRun() -> b
    39:48:void cancelTask() -> f
com.sfmap.api.mapcore.util.ThreadTask$RunnableInterface -> com.sfmap.api.mapcore.util.dd$a:
    void begin(com.sfmap.api.mapcore.util.ThreadTask) -> a
    void end(com.sfmap.api.mapcore.util.ThreadTask) -> b
    void stop(com.sfmap.api.mapcore.util.ThreadTask) -> c
com.sfmap.api.mapcore.util.TwoFingerGestureDetectorDecode -> com.sfmap.api.mapcore.util.de:
    float l -> l
    float m -> m
    float n -> n
    float h -> h
    float i -> i
    float j -> j
    float k -> k
    float o -> o
    float p -> p
    23:27:void <init>(android.content.Context) -> <init>
    32:58:void updateStateByEvent(android.view.MotionEvent) -> b
    62:68:float c() -> c
    73:77:float a(android.view.MotionEvent,int) -> a
    82:86:float b(android.view.MotionEvent,int) -> b
    91:110:boolean d(android.view.MotionEvent) -> d
com.sfmap.api.mapcore.util.UnZipFile -> com.sfmap.api.mapcore.util.df:
    com.sfmap.api.mapcore.util.UnZipFile$b a -> a
    18:20:void <init>(java.lang.String,java.lang.String,com.sfmap.api.mapcore.util.IUnZipListener) -> <init>
    24:27:void a() -> a
    31:36:void unzipFileTaskItem() -> b
    40:134:void a(com.sfmap.api.mapcore.util.UnZipFile$b) -> a
    139:193:void a(java.io.File,java.io.File,com.sfmap.api.mapcore.util.UnZipFile$c,com.sfmap.api.mapcore.util.UnZipFile$b) -> a
    198:232:void a(java.io.File,java.util.zip.ZipInputStream,long,com.sfmap.api.mapcore.util.UnZipFile$c,com.sfmap.api.mapcore.util.UnZipFile$a) -> a
    236:239:boolean a(java.lang.String) -> a
    245:268:int a(java.io.File,java.util.zip.ZipInputStream,long,long,com.sfmap.api.mapcore.util.UnZipFile$c,com.sfmap.api.mapcore.util.UnZipFile$a) -> a
    273:279:void a(java.io.File) -> a
com.sfmap.api.mapcore.util.UnZipFile$a -> com.sfmap.api.mapcore.util.df$a:
    boolean a -> a
    369:371:void <init>() -> <init>
com.sfmap.api.mapcore.util.UnZipFile$b -> com.sfmap.api.mapcore.util.df$b:
    java.lang.String b -> b
    java.lang.String c -> c
    com.sfmap.api.mapcore.util.IUnZipListener d -> d
    com.sfmap.api.mapcore.util.UnZipFile$a e -> e
    java.lang.String f -> f
    com.sfmap.api.mapcore.util.UnZipFile this$0 -> a
    285:294:void <init>(com.sfmap.api.mapcore.util.UnZipFile,java.lang.String,java.lang.String,com.sfmap.api.mapcore.util.IUnZipListener) -> <init>
    298:301:void a(java.lang.String) -> a
    305:305:java.lang.String a() -> a
    310:310:java.lang.String b() -> b
    315:315:java.lang.String c() -> c
    320:320:com.sfmap.api.mapcore.util.IUnZipListener d() -> d
    325:325:com.sfmap.api.mapcore.util.UnZipFile$a e() -> e
    330:331:void f() -> f
com.sfmap.api.mapcore.util.UnZipFile$c -> com.sfmap.api.mapcore.util.df$c:
    void a(long) -> a
    void a() -> a
com.sfmap.api.mapcore.util.UnZipFile$ddd -> com.sfmap.api.mapcore.util.df$d:
    com.sfmap.api.mapcore.util.IUnZipListener a -> a
    343:345:void <init>(com.sfmap.api.mapcore.util.IUnZipListener) -> <init>
    350:359:void a(long) -> a
    363:366:void a() -> a
com.sfmap.api.mapcore.util.UnzipState -> com.sfmap.api.mapcore.util.dg:
    8:9:void <init>(int,com.sfmap.api.mapcore.util.CityObject) -> <init>
    13:14:void c() -> c
    18:19:void start() -> d
    23:28:void complete() -> i
    32:37:void fail() -> g
com.sfmap.api.mapcore.util.UpdateItem -> com.sfmap.api.mapcore.util.dh:
    int state -> a
    java.lang.String city -> b
    java.lang.String url -> c
    java.lang.String adcode -> d
    java.lang.String dataFileTempPath -> e
    java.lang.String version -> f
    long localLength -> g
    long size -> h
    java.lang.String vMapFileName -> i
    java.lang.String localPath -> j
    int index -> k
    boolean isSheng -> l
    int completeCode -> m
    java.lang.String code -> n
    android.content.Context context -> o
    16:45:void <init>(com.sfmap.api.maps.offlinemap.OfflineMapCity,android.content.Context) -> <init>
    16:59:void <init>(com.sfmap.api.maps.offlinemap.OfflineMapProvince,android.content.Context) -> <init>
    63:65:void a() -> a
    69:72:void reset() -> b
    16:74:void <init>() -> <init>
    78:78:java.lang.String getCity() -> c
    83:84:void setCity(java.lang.String) -> a
    88:88:java.lang.String getVersion() -> d
    93:94:void setVersion(java.lang.String) -> b
    98:98:java.lang.String getDataFileTempPath() -> e
    103:104:void setDataFileTempPath(java.lang.String) -> c
    108:108:java.lang.String getAdcode() -> f
    113:114:void setAdcode(java.lang.String) -> d
    118:118:java.lang.String getUrl() -> g
    123:124:void setUrl(java.lang.String) -> e
    128:128:long getSize() -> h
    133:134:void setLocalLength(long) -> a
    138:139:void setIndex(int) -> a
    143:143:int getIndex() -> i
    148:148:long getLocalSize() -> j
    153:154:void setLocalSize(long) -> b
    158:158:long getRemoteLength() -> k
    163:164:void setSize(long) -> c
    168:168:java.lang.String getVMapFileName() -> l
    173:174:void setVMapFileName(java.lang.String) -> f
    178:178:java.lang.String getLocalPath() -> m
    183:184:void setLocalPath(java.lang.String) -> g
    188:188:boolean isSheng() -> n
    193:194:void setIsSheng(boolean) -> a
    198:199:void setCompleteCode(int) -> b
    203:203:int getCompleteCode() -> o
    208:209:void setCode(java.lang.String) -> h
    213:213:java.lang.String getCode() -> p
    220:249:void readJSONFileToObject(java.lang.String) -> i
    253:311:void saveJSONObjectToFile() -> q
com.sfmap.api.mapcore.util.UpdateLogDBOperation -> com.sfmap.api.mapcore.util.di:
    com.sfmap.api.mapcore.util.DBOperation dbOperation -> a
    android.content.Context context -> b
    12:15:void <init>(android.content.Context) -> <init>
    19:29:com.sfmap.api.mapcore.util.DBOperation getDB(android.content.Context) -> a
    34:51:com.sfmap.api.mapcore.util.UpdateLogInfo getUpdateLog() -> a
    58:80:void updateLog(com.sfmap.api.mapcore.util.UpdateLogInfo) -> a
com.sfmap.api.mapcore.util.UpdateLogEntity -> com.sfmap.api.mapcore.util.dj:
    com.sfmap.api.mapcore.util.UpdateLogInfo a -> a
    6:9:void <init>() -> <init>
    16:35:android.content.ContentValues a() -> b
    40:74:com.sfmap.api.mapcore.util.UpdateLogInfo select(android.database.Cursor) -> a
    79:80:void setLogInfo(com.sfmap.api.mapcore.util.UpdateLogInfo) -> a
    84:84:java.lang.String getTableName() -> a
    6:6:java.lang.Object select(android.database.Cursor) -> b
com.sfmap.api.mapcore.util.UpdateLogInfo -> com.sfmap.api.mapcore.util.dk:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    3:3:void <init>() -> <init>
    11:12:void a(boolean) -> a
    16:16:boolean a() -> a
    21:22:void b(boolean) -> b
    26:26:boolean b() -> b
    31:32:void c(boolean) -> c
    36:36:boolean c() -> c
com.sfmap.api.mapcore.util.Util -> com.sfmap.api.mapcore.util.dl:
    int[] a -> a
    double[] b -> b
    android.os.Handler c -> c
    float maxzoomlevel -> d
    float minzoomlevel -> e
    java.lang.String CONFIT_KEY_COMPANY -> f
    java.lang.String CONFIG_KEY_OFFLINE -> l
    java.lang.String PACKAGE_INFO_API_MAPS -> g
    java.lang.String PACKAGE_INFO_API_MAPCORE -> h
    java.lang.String PACKAGE_INFO_MAPCORE -> i
    java.lang.String CONFIG_API_KEY -> j
    java.lang.Boolean AUTH_FOR_SATELLITE -> k
    90:103:boolean getOfflineStatus(android.content.Context) -> a
    109:117:android.graphics.Bitmap fromAsset(android.content.Context,java.lang.String) -> a
    122:126:void a(android.graphics.drawable.Drawable) -> a
    130:130:java.lang.String a(java.lang.String,java.lang.Object) -> a
    135:149:float checkTilt(float,float) -> a
    154:159:float checkZoomLevel(float) -> a
    165:175:java.nio.FloatBuffer makeFloatBuffer(float[]) -> a
    181:189:java.nio.FloatBuffer makeFloatBuffer(float[],java.nio.FloatBuffer) -> a
    194:194:int loadTexture(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap) -> a
    199:199:int a(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap,boolean) -> a
    204:204:int a(javax.microedition.khronos.opengles.GL10,int,android.graphics.Bitmap) -> a
    209:213:int a(javax.microedition.khronos.opengles.GL10,int,android.graphics.Bitmap,boolean) -> a
    218:243:int bindTexture(javax.microedition.khronos.opengles.GL10,int,android.graphics.Bitmap,boolean) -> b
    248:252:int pow2(int) -> a
    257:266:java.lang.String joint(java.lang.String[]) -> a
    271:271:int a(java.lang.Object[]) -> a
    276:286:android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    291:299:android.graphics.Bitmap zoomBitmap(android.graphics.Bitmap,float) -> a
    304:318:java.lang.String getMapRoot(android.content.Context) -> b
    323:331:java.lang.String getOfflineMapDataTempPath(android.content.Context) -> c
    337:342:java.lang.String distance2Text(int) -> b
    347:362:boolean checkNet(android.content.Context) -> d
    367:367:boolean hasFroyo() -> a
    372:372:boolean hasGingerbread() -> b
    377:377:boolean hasHoneycomb() -> c
    382:382:boolean hasHoneycombMR1() -> d
    387:388:void a(javax.microedition.khronos.opengles.GL10,int) -> a
    392:399:java.lang.String decodeAssetResData(java.io.InputStream) -> a
    404:411:byte[] getFileData(java.io.InputStream) -> b
    416:496:java.lang.String readFile(java.io.File) -> a
    502:513:void paseAuthFailurJson(java.lang.String) -> a
    517:557:boolean a(com.sfmap.api.maps.model.LatLng,java.util.List) -> a
    562:562:double a(double,double,double,double,double,double) -> a
    567:572:boolean b(double,double,double,double,double,double) -> b
    577:587:boolean a(double,double,double,double,double,double,double,double) -> a
    666:678:float a(double,double,double,double) -> a
    683:687:double a(double,double) -> a
    693:700:com.sfmap.api.mapcore.util.SDKInfo getSDKInfo() -> e
    705:712:void b(android.view.View) -> b
    717:731:android.graphics.Bitmap getBitmapFromView(android.view.View) -> a
    736:740:com.sfmap.mapcore.DPoint a(com.sfmap.api.maps.model.LatLng) -> a
    745:824:float[] makeFloatArray(com.sfmap.api.mapcore.IMapDelegate,int,float,float,float,int,int,float,float) -> a
    829:829:float[] makeFloatArray(com.sfmap.api.mapcore.IMapDelegate,int,com.sfmap.mapcore.FPoint,float,int,int,float,float) -> a
    833:833:float[] makeFloatArray(com.sfmap.api.mapcore.IMapDelegate,int,android.graphics.PointF,float,int,int,float,float) -> a
    837:848:java.lang.String getMetaValue(android.content.Context,java.lang.String) -> b
    852:860:java.lang.String encryptPara(java.lang.String) -> b
    61:85:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.Utility -> com.sfmap.api.mapcore.util.dm:
    25:26:void log(java.lang.String) -> a
    30:31:void b(java.lang.String) -> b
    36:41:long a() -> a
    47:80:java.util.List parseCityList(java.lang.String) -> c
    85:97:com.sfmap.api.maps.offlinemap.OfflineMapProvince a(org.json.JSONObject) -> a
    102:117:java.util.ArrayList b(org.json.JSONObject) -> b
    122:132:com.sfmap.api.maps.offlinemap.OfflineMapCity c(org.json.JSONObject) -> c
    137:152:long a(java.io.File) -> a
    158:175:boolean deleteFiles(java.io.File) -> b
    182:191:java.lang.String readOfflineAsset(android.content.Context,java.lang.String) -> a
    196:244:java.lang.String readOfflineSD(java.io.File) -> c
    250:260:void a(java.lang.String,android.content.Context) -> a
    264:283:void d(java.lang.String) -> d
com.sfmap.api.mapcore.util.Utils -> com.sfmap.api.mapcore.util.dn:
    86:129:java.lang.String a(java.lang.Throwable) -> a
    169:179:byte[] gZip(byte[]) -> a
    289:301:java.lang.String byte2HexString(byte[]) -> b
    307:352:byte[] f(byte[]) -> c
com.sfmap.api.mapcore.util.WaitingState -> com.sfmap.api.mapcore.util.do:
    8:9:void <init>(int,com.sfmap.api.mapcore.util.CityObject) -> <init>
    13:16:void c() -> c
    20:25:void start() -> d
    29:34:void pause() -> f
    38:43:void fail() -> g
com.sfmap.api.mapcore.util.WrapperClientInfo -> com.sfmap.api.mapcore.util.dp:
    19:28:java.lang.String getPublicInfo(android.content.Context) -> a
com.sfmap.api.mapcore.util.WrapperConstConfig -> com.sfmap.api.mapcore.util.dq:
    java.lang.String b -> a
    6:6:void <clinit>() -> <clinit>
com.sfmap.api.mapcore.util.dx -> com.sfmap.api.mapcore.util.dr:
    double[][] a -> a
    9:36:double[] a(double,double) -> a
    41:41:double a(double,double,double) -> a
    5:5:void <clinit>() -> <clinit>
com.sfmap.api.maps.CameraUpdate -> com.sfmap.api.maps.CameraUpdate:
    com.sfmap.api.mapcore.CameraUpdateFactoryDelegate cameraUpdateFactoryDelegate -> a
    17:19:void <init>(com.sfmap.api.mapcore.CameraUpdateFactoryDelegate) -> <init>
    23:23:com.sfmap.api.mapcore.CameraUpdateFactoryDelegate getCameraUpdateFactory() -> a
com.sfmap.api.maps.CameraUpdateFactory -> com.sfmap.api.maps.CameraUpdateFactory:
    14:14:void <init>() -> <init>
    22:22:com.sfmap.api.maps.CameraUpdate zoomIn() -> zoomIn
    31:31:com.sfmap.api.maps.CameraUpdate zoomOut() -> zoomOut
    46:46:com.sfmap.api.maps.CameraUpdate scrollBy(float,float) -> scrollBy
    56:56:com.sfmap.api.maps.CameraUpdate zoomTo(float) -> zoomTo
    66:66:com.sfmap.api.maps.CameraUpdate zoomBy(float) -> zoomBy
    78:78:com.sfmap.api.maps.CameraUpdate zoomBy(float,android.graphics.Point) -> zoomBy
    88:88:com.sfmap.api.maps.CameraUpdate newCameraPosition(com.sfmap.api.maps.model.CameraPosition) -> newCameraPosition
    98:98:com.sfmap.api.maps.CameraUpdate newLatLng(com.sfmap.api.maps.model.LatLng) -> newLatLng
    109:109:com.sfmap.api.maps.CameraUpdate newLatLngZoom(com.sfmap.api.maps.model.LatLng,float) -> newLatLngZoom
    120:120:com.sfmap.api.maps.CameraUpdate newLatLngBounds(com.sfmap.api.maps.model.LatLngBounds,int) -> newLatLngBounds
    130:132:com.sfmap.api.maps.CameraUpdate changeLatLng(com.sfmap.api.maps.model.LatLng) -> changeLatLng
    142:142:com.sfmap.api.maps.CameraUpdate changeBearing(float) -> changeBearing
    153:153:com.sfmap.api.maps.CameraUpdate changeBearingGeoCenter(float,com.sfmap.mapcore.IPoint) -> changeBearingGeoCenter
    164:164:com.sfmap.api.maps.CameraUpdate changeTilt(float) -> changeTilt
    178:178:com.sfmap.api.maps.CameraUpdate newLatLngBounds(com.sfmap.api.maps.model.LatLngBounds,int,int,int) -> newLatLngBounds
com.sfmap.api.maps.CustomRenderer -> com.sfmap.api.maps.CustomRenderer:
    void onMapReferencechanged() -> onMapReferencechanged
com.sfmap.api.maps.DesUtil -> com.sfmap.api.maps.DesUtil:
    java.lang.String a1 -> a
    java.lang.String strAlgorithm -> b
    javax.crypto.Cipher cipherEncode -> c
    javax.crypto.Cipher cipherDecode -> d
    com.sfmap.api.maps.DesUtil desUtil -> e
    27:34:com.sfmap.api.maps.DesUtil getInstance() -> getInstance
    20:60:void <init>() -> <init>
    71:76:java.lang.String encrypt(java.lang.String) -> encrypt
    88:95:void encrypt(java.lang.StringBuilder) -> encrypt
    107:114:java.lang.String decrypt(java.lang.String,java.lang.String) -> decrypt
    123:132:java.lang.String bytes2hex(byte[]) -> a
    136:156:byte[] hex2bytes(java.lang.String) -> a
    160:165:java.lang.String getString(java.lang.String) -> getString
com.sfmap.api.maps.ExtralBaseDraw -> com.sfmap.api.maps.a:
    java.lang.ref.SoftReference mapDelegate -> a
    java.lang.ref.SoftReference map -> b
    18:32:void <init>(com.sfmap.api.maps.MapView) -> <init>
    42:60:void drawBitmap(int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> drawBitmap
    69:75:int getTexsureId(javax.microedition.khronos.opengles.GL10,int) -> getTexsureId
    86:103:int bindTexture(javax.microedition.khronos.opengles.GL10,int,android.graphics.Bitmap) -> bindTexture
com.sfmap.api.maps.ExtralDrawArc -> com.sfmap.api.maps.ExtralDrawArc:
    float[] glPointArray -> d
    double q -> e
    double r -> f
    double s -> g
    com.sfmap.api.maps.ExtralDrawPolyline drawline -> c
    21:35:void <init>(com.sfmap.api.maps.MapView) -> <init>
    47:161:int[] calMapFPoint(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng) -> calMapFPoint
    166:174:com.sfmap.mapcore.FPoint a(com.sfmap.mapcore.MapProjection,double,double,double) -> a
    179:188:com.sfmap.mapcore.IPoint aaaaa(double,double,double) -> a
    193:197:boolean l(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng) -> a
    202:234:com.sfmap.mapcore.DPoint m(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng) -> b
    239:253:double a(double,double,double,double) -> a
    258:271:void insert1(int,int,int,int,java.util.List) -> a
    274:274:long getDisSquare(long,long,long,long) -> a
    290:314:void drawArc(javax.microedition.khronos.opengles.GL10,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,int[],int,int) -> drawArc
    19:19:int getTexsureId(javax.microedition.khronos.opengles.GL10,int) -> getTexsureId
    19:19:void drawBitmap(int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> drawBitmap
com.sfmap.api.maps.ExtralDrawBitmap -> com.sfmap.api.maps.ExtralDrawBitmap:
    23:24:void <init>(com.sfmap.api.maps.MapView) -> <init>
    40:52:int drawBitmap(javax.microedition.khronos.opengles.GL10,com.sfmap.api.maps.model.BitmapDescriptor,boolean,com.sfmap.api.maps.model.LatLng,int,java.nio.FloatBuffer,float,float,float) -> drawBitmap
    62:72:java.nio.FloatBuffer makeBitmapFloatBuffer(com.sfmap.api.maps.model.BitmapDescriptor) -> makeBitmapFloatBuffer
    85:91:java.nio.FloatBuffer makeFloatBuffer(boolean,android.graphics.PointF,com.sfmap.api.maps.model.BitmapDescriptor,float,float,float) -> makeFloatBuffer
    108:117:java.nio.FloatBuffer makeFloatBuffer(boolean,android.graphics.PointF,com.sfmap.api.maps.model.BitmapDescriptor,java.nio.FloatBuffer,float,float,float) -> makeFloatBuffer
    130:140:float[] makeFloatArray(boolean,android.graphics.PointF,com.sfmap.api.maps.model.BitmapDescriptor,float,float,float) -> a
    150:156:boolean isInScreen(com.sfmap.api.maps.model.LatLng) -> isInScreen
    21:21:int getTexsureId(javax.microedition.khronos.opengles.GL10,int) -> getTexsureId
    21:21:void drawBitmap(int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> drawBitmap
com.sfmap.api.maps.ExtralDrawCircle -> com.sfmap.api.maps.ExtralDrawCircle:
    float m -> c
    int n -> d
    int o -> e
    25:26:void <init>(com.sfmap.api.maps.MapView) -> <init>
    40:50:void drawCircle(javax.microedition.khronos.opengles.GL10,java.nio.FloatBuffer,com.sfmap.api.maps.model.LatLng,double,int,int,float) -> drawCircle
    61:89:java.nio.FloatBuffer calMapFPoint(com.sfmap.api.maps.model.LatLng,double) -> calMapFPoint
    94:94:double MMapPointsPerMeter(double) -> a
    101:101:float b(double) -> b
    17:17:int getTexsureId(javax.microedition.khronos.opengles.GL10,int) -> getTexsureId
    17:17:void drawBitmap(int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> drawBitmap
    96:98:void <clinit>() -> <clinit>
com.sfmap.api.maps.ExtralDrawPolygon -> com.sfmap.api.maps.ExtralDrawPolygon:
    java.lang.ref.SoftReference mapDelegate -> a
    java.lang.ref.SoftReference map -> b
    21:35:void <init>(com.sfmap.api.maps.MapView) -> <init>
    42:47:java.nio.FloatBuffer makeFloatBuffer(float[]) -> a
    57:71:java.nio.FloatBuffer calMapFPoint(java.util.ArrayList) -> calMapFPoint
    81:89:java.nio.FloatBuffer calRectPoint(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng) -> calRectPoint
    101:103:void drawPolygon(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> drawPolygon
    115:141:void drawPolygon(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,float,int) -> a
    152:194:void drawPolyline(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,float,int) -> b
com.sfmap.api.maps.ExtralDrawPolyline -> com.sfmap.api.maps.ExtralDrawPolyline:
    21:22:void <init>(com.sfmap.api.maps.MapView) -> <init>
    29:34:java.nio.FloatBuffer makeFloatBuffer(float[]) -> makeFloatBuffer
    49:74:void drawPolyline(javax.microedition.khronos.opengles.GL10,java.util.ArrayList,int[],int,int,boolean) -> drawPolyline
    82:94:int[] calMapFPoint(java.util.ArrayList) -> calMapFPoint
    18:18:int getTexsureId(javax.microedition.khronos.opengles.GL10,int) -> getTexsureId
    18:18:void drawBitmap(int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> drawBitmap
com.sfmap.api.maps.ExtralDrawText -> com.sfmap.api.maps.ExtralDrawText:
    24:25:void <init>(com.sfmap.api.maps.MapView) -> <init>
    36:56:android.graphics.Bitmap createTextBitmap(java.lang.String,android.graphics.Paint,int) -> createTextBitmap
    73:85:int drawBitmap(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap,boolean,com.sfmap.api.maps.model.LatLng,int,java.nio.FloatBuffer,float,float,float) -> drawBitmap
    93:93:java.nio.FloatBuffer getTextFloatBuffer() -> getTextFloatBuffer
    106:112:java.nio.FloatBuffer makeFloatBuffer(boolean,android.graphics.PointF,android.graphics.Bitmap,float,float,float) -> a
    127:137:float[] makeFloatArray(boolean,android.graphics.PointF,android.graphics.Bitmap,float,float,float) -> b
    22:22:int getTexsureId(javax.microedition.khronos.opengles.GL10,int) -> getTexsureId
    22:22:void drawBitmap(int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> drawBitmap
com.sfmap.api.maps.LocationSource -> com.sfmap.api.maps.LocationSource:
    void activate(com.sfmap.api.maps.LocationSource$OnLocationChangedListener) -> activate
    void deactivate() -> deactivate
com.sfmap.api.maps.LocationSource$OnLocationChangedListener -> com.sfmap.api.maps.LocationSource$OnLocationChangedListener:
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.sfmap.api.maps.MapController -> com.sfmap.api.maps.MapController:
    int MAP_TYPE_NORMAL -> MAP_TYPE_NORMAL
    int MAP_TYPE_SATELLITE -> MAP_TYPE_SATELLITE
    int MAP_TYPE_NIGHT -> MAP_TYPE_NIGHT
    int MAP_TYPE_NAVI -> MAP_TYPE_NAVI
    int MAP_TYPE_STREETVIEW -> MAP_TYPE_STREETVIEW
    int LOCATION_TYPE_LOCATE -> LOCATION_TYPE_LOCATE
    int LOCATION_TYPE_MAP_FOLLOW -> LOCATION_TYPE_MAP_FOLLOW
    int LOCATION_TYPE_MAP_ROTATE -> LOCATION_TYPE_MAP_ROTATE
    com.sfmap.api.mapcore.IMapDelegate map -> a
    com.sfmap.api.maps.UiSettings uiSetting -> b
    com.sfmap.api.maps.Projection projection -> c
    com.sfmap.api.maps.model.MyTrafficStyle trafficStyle -> d
    96:98:void <init>(com.sfmap.api.mapcore.IMapDelegate) -> <init>
    108:110:com.sfmap.api.maps.model.CameraPosition getCameraPosition() -> getCameraPosition
    119:120:void setNeedToCenter(boolean) -> setNeedToCenter
    129:130:void setMapStyleFileByPath(java.lang.String,java.lang.String) -> setMapStyleFileByPath
    138:139:void setMapStyleType(int) -> setMapStyleType
    147:148:void setMaxZoomLevel(float) -> setMaxZoomLevel
    156:157:void setMinZoomLevel(float) -> setMinZoomLevel
    165:166:void set2DMapRotateEnable(boolean) -> set2DMapRotateEnable
    174:174:float getMaxZoomLevel() -> getMaxZoomLevel
    183:183:float getMinZoomLevel() -> getMinZoomLevel
    193:198:void moveCamera(com.sfmap.api.maps.CameraUpdate) -> moveCamera
    207:212:void animateCamera(com.sfmap.api.maps.CameraUpdate) -> animateCamera
    222:226:void animateCamera(com.sfmap.api.maps.CameraUpdate,com.sfmap.api.maps.MapController$CancelableCallback) -> animateCamera
    237:243:void animateCamera(com.sfmap.api.maps.CameraUpdate,long,com.sfmap.api.maps.MapController$CancelableCallback) -> animateCamera
    250:254:void stopAnimation() -> stopAnimation
    264:266:com.sfmap.api.maps.model.NavigateArrow addNavigateArrow(com.sfmap.api.maps.model.NavigateArrowOptions) -> addNavigateArrow
    278:280:com.sfmap.api.maps.model.Polyline addPolyline(com.sfmap.api.maps.model.PolylineOptions) -> addPolyline
    292:294:com.sfmap.api.maps.model.Circle addCircle(com.sfmap.api.maps.model.CircleOptions) -> addCircle
    306:308:com.sfmap.api.maps.model.Arc addArc(com.sfmap.api.maps.model.ArcOptions) -> addArc
    320:322:com.sfmap.api.maps.model.Polygon addPolygon(com.sfmap.api.maps.model.PolygonOptions) -> addPolygon
    334:336:com.sfmap.api.maps.model.GroundOverlay addGroundOverlay(com.sfmap.api.maps.model.GroundOverlayOptions) -> addGroundOverlay
    341:341:boolean isPOIByPoint(android.graphics.Point) -> isPOIByPoint
    353:355:com.sfmap.api.maps.model.Marker addMarker(com.sfmap.api.maps.model.MarkerOptions) -> addMarker
    367:369:com.sfmap.api.maps.model.Text addText(com.sfmap.api.maps.model.TextOptions) -> addText
    382:384:java.util.ArrayList addMarkers(java.util.ArrayList,boolean) -> addMarkers
    395:397:java.util.List getMapScreenMarkers() -> getMapScreenMarkers
    409:411:com.sfmap.api.maps.model.TileOverlay addTileOverlay(com.sfmap.api.maps.model.TileOverlayOptions) -> addTileOverlay
    420:424:void clear() -> clear
    433:437:void clear(boolean) -> clear
    446:448:int getMapType() -> getMapType
    459:463:void setMapType(int) -> setMapType
    472:474:boolean isTrafficEnabled() -> isTrafficEnabled
    485:487:boolean isCellZonesEnabled() -> isCellZonesEnabled
    498:502:void setTrafficEnabled(boolean) -> setTrafficEnabled
    511:515:void showMapText(boolean) -> showMapText
    525:532:void setMyTrafficStyle(com.sfmap.api.maps.model.MyTrafficStyle) -> setMyTrafficStyle
    540:540:com.sfmap.api.maps.model.MyTrafficStyle getMyTrafficStyle() -> getMyTrafficStyle
    550:552:boolean isMyLocationEnabled() -> isMyLocationEnabled
    564:568:void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    577:579:android.location.Location getMyLocation() -> getMyLocation
    590:594:void setLocationSource(com.sfmap.api.maps.LocationSource) -> setLocationSource
    603:607:void setMyLocationStyle(com.sfmap.api.maps.model.MyLocationStyle) -> setMyLocationStyle
    616:620:void setMyLocationType(int) -> setMyLocationType
    627:631:void setCustomType() -> setCustomType
    638:642:void unregisterSensorListener() -> unregisterSensorListener
    651:655:void setMyLocationRotateAngle(float) -> setMyLocationRotateAngle
    664:669:com.sfmap.api.maps.UiSettings getUiSettings() -> getUiSettings
    680:685:com.sfmap.api.maps.Projection getProjection() -> getProjection
    696:700:void setOnCameraChangeListener(com.sfmap.api.maps.MapController$OnCameraChangeListener) -> setOnCameraChangeListener
    709:713:void setOnMapLevelChangeListener(com.sfmap.api.maps.MapController$OnMapLevelChangeListener) -> setOnMapLevelChangeListener
    722:726:void setOnMapClickListener(com.sfmap.api.maps.MapController$OnMapClickListener) -> setOnMapClickListener
    735:739:void setOnMapTouchListener(com.sfmap.api.maps.MapController$OnMapTouchListener) -> setOnMapTouchListener
    748:752:void setOnPOIClickListener(com.sfmap.api.maps.MapController$OnPOIClickListener) -> setOnPOIClickListener
    761:765:void setOnMyLocationChangeListener(com.sfmap.api.maps.MapController$OnMyLocationChangeListener) -> setOnMyLocationChangeListener
    774:778:void setOnMapLongClickListener(com.sfmap.api.maps.MapController$OnMapLongClickListener) -> setOnMapLongClickListener
    787:791:void setOnMarkerClickListener(com.sfmap.api.maps.MapController$OnMarkerClickListener) -> setOnMarkerClickListener
    800:804:void setOnPolylineClickListener(com.sfmap.api.maps.MapController$OnPolylineClickListener) -> setOnPolylineClickListener
    813:817:void setOnMarkerDragListener(com.sfmap.api.maps.MapController$OnMarkerDragListener) -> setOnMarkerDragListener
    826:830:void setOnInfoWindowClickListener(com.sfmap.api.maps.MapController$OnInfoWindowClickListener) -> setOnInfoWindowClickListener
    840:844:void setInfoWindowAdapter(com.sfmap.api.maps.MapController$InfoWindowAdapter) -> setInfoWindowAdapter
    853:857:void setOnMapLoadedListener(com.sfmap.api.maps.MapController$OnMapLoadedListener) -> setOnMapLoadedListener
    875:876:void getMapScreenShot(com.sfmap.api.maps.MapController$OnMapScreenShotListener) -> getMapScreenShot
    885:887:float getScalePerPixel() -> getScalePerPixel
    895:896:void runOnDrawFrame() -> runOnDrawFrame
    903:907:void removecache() -> removecache
    916:920:void removecache(com.sfmap.api.maps.MapController$OnCacheRemoveListener) -> removecache
    929:933:void setCustomRenderer(com.sfmap.api.maps.CustomRenderer) -> setCustomRenderer
    942:947:void addCustomRenderer(com.sfmap.api.maps.CustomRenderer) -> addCustomRenderer
    956:961:void removeCustomRenderer(com.sfmap.api.maps.CustomRenderer) -> removeCustomRenderer
    968:972:void clearCustomRenderer() -> clearCustomRenderer
    980:981:void drawCustomRenderTime(int) -> drawCustomRenderTime
    991:995:void setPointToCenter(int,int) -> setPointToCenter
    1004:1008:void setMapCenter(com.sfmap.api.maps.model.LatLng) -> setMapCenter
    1017:1021:void setMapTextZIndex(int) -> setMapTextZIndex
    1031:1035:void setLoadOfflineData(boolean) -> setLoadOfflineData
    1044:1046:int getMapTextZIndex() -> getMapTextZIndex
    1059:1069:void setViewPosition(int,int,int) -> setViewPosition
    1079:1090:void setViewBitmap(int,android.graphics.Bitmap[]) -> setViewBitmap
    1096:1097:void reloadMap() -> reloadMap
    1105:1106:void setGridUrlListener(com.sfmap.api.maps.MapController$GridUrlListener) -> setGridUrlListener
    1110:1114:void setParameter(java.lang.String,boolean) -> setParameter
com.sfmap.api.maps.MapController$CancelableCallback -> com.sfmap.api.maps.MapController$CancelableCallback:
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.sfmap.api.maps.MapController$GridUrlListener -> com.sfmap.api.maps.MapController$GridUrlListener:
    java.lang.String getGridUrl(int,int,int) -> getGridUrl
com.sfmap.api.maps.MapController$InfoWindowAdapter -> com.sfmap.api.maps.MapController$InfoWindowAdapter:
    android.view.View getInfoWindow(com.sfmap.api.maps.model.Marker) -> getInfoWindow
    android.view.View getInfoContents(com.sfmap.api.maps.model.Marker) -> getInfoContents
com.sfmap.api.maps.MapController$OnCacheRemoveListener -> com.sfmap.api.maps.MapController$OnCacheRemoveListener:
    void onRemoveCacheFinish(boolean) -> onRemoveCacheFinish
com.sfmap.api.maps.MapController$OnCameraChangeListener -> com.sfmap.api.maps.MapController$OnCameraChangeListener:
    void onCameraChange(com.sfmap.api.maps.model.CameraPosition) -> onCameraChange
    void onCameraChangeFinish(com.sfmap.api.maps.model.CameraPosition) -> onCameraChangeFinish
com.sfmap.api.maps.MapController$OnInfoWindowClickListener -> com.sfmap.api.maps.MapController$OnInfoWindowClickListener:
    void onInfoWindowClick(com.sfmap.api.maps.model.Marker) -> onInfoWindowClick
com.sfmap.api.maps.MapController$OnMapClickListener -> com.sfmap.api.maps.MapController$OnMapClickListener:
    void onMapClick(com.sfmap.api.maps.model.LatLng) -> onMapClick
com.sfmap.api.maps.MapController$OnMapLevelChangeListener -> com.sfmap.api.maps.MapController$OnMapLevelChangeListener:
    void onMapLevelChanged(float) -> onMapLevelChanged
com.sfmap.api.maps.MapController$OnMapLoadedListener -> com.sfmap.api.maps.MapController$OnMapLoadedListener:
    void onMapLoaded() -> onMapLoaded
com.sfmap.api.maps.MapController$OnMapLongClickListener -> com.sfmap.api.maps.MapController$OnMapLongClickListener:
    void onMapLongClick(com.sfmap.api.maps.model.LatLng) -> onMapLongClick
com.sfmap.api.maps.MapController$OnMapScreenShotListener -> com.sfmap.api.maps.MapController$OnMapScreenShotListener:
    void onMapScreenShot(android.graphics.Bitmap) -> onMapScreenShot
    void onMapScreenShot(android.graphics.Bitmap,int) -> onMapScreenShot
com.sfmap.api.maps.MapController$OnMapTouchListener -> com.sfmap.api.maps.MapController$OnMapTouchListener:
    void onTouch(android.view.MotionEvent) -> onTouch
com.sfmap.api.maps.MapController$OnMarkerClickListener -> com.sfmap.api.maps.MapController$OnMarkerClickListener:
    boolean onMarkerClick(com.sfmap.api.maps.model.Marker) -> onMarkerClick
com.sfmap.api.maps.MapController$OnMarkerDragListener -> com.sfmap.api.maps.MapController$OnMarkerDragListener:
    void onMarkerDragStart(com.sfmap.api.maps.model.Marker) -> onMarkerDragStart
    void onMarkerDrag(com.sfmap.api.maps.model.Marker) -> onMarkerDrag
    void onMarkerDragEnd(com.sfmap.api.maps.model.Marker) -> onMarkerDragEnd
com.sfmap.api.maps.MapController$OnMyLocationChangeListener -> com.sfmap.api.maps.MapController$OnMyLocationChangeListener:
    void onMyLocationChange(android.location.Location) -> onMyLocationChange
com.sfmap.api.maps.MapController$OnPOIClickListener -> com.sfmap.api.maps.MapController$OnPOIClickListener:
    void onPOIClick(com.sfmap.api.maps.model.Poi) -> onPOIClick
com.sfmap.api.maps.MapController$OnPolylineClickListener -> com.sfmap.api.maps.MapController$OnPolylineClickListener:
    void onPolylineClick(com.sfmap.api.maps.model.Polyline) -> onPolylineClick
com.sfmap.api.maps.MapException -> com.sfmap.api.maps.MapException:
    java.lang.String ERROR_IO -> ERROR_IO
    java.lang.String ERROR_SOCKET -> ERROR_SOCKET
    java.lang.String ERROR_SOCKE_TIME_OUT -> ERROR_SOCKE_TIME_OUT
    java.lang.String ERROR_INVALID_PARAMETER -> ERROR_INVALID_PARAMETER
    java.lang.String ERROR_NULL_PARAMETER -> ERROR_NULL_PARAMETER
    java.lang.String ERROR_URL -> ERROR_URL
    java.lang.String ERROR_UNKNOW_HOST -> ERROR_UNKNOW_HOST
    java.lang.String ERROR_UNKNOW_SERVICE -> ERROR_UNKNOW_SERVICE
    java.lang.String ERROR_PROTOCOL -> ERROR_PROTOCOL
    java.lang.String ERROR_CONNECTION -> ERROR_CONNECTION
    java.lang.String ERROR_UNKNOWN -> ERROR_UNKNOWN
    java.lang.String ERROR_FAILURE_AUTH -> ERROR_FAILURE_AUTH
    java.lang.String ERROR_NOT_ENOUGH_SPACE -> ERROR_NOT_ENOUGH_SPACE
    java.lang.String ERROR_NOT_AVAILABLE -> ERROR_NOT_AVAILABLE
    java.lang.String ERROR_ILLEGAL_VALUE -> ERROR_ILLEGAL_VALUE
    java.lang.String ERROR_LOCAL_AUTH_FAILURE -> ERROR_LOCAL_AUTH_FAILURE
    java.lang.String LMAP_NOT_SUPPORT -> LMAP_NOT_SUPPORT
    java.lang.String ILLEGAL_LMAP_ARGUMENT -> ILLEGAL_LMAP_ARGUMENT
    java.lang.String errorMessage -> a
    82:92:void <init>(java.lang.String) -> <init>
    82:97:void <init>() -> <init>
    105:105:java.lang.String getErrorMessage() -> getErrorMessage
com.sfmap.api.maps.MapOptions -> com.sfmap.api.maps.MapOptions:
    com.sfmap.api.maps.MapOptionsCreator CREATOR -> CREATOR
    int mapType -> a
    boolean rotateGesturesEnabled -> b
    boolean scrollGesturesEnabled -> c
    boolean tiltGesturesEnabled -> d
    boolean zoomGesturesEnabled -> e
    boolean zoomEnabled -> f
    boolean zOrderOnTop -> g
    com.sfmap.api.maps.model.CameraPosition camera -> h
    boolean compassEnabled -> i
    boolean enabled -> j
    int position -> k
    int LOGO_POSITION_BOTTOM_LEFT -> LOGO_POSITION_BOTTOM_LEFT
    int LOGO_POSITION_BOTTOM_CENTER -> LOGO_POSITION_BOTTOM_CENTER
    int LOGO_POSITION_BOTTOM_RIGHT -> LOGO_POSITION_BOTTOM_RIGHT
    int ZOOM_POSITION_RIGHT_CENTER -> ZOOM_POSITION_RIGHT_CENTER
    int ZOOM_POSITION_RIGHT_BUTTOM -> ZOOM_POSITION_RIGHT_BUTTOM
    int POSITION_COMPASS -> POSITION_COMPASS
    int POSITION_SCALE -> POSITION_SCALE
    int POSITION_LOGO -> POSITION_LOGO
    java.util.Map viewBitmapMap -> viewBitmapMap
    14:61:void <init>() -> <init>
    107:108:com.sfmap.api.maps.MapOptions logoPosition(int) -> logoPosition
    118:119:com.sfmap.api.maps.MapOptions zOrderOnTop(boolean) -> zOrderOnTop
    129:130:com.sfmap.api.maps.MapOptions mapType(int) -> mapType
    140:141:com.sfmap.api.maps.MapOptions camera(com.sfmap.api.maps.model.CameraPosition) -> camera
    151:152:com.sfmap.api.maps.MapOptions scaleControlsEnabled(boolean) -> scaleControlsEnabled
    162:163:com.sfmap.api.maps.MapOptions zoomControlsEnabled(boolean) -> zoomControlsEnabled
    173:174:com.sfmap.api.maps.MapOptions compassEnabled(boolean) -> compassEnabled
    184:185:com.sfmap.api.maps.MapOptions scrollGesturesEnabled(boolean) -> scrollGesturesEnabled
    195:196:com.sfmap.api.maps.MapOptions zoomGesturesEnabled(boolean) -> zoomGesturesEnabled
    206:207:com.sfmap.api.maps.MapOptions tiltGesturesEnabled(boolean) -> tiltGesturesEnabled
    217:218:com.sfmap.api.maps.MapOptions rotateGesturesEnabled(boolean) -> rotateGesturesEnabled
    227:227:int getLogoPosition() -> getLogoPosition
    255:255:java.lang.Boolean getZOrderOnTop() -> getZOrderOnTop
    264:264:int getMapType() -> getMapType
    273:273:com.sfmap.api.maps.model.CameraPosition getCamera() -> getCamera
    282:282:java.lang.Boolean getScaleControlsEnabled() -> getScaleControlsEnabled
    291:291:java.lang.Boolean getZoomControlsEnabled() -> getZoomControlsEnabled
    300:300:java.lang.Boolean getCompassEnabled() -> getCompassEnabled
    309:309:java.lang.Boolean getScrollGesturesEnabled() -> getScrollGesturesEnabled
    318:318:java.lang.Boolean getZoomGesturesEnabled() -> getZoomGesturesEnabled
    327:327:java.lang.Boolean getTiltGesturesEnabled() -> getTiltGesturesEnabled
    336:336:java.lang.Boolean getRotateGesturesEnabled() -> getRotateGesturesEnabled
    341:341:int describeContents() -> describeContents
    346:351:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    17:98:void <clinit>() -> <clinit>
com.sfmap.api.maps.MapOptionsCreator -> com.sfmap.api.maps.MapOptionsCreator:
    7:7:void <init>() -> <init>
    12:30:com.sfmap.api.maps.MapOptions createFromParcel(android.os.Parcel) -> createFromParcel
    35:35:com.sfmap.api.maps.MapOptions[] newArray(int) -> newArray
    7:7:java.lang.Object[] newArray(int) -> newArray
    7:7:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.MapUtils -> com.sfmap.api.maps.MapUtils:
    java.lang.Double COEF -> a
    18:18:void <init>() -> <init>
    90:117:float calculateLineDistance(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng) -> calculateLineDistance
    128:135:float calculateArea(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng) -> calculateArea
    144:175:double calPolygonArea(java.util.ArrayList) -> calPolygonArea
    201:209:double calculateAngle(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng) -> calculateAngle
    223:257:double calculateAngle(double,double,double,double) -> calculateAngle
    268:282:void getLatestMapApp(android.content.Context) -> getLatestMapApp
    20:20:void <clinit>() -> <clinit>
com.sfmap.api.maps.MapUtils$a -> com.sfmap.api.maps.MapUtils$a:
    java.lang.String a -> a
    android.content.Context b -> b
    288:297:void <init>(java.lang.String,android.content.Context) -> <init>
    301:314:void run() -> run
com.sfmap.api.maps.MapView -> com.sfmap.api.maps.MapView:
    com.sfmap.api.mapcore.IMapFragmentDelegate mapFragmentDelegate -> a
    com.sfmap.api.maps.MapController lmap -> b
    int visible -> c
    24:34:void <init>(android.content.Context) -> <init>
    24:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    24:61:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    24:73:void <init>(android.content.Context,com.sfmap.api.maps.MapOptions) -> <init>
    77:80:com.sfmap.api.mapcore.IMapFragmentDelegate getMapFragmentDelegate() -> getMapFragmentDelegate
    89:105:com.sfmap.api.maps.MapController getMap() -> getMap
    117:130:void onCreate(android.os.Bundle) -> onCreate
    138:144:void onResume() -> onResume
    152:158:void onPause() -> onPause
    166:173:void onDestroy() -> onDestroy
    182:188:void onLowMemory() -> onLowMemory
    197:203:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    213:215:void setVisibility(int) -> setVisibility
com.sfmap.api.maps.MapsInitializer -> com.sfmap.api.maps.MapsInitializer:
    int COOD_SYSTEM_900913 -> COOD_SYSTEM_900913
    int COOD_SYSTEM_4326 -> COOD_SYSTEM_4326
    int coodSystem -> a
    java.lang.String sdcardDir -> sdcardDir
    boolean netWorkEnable -> b
    12:12:void <init>() -> <init>
    33:34:void initialize(android.content.Context) -> initialize
    40:40:int getCoodSystem() -> getCoodSystem
    48:53:void setCoodSystem(int) -> setCoodSystem
    66:67:void setNetWorkEnable(boolean) -> setNetWorkEnable
    75:75:boolean getNetWorkEnable() -> getNetWorkEnable
    84:87:void setApiKey(java.lang.String) -> setApiKey
    95:95:java.lang.String getVersion() -> getVersion
    24:58:void <clinit>() -> <clinit>
com.sfmap.api.maps.Projection -> com.sfmap.api.maps.Projection:
    com.sfmap.api.mapcore.IProjectionDelegate projection -> a
    21:23:void <init>(com.sfmap.api.mapcore.IProjectionDelegate) -> <init>
    34:38:com.sfmap.api.maps.model.LatLng fromScreenLocation(android.graphics.Point) -> fromScreenLocation
    51:55:android.graphics.Point toScreenLocation(com.sfmap.api.maps.model.LatLng) -> toScreenLocation
    87:91:android.graphics.PointF toOpenGLLocation(com.sfmap.api.maps.model.LatLng) -> toOpenGLLocation
    104:108:float toOpenGLWidth(int) -> toOpenGLWidth
    120:124:com.sfmap.api.maps.model.VisibleRegion getVisibleRegion() -> getVisibleRegion
    139:143:com.sfmap.api.maps.model.TileProjection fromBoundsToTile(com.sfmap.api.maps.model.LatLngBounds,int,int) -> fromBoundsToTile
    157:161:com.sfmap.api.maps.model.LatLngBounds getMapBounds(com.sfmap.api.maps.model.LatLng,float) -> getMapBounds
com.sfmap.api.maps.SupportMapFragment -> com.sfmap.api.maps.SupportMapFragment:
    com.sfmap.api.maps.MapController map -> a
    com.sfmap.api.mapcore.IMapFragmentDelegate iMapFragmentDelegate -> b
    20:20:void <init>() -> <init>
    32:32:com.sfmap.api.maps.SupportMapFragment newInstance() -> newInstance
    42:55:com.sfmap.api.maps.SupportMapFragment newInstance(com.sfmap.api.maps.MapOptions) -> newInstance
    60:64:com.sfmap.api.mapcore.IMapFragmentDelegate getMapFragmentDelegate() -> getMapFragmentDelegate
    73:92:com.sfmap.api.maps.MapController getMap() -> getMap
    97:98:void onAttach(android.app.Activity) -> onAttach
    102:111:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    115:116:void onCreate(android.os.Bundle) -> onCreate
    122:131:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    136:145:void onResume() -> onResume
    149:158:void onPause() -> onPause
    164:171:void onDestroyView() -> onDestroyView
    177:184:void onDestroy() -> onDestroy
    188:197:void onLowMemory() -> onLowMemory
    208:215:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    219:220:void setArguments(android.os.Bundle) -> setArguments
    228:234:void setUserVisibleHint(boolean) -> setUserVisibleHint
com.sfmap.api.maps.TextureMapFragment -> com.sfmap.api.maps.TextureMapFragment:
    com.sfmap.api.maps.MapController lmap -> a
    com.sfmap.api.mapcore.IMapFragmentDelegate iMapFragmentDelegate -> b
    20:20:void <init>() -> <init>
    32:32:com.sfmap.api.maps.TextureMapFragment newInstance() -> newInstance
    42:55:com.sfmap.api.maps.TextureMapFragment newInstance(com.sfmap.api.maps.MapOptions) -> newInstance
    60:66:com.sfmap.api.mapcore.IMapFragmentDelegate getMapFragmentDelegate() -> getMapFragmentDelegate
    75:94:com.sfmap.api.maps.MapController getMap() -> getMap
    99:100:void onAttach(android.app.Activity) -> onAttach
    104:113:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    117:126:void onCreate(android.os.Bundle) -> onCreate
    132:141:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    146:155:void onResume() -> onResume
    159:168:void onPause() -> onPause
    174:181:void onDestroyView() -> onDestroyView
    187:195:void onDestroy() -> onDestroy
    199:208:void onLowMemory() -> onLowMemory
    214:221:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    225:226:void setArguments(android.os.Bundle) -> setArguments
    230:235:void setUserVisibleHint(boolean) -> setUserVisibleHint
com.sfmap.api.maps.TextureMapView -> com.sfmap.api.maps.TextureMapView:
    com.sfmap.api.mapcore.IMapFragmentDelegate iMapFragmentDelegate -> a
    com.sfmap.api.maps.MapController lmap -> b
    int visible -> c
    26:36:void <init>(android.content.Context) -> <init>
    26:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    26:63:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    26:75:void <init>(android.content.Context,com.sfmap.api.maps.MapOptions) -> <init>
    79:82:com.sfmap.api.mapcore.IMapFragmentDelegate getMapFragmentDelegate() -> getMapFragmentDelegate
    91:107:com.sfmap.api.maps.MapController getMap() -> getMap
    118:128:void onCreate(android.os.Bundle) -> onCreate
    136:142:void onResume() -> onResume
    150:156:void onPause() -> onPause
    164:171:void onDestroy() -> onDestroy
    179:185:void onLowMemory() -> onLowMemory
    194:200:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    207:209:void setVisibility(int) -> setVisibility
com.sfmap.api.maps.TextureSupportMapFragment -> com.sfmap.api.maps.TextureSupportMapFragment:
    com.sfmap.api.maps.MapController lmap -> a
    com.sfmap.api.mapcore.IMapFragmentDelegate iMapFragmentDelegate -> b
    20:20:void <init>() -> <init>
    32:32:com.sfmap.api.maps.TextureSupportMapFragment newInstance() -> newInstance
    42:55:com.sfmap.api.maps.TextureSupportMapFragment newInstance(com.sfmap.api.maps.MapOptions) -> newInstance
    60:64:com.sfmap.api.mapcore.IMapFragmentDelegate getMapFragmentDelegate() -> getMapFragmentDelegate
    73:92:com.sfmap.api.maps.MapController getMap() -> getMap
    97:98:void onAttach(android.app.Activity) -> onAttach
    102:111:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    115:116:void onCreate(android.os.Bundle) -> onCreate
    122:131:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    136:145:void onResume() -> onResume
    149:158:void onPause() -> onPause
    164:171:void onDestroyView() -> onDestroyView
    177:184:void onDestroy() -> onDestroy
    188:197:void onLowMemory() -> onLowMemory
    203:210:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    214:215:void setArguments(android.os.Bundle) -> setArguments
    219:225:void setUserVisibleHint(boolean) -> setUserVisibleHint
com.sfmap.api.maps.UiSettings -> com.sfmap.api.maps.UiSettings:
    com.sfmap.api.mapcore.IUiSettingsDelegate uiSettingsDelegate -> a
    15:17:void <init>(com.sfmap.api.mapcore.IUiSettingsDelegate) -> <init>
    27:33:void setScaleControlsEnabled(boolean) -> setScaleControlsEnabled
    43:49:void setZoomControlsEnabled(boolean) -> setZoomControlsEnabled
    59:65:void setCompassEnabled(boolean) -> setCompassEnabled
    75:81:void setMyLocationButtonEnabled(boolean) -> setMyLocationButtonEnabled
    91:97:void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    107:113:void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
    123:129:void setTiltGesturesEnabled(boolean) -> setTiltGesturesEnabled
    139:145:void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    155:161:void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    171:177:void setLogoPosition(int) -> setLogoPosition
    187:193:void setZoomPosition(int) -> setZoomPosition
    203:207:int getZoomPosition() -> getZoomPosition
    219:223:boolean isScaleControlsEnabled() -> isScaleControlsEnabled
    235:239:boolean isZoomControlsEnabled() -> isZoomControlsEnabled
    251:255:boolean isCompassEnabled() -> isCompassEnabled
    267:271:boolean isMyLocationButtonEnabled() -> isMyLocationButtonEnabled
    283:287:boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    299:303:boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    315:319:boolean isTiltGesturesEnabled() -> isTiltGesturesEnabled
    331:335:boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
    347:351:int getLogoPosition() -> getLogoPosition
    362:366:void setCompassViewPosition(int,int) -> setCompassViewPosition
com.sfmap.api.maps.cluster.Cluster -> com.sfmap.api.maps.cluster.Cluster:
    com.sfmap.api.maps.model.LatLng mLatLng -> mLatLng
    java.util.List mClusterItems -> mClusterItems
    com.sfmap.api.maps.model.Marker mMarker -> mMarker
    21:25:void <init>(com.sfmap.api.maps.model.LatLng) -> <init>
    28:29:void addClusterItem(com.sfmap.api.maps.cluster.ClusterItem) -> addClusterItem
    32:32:int getClusterCount() -> getClusterCount
    36:36:com.sfmap.api.maps.model.LatLng getCenterLatLng() -> getCenterLatLng
    40:41:void setMarker(com.sfmap.api.maps.model.Marker) -> setMarker
    44:44:com.sfmap.api.maps.model.Marker getMarker() -> getMarker
    48:48:java.util.List getClusterItems() -> getClusterItems
com.sfmap.api.maps.cluster.ClusterClickListener -> com.sfmap.api.maps.cluster.ClusterClickListener:
    void onClick(com.sfmap.api.maps.model.Marker,java.util.List) -> onClick
com.sfmap.api.maps.cluster.ClusterItem -> com.sfmap.api.maps.cluster.ClusterItem:
    com.sfmap.api.maps.model.LatLng getPosition() -> getPosition
com.sfmap.api.maps.cluster.ClusterOverlay -> com.sfmap.api.maps.cluster.ClusterOverlay:
    java.lang.String TAG -> TAG
    com.sfmap.api.maps.MapController mAMap -> mAMap
    android.content.Context mContext -> mContext
    java.util.List mClusters -> mClusters
    int mClusterSize -> mClusterSize
    com.sfmap.api.maps.cluster.ClusterClickListener mClusterClickListener -> mClusterClickListener
    com.sfmap.api.maps.cluster.ClusterRender mClusterRender -> mClusterRender
    double mClusterDistance -> mClusterDistance
    float mPXInMeters -> mPXInMeters
    android.util.LruCache mLruCache -> mLruCache
    java.util.List mClusterItems -> mClusterItems
    java.util.List mAddMarkers -> mAddMarkers
    android.os.HandlerThread mMarkerHandlerThread -> mMarkerHandlerThread
    android.os.HandlerThread mAssignClusterThread -> mAssignClusterThread
    android.os.Handler mMarkerHandler -> mMarkerHandler
    android.os.Handler mSignClusterHandler -> mSignClusterHandler
    boolean mIsDestroyed -> mIsDestroyed
    boolean mClusterVisibleOnly -> mClusterVisibleOnly
    boolean mCenterMapToClickedMarker -> mCenterMapToClickedMarker
    65:66:void <init>(com.sfmap.api.maps.MapController,int,android.content.Context) -> <init>
    47:96:void <init>(com.sfmap.api.maps.MapController,java.util.List,int,android.content.Context) -> <init>
    105:106:void setOnClusterClickListener(com.sfmap.api.maps.cluster.ClusterClickListener) -> setOnClusterClickListener
    114:121:void addClusterItem(com.sfmap.api.maps.cluster.ClusterItem) -> addClusterItem
    128:134:void updateClusterItems(java.util.List) -> updateClusterItems
    142:144:void setClusterVisibleOnly(boolean) -> setClusterVisibleOnly
    152:153:void setCenterMapToClickedMarker(boolean) -> setCenterMapToClickedMarker
    160:164:java.util.List getClusters() -> getClusters
    173:174:void setClusterRenderer(com.sfmap.api.maps.cluster.ClusterRender) -> setClusterRenderer
    177:183:void onDestroy() -> onDestroy
    187:191:void initThreadHandler() -> initThreadHandler
    198:207:void addClusterToMap(java.util.List) -> addClusterToMap
    215:234:void addSingleClusterToMap(com.sfmap.api.maps.cluster.Cluster) -> addSingleClusterToMap
    240:274:void calculateClusters() -> calculateClusters
    280:283:void updateClusters() -> updateClusters
    289:291:void assignClusters() -> assignClusters
    299:326:void calculateSingleCluster(com.sfmap.api.maps.cluster.ClusterItem) -> calculateSingleCluster
    335:343:com.sfmap.api.maps.cluster.Cluster getCluster(com.sfmap.api.maps.model.LatLng,java.util.List) -> getCluster
    350:371:com.sfmap.api.maps.model.BitmapDescriptor getBitmapDes(int) -> getBitmapDes
    379:394:void updateCluster(com.sfmap.api.maps.cluster.Cluster) -> updateCluster
    401:410:void responseClusterClickEvent(com.sfmap.api.maps.model.Marker) -> responseClusterClickEvent
    35:35:boolean access$000(com.sfmap.api.maps.cluster.ClusterOverlay) -> access$000
    35:35:void access$100(com.sfmap.api.maps.cluster.ClusterOverlay,java.util.List) -> access$100
    35:35:void access$200(com.sfmap.api.maps.cluster.ClusterOverlay,com.sfmap.api.maps.cluster.Cluster) -> access$200
    35:35:void access$300(com.sfmap.api.maps.cluster.ClusterOverlay,com.sfmap.api.maps.cluster.Cluster) -> access$300
    35:35:java.util.List access$400(com.sfmap.api.maps.cluster.ClusterOverlay) -> access$400
    35:35:android.util.LruCache access$500(com.sfmap.api.maps.cluster.ClusterOverlay) -> access$500
    35:35:android.os.HandlerThread access$600(com.sfmap.api.maps.cluster.ClusterOverlay) -> access$600
    35:35:void access$700(com.sfmap.api.maps.cluster.ClusterOverlay) -> access$700
    35:35:java.util.List access$800(com.sfmap.api.maps.cluster.ClusterOverlay) -> access$800
    35:35:void access$900(com.sfmap.api.maps.cluster.ClusterOverlay,com.sfmap.api.maps.cluster.ClusterItem) -> access$900
com.sfmap.api.maps.cluster.ClusterOverlay$1 -> com.sfmap.api.maps.cluster.ClusterOverlay$1:
    com.sfmap.api.maps.cluster.ClusterOverlay this$0 -> a
    79:79:void <init>(com.sfmap.api.maps.cluster.ClusterOverlay,int) -> <init>
    81:82:void entryRemoved(boolean,java.lang.Integer,com.sfmap.api.maps.model.BitmapDescriptor,com.sfmap.api.maps.model.BitmapDescriptor) -> a
    79:79:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
com.sfmap.api.maps.cluster.ClusterOverlay$MarkerHandler -> com.sfmap.api.maps.cluster.ClusterOverlay$a:
    com.sfmap.api.maps.cluster.ClusterOverlay this$0 -> a
    425:427:void <init>(com.sfmap.api.maps.cluster.ClusterOverlay,android.os.Looper) -> <init>
    431:465:void handleMessage(android.os.Message) -> handleMessage
com.sfmap.api.maps.cluster.ClusterOverlay$SignClusterHandler -> com.sfmap.api.maps.cluster.ClusterOverlay$b:
    com.sfmap.api.maps.cluster.ClusterOverlay this$0 -> a
    476:478:void <init>(com.sfmap.api.maps.cluster.ClusterOverlay,android.os.Looper) -> <init>
    481:504:void handleMessage(android.os.Message) -> handleMessage
com.sfmap.api.maps.cluster.ClusterRender -> com.sfmap.api.maps.cluster.ClusterRender:
    com.sfmap.api.maps.model.MarkerOptions getClusterMarkerOptions(com.sfmap.api.maps.cluster.Cluster) -> getClusterMarkerOptions
com.sfmap.api.maps.model.Arc -> com.sfmap.api.maps.model.Arc:
    com.sfmap.api.mapcore.IArcDelegateDecode a -> a
    24:26:void <init>(com.sfmap.api.mapcore.IArcDelegateDecode) -> <init>
    35:41:void remove() -> remove
    51:55:java.lang.String getId() -> getId
    67:73:void setStrokeWidth(float) -> setStrokeWidth
    83:87:float getStrokeWidth() -> getStrokeWidth
    99:105:void setStrokeColor(int) -> setStrokeColor
    115:119:int getStrokeColor() -> getStrokeColor
    131:137:void setZIndex(float) -> setZIndex
    147:151:float getZIndex() -> getZIndex
    163:169:void setVisible(boolean) -> setVisible
    179:183:boolean isVisible() -> isVisible
    189:198:boolean equals(java.lang.Object) -> equals
    206:210:int hashCode() -> hashCode
com.sfmap.api.maps.model.ArcOptions -> com.sfmap.api.maps.model.ArcOptions:
    com.sfmap.api.maps.model.ArcOptionsCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.sfmap.api.maps.model.LatLng startpoint -> b
    com.sfmap.api.maps.model.LatLng passedpoint -> c
    com.sfmap.api.maps.model.LatLng endpoint -> d
    float width -> e
    int color -> f
    float zIndex -> g
    boolean visible -> h
    10:42:void <init>() -> <init>
    46:68:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    72:72:int describeContents() -> describeContents
    84:87:com.sfmap.api.maps.model.ArcOptions point(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng) -> point
    97:98:com.sfmap.api.maps.model.ArcOptions strokeWidth(float) -> strokeWidth
    108:109:com.sfmap.api.maps.model.ArcOptions strokeColor(int) -> strokeColor
    119:120:com.sfmap.api.maps.model.ArcOptions zIndex(float) -> zIndex
    130:131:com.sfmap.api.maps.model.ArcOptions visible(boolean) -> visible
    140:140:float getStrokeWidth() -> getStrokeWidth
    149:149:int getStrokeColor() -> getStrokeColor
    158:158:float getZIndex() -> getZIndex
    167:167:boolean isVisible() -> isVisible
    176:176:com.sfmap.api.maps.model.LatLng getStart() -> getStart
    185:185:com.sfmap.api.maps.model.LatLng getPassed() -> getPassed
    194:194:com.sfmap.api.maps.model.LatLng getEnd() -> getEnd
    13:13:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.ArcOptionsCreator -> com.sfmap.api.maps.model.ArcOptionsCreator:
    7:7:void <init>() -> <init>
    12:23:com.sfmap.api.maps.model.ArcOptions createFromParcel(android.os.Parcel) -> createFromParcel
    28:28:com.sfmap.api.maps.model.ArcOptions[] newArray(int) -> newArray
    7:7:java.lang.Object[] newArray(int) -> newArray
    7:7:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.BitmapDescriptor -> com.sfmap.api.maps.model.BitmapDescriptor:
    com.sfmap.api.maps.model.BitmapDescriptorCreator CREATOR -> CREATOR
    int width -> a
    int height -> b
    android.graphics.Bitmap icon -> c
    17:29:void <init>(android.graphics.Bitmap) -> <init>
    17:36:void <init>(android.graphics.Bitmap,int,int) -> <init>
    42:48:com.sfmap.api.maps.model.BitmapDescriptor clone() -> clone
    57:57:android.graphics.Bitmap getBitmap() -> getBitmap
    66:66:int getWidth() -> getWidth
    75:75:int getHeight() -> getHeight
    80:90:android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    95:95:int describeContents() -> describeContents
    100:103:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    110:115:void recycle() -> recycle
    119:143:boolean equals(java.lang.Object) -> equals
    13:13:java.lang.Object clone() -> clone
    16:16:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.BitmapDescriptorCreator -> com.sfmap.api.maps.model.BitmapDescriptorCreator:
    7:7:void <init>() -> <init>
    12:17:com.sfmap.api.maps.model.BitmapDescriptor createFromParcel(android.os.Parcel) -> createFromParcel
    22:22:com.sfmap.api.maps.model.BitmapDescriptor[] newArray(int) -> newArray
    7:7:java.lang.Object[] newArray(int) -> newArray
    7:7:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.BitmapDescriptorFactory -> com.sfmap.api.maps.model.BitmapDescriptorFactory:
    int MARKER_COLOR_RED -> MARKER_COLOR_RED
    int MARKER_COLOR_ORANGE -> MARKER_COLOR_ORANGE
    int MARKER_COLOR_YELLOW -> MARKER_COLOR_YELLOW
    int MARKER_COLOR_GREEN -> MARKER_COLOR_GREEN
    int MARKER_COLOR_CYAN -> MARKER_COLOR_CYAN
    int MARKER_COLOR_AZURE -> MARKER_COLOR_AZURE
    int MARKER_COLOR_BLUE -> MARKER_COLOR_BLUE
    int MARKER_COLOR_VIOLET -> MARKER_COLOR_VIOLET
    int MARKER_COLOR_MAGENTA -> MARKER_COLOR_MAGENTA
    int MARKER_COLOR_ROSE -> MARKER_COLOR_ROSE
    18:18:void <init>() -> <init>
    70:83:com.sfmap.api.maps.model.BitmapDescriptor fromResource(int) -> fromResource
    95:109:com.sfmap.api.maps.model.BitmapDescriptor fromView(android.view.View) -> fromView
    121:127:com.sfmap.api.maps.model.BitmapDescriptor fromPath(java.lang.String) -> fromPath
    137:156:com.sfmap.api.maps.model.BitmapDescriptor fromAsset(java.lang.String) -> fromAsset
    168:181:com.sfmap.api.maps.model.BitmapDescriptor fromFile(java.lang.String) -> fromFile
    192:195:com.sfmap.api.maps.model.BitmapDescriptor defaultMarker() -> defaultMarker
    207:233:com.sfmap.api.maps.model.BitmapDescriptor defaultMarker(int) -> defaultMarker
    243:252:com.sfmap.api.maps.model.BitmapDescriptor fromBitmap(android.graphics.Bitmap) -> fromBitmap
com.sfmap.api.maps.model.CameraPosition -> com.sfmap.api.maps.model.CameraPosition:
    com.sfmap.api.maps.model.CameraPositionCreator CREATOR -> CREATOR
    com.sfmap.api.maps.model.LatLng target -> target
    float zoom -> zoom
    float tilt -> tilt
    float bearing -> bearing
    boolean isAbroad -> isAbroad
    45:53:void <init>(com.sfmap.api.maps.model.LatLng,float,float,float) -> <init>
    57:62:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    66:66:int describeContents() -> describeContents
    71:71:int hashCode() -> hashCode
    82:82:com.sfmap.api.maps.model.CameraPosition fromLatLngZoom(com.sfmap.api.maps.model.LatLng,float) -> fromLatLngZoom
    91:91:com.sfmap.api.maps.model.CameraPosition$Builder builder() -> builder
    101:101:com.sfmap.api.maps.model.CameraPosition$Builder builder(com.sfmap.api.maps.model.CameraPosition) -> builder
    106:116:boolean equals(java.lang.Object) -> equals
    121:124:java.lang.String toString() -> toString
    15:15:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.CameraPosition$Builder -> com.sfmap.api.maps.model.CameraPosition$Builder:
    com.sfmap.api.maps.model.LatLng location -> a
    float zoom -> b
    float tilt -> c
    float bearing -> d
    152:152:void <init>() -> <init>
    159:165:void <init>(com.sfmap.api.maps.model.CameraPosition) -> <init>
    174:175:com.sfmap.api.maps.model.CameraPosition$Builder target(com.sfmap.api.maps.model.LatLng) -> target
    185:186:com.sfmap.api.maps.model.CameraPosition$Builder zoom(float) -> zoom
    196:197:com.sfmap.api.maps.model.CameraPosition$Builder tilt(float) -> tilt
    207:208:com.sfmap.api.maps.model.CameraPosition$Builder bearing(float) -> bearing
    217:218:com.sfmap.api.maps.model.CameraPosition build() -> build
com.sfmap.api.maps.model.CameraPositionCreator -> com.sfmap.api.maps.model.CameraPositionCreator:
    6:6:void <init>() -> <init>
    11:16:com.sfmap.api.maps.model.CameraPosition createFromParcel(android.os.Parcel) -> createFromParcel
    21:21:com.sfmap.api.maps.model.CameraPosition[] newArray(int) -> newArray
    6:6:java.lang.Object[] newArray(int) -> newArray
    6:6:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.Circle -> com.sfmap.api.maps.model.Circle:
    com.sfmap.api.mapcore.ICircleDelegate circle -> a
    22:24:void <init>(com.sfmap.api.mapcore.ICircleDelegate) -> <init>
    33:39:void remove() -> remove
    49:53:java.lang.String getId() -> getId
    65:71:void setCenter(com.sfmap.api.maps.model.LatLng) -> setCenter
    81:85:com.sfmap.api.maps.model.LatLng getCenter() -> getCenter
    97:103:void setRadius(double) -> setRadius
    113:117:double getRadius() -> getRadius
    129:135:void setStrokeWidth(float) -> setStrokeWidth
    145:149:float getStrokeWidth() -> getStrokeWidth
    161:167:void setStrokeColor(int) -> setStrokeColor
    177:181:int getStrokeColor() -> getStrokeColor
    193:199:void setFillColor(int) -> setFillColor
    209:213:int getFillColor() -> getFillColor
    225:231:void setZIndex(float) -> setZIndex
    241:245:float getZIndex() -> getZIndex
    257:263:void setVisible(boolean) -> setVisible
    273:277:boolean isVisible() -> isVisible
    283:292:boolean equals(java.lang.Object) -> equals
    300:304:int hashCode() -> hashCode
    317:321:boolean contains(com.sfmap.api.maps.model.LatLng) -> contains
com.sfmap.api.maps.model.CircleOptions -> com.sfmap.api.maps.model.CircleOptions:
    com.sfmap.api.maps.model.CircleOptionsCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.sfmap.api.maps.model.LatLng centerPoint -> b
    double radius -> c
    float strokeWidth -> d
    int strokeColor -> e
    int fillColor -> f
    float zIndex -> g
    boolean visible -> h
    10:21:void <init>() -> <init>
    25:39:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    43:43:int describeContents() -> describeContents
    53:54:com.sfmap.api.maps.model.CircleOptions center(com.sfmap.api.maps.model.LatLng) -> center
    64:65:com.sfmap.api.maps.model.CircleOptions radius(double) -> radius
    75:76:com.sfmap.api.maps.model.CircleOptions strokeWidth(float) -> strokeWidth
    86:87:com.sfmap.api.maps.model.CircleOptions strokeColor(int) -> strokeColor
    97:98:com.sfmap.api.maps.model.CircleOptions fillColor(int) -> fillColor
    108:109:com.sfmap.api.maps.model.CircleOptions zIndex(float) -> zIndex
    119:120:com.sfmap.api.maps.model.CircleOptions visible(boolean) -> visible
    129:129:com.sfmap.api.maps.model.LatLng getCenter() -> getCenter
    137:137:double getRadius() -> getRadius
    145:145:float getStrokeWidth() -> getStrokeWidth
    153:153:int getStrokeColor() -> getStrokeColor
    161:161:int getFillColor() -> getFillColor
    169:169:float getZIndex() -> getZIndex
    177:177:boolean isVisible() -> isVisible
    13:13:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.CircleOptionsCreator -> com.sfmap.api.maps.model.CircleOptionsCreator:
    7:7:void <init>() -> <init>
    12:23:com.sfmap.api.maps.model.CircleOptions createFromParcel(android.os.Parcel) -> createFromParcel
    28:28:com.sfmap.api.maps.model.CircleOptions[] newArray(int) -> newArray
    7:7:java.lang.Object[] newArray(int) -> newArray
    7:7:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.Gradient -> com.sfmap.api.maps.model.Gradient:
    int a -> a
    int[] b -> b
    float[] c -> c
    boolean d -> d
    40:41:void <init>(int[],float[]) -> <init>
    31:74:void <init>(int[],float[],int) -> <init>
    78:93:java.util.HashMap a() -> a
    98:120:int[] generateColorMap(double) -> generateColorMap
    125:140:int a(int,int,float) -> a
    145:145:boolean isAvailable() -> isAvailable
com.sfmap.api.maps.model.Gradient$1 -> com.sfmap.api.maps.model.Gradient$1:
com.sfmap.api.maps.model.Gradient$a -> com.sfmap.api.maps.model.Gradient$a:
    int b -> b
    int c -> c
    float d -> d
    com.sfmap.api.maps.model.Gradient this$0 -> a
    24:28:void <init>(com.sfmap.api.maps.model.Gradient,int,int,float) -> <init>
    17:17:void <init>(com.sfmap.api.maps.model.Gradient,int,int,float,com.sfmap.api.maps.model.Gradient$1) -> <init>
    17:17:float access$100(com.sfmap.api.maps.model.Gradient$a) -> a
    17:17:int access$200(com.sfmap.api.maps.model.Gradient$a) -> b
    17:17:int access$300(com.sfmap.api.maps.model.Gradient$a) -> c
com.sfmap.api.maps.model.GroundOverlay -> com.sfmap.api.maps.model.GroundOverlay:
    com.sfmap.api.mapcore.IGroundOverlayDelegateDecode groundoverlay -> a
    20:22:void <init>(com.sfmap.api.mapcore.IGroundOverlayDelegateDecode) -> <init>
    31:37:void remove() -> remove
    47:51:java.lang.String getId() -> getId
    63:69:void setPosition(com.sfmap.api.maps.model.LatLng) -> setPosition
    79:83:com.sfmap.api.maps.model.LatLng getPosition() -> getPosition
    95:101:void setDimensions(float) -> setDimensions
    111:117:void setImage(com.sfmap.api.maps.model.BitmapDescriptor) -> setImage
    128:134:void setDimensions(float,float) -> setDimensions
    144:148:float getWidth() -> getWidth
    160:164:float getHeight() -> getHeight
    176:182:void setPositionFromBounds(com.sfmap.api.maps.model.LatLngBounds) -> setPositionFromBounds
    192:196:com.sfmap.api.maps.model.LatLngBounds getBounds() -> getBounds
    208:214:void setBearing(float) -> setBearing
    224:228:float getBearing() -> getBearing
    240:246:void setZIndex(float) -> setZIndex
    256:260:float getZIndex() -> getZIndex
    272:278:void setVisible(boolean) -> setVisible
    288:292:boolean isVisible() -> isVisible
    304:310:void setTransparency(float) -> setTransparency
    320:324:float getTransparency() -> getTransparency
    330:339:boolean equals(java.lang.Object) -> equals
    345:345:int hashCode() -> hashCode
com.sfmap.api.maps.model.GroundOverlayOptions -> com.sfmap.api.maps.model.GroundOverlayOptions:
    com.sfmap.api.maps.model.GroundOverlayOptionsCreator CREATOR -> CREATOR
    float NO_DIMENSION -> NO_DIMENSION
    int a -> a
    com.sfmap.api.maps.model.BitmapDescriptor image -> b
    com.sfmap.api.maps.model.LatLng location -> c
    float width -> d
    float height -> e
    com.sfmap.api.maps.model.LatLngBounds bounds -> f
    float bearing -> g
    float zIndex -> h
    boolean visible -> i
    float transparency -> j
    float anchorU -> k
    float anchorV -> l
    20:40:void <init>(int,android.os.IBinder,com.sfmap.api.maps.model.LatLng,float,float,com.sfmap.api.maps.model.LatLngBounds,float,float,boolean,float,float,float) -> <init>
    20:45:void <init>() -> <init>
    54:55:com.sfmap.api.maps.model.GroundOverlayOptions image(com.sfmap.api.maps.model.BitmapDescriptor) -> image
    66:68:com.sfmap.api.maps.model.GroundOverlayOptions anchor(float,float) -> anchor
    80:83:com.sfmap.api.maps.model.GroundOverlayOptions position(com.sfmap.api.maps.model.LatLng,float) -> position
    96:100:com.sfmap.api.maps.model.GroundOverlayOptions position(com.sfmap.api.maps.model.LatLng,float,float) -> position
    105:108:com.sfmap.api.maps.model.GroundOverlayOptions myposition(com.sfmap.api.maps.model.LatLng,float,float) -> a
    113:115:com.sfmap.api.maps.model.GroundOverlayOptions positionFromBounds(com.sfmap.api.maps.model.LatLngBounds) -> positionFromBounds
    125:126:com.sfmap.api.maps.model.GroundOverlayOptions bearing(float) -> bearing
    136:137:com.sfmap.api.maps.model.GroundOverlayOptions zIndex(float) -> zIndex
    147:148:com.sfmap.api.maps.model.GroundOverlayOptions visible(boolean) -> visible
    158:160:com.sfmap.api.maps.model.GroundOverlayOptions transparency(float) -> transparency
    169:169:com.sfmap.api.maps.model.BitmapDescriptor getImage() -> getImage
    178:178:com.sfmap.api.maps.model.LatLng getLocation() -> getLocation
    187:187:float getWidth() -> getWidth
    196:196:float getHeight() -> getHeight
    205:205:com.sfmap.api.maps.model.LatLngBounds getBounds() -> getBounds
    210:210:float getBearing() -> getBearing
    215:215:float getZIndex() -> getZIndex
    220:220:float getTransparency() -> getTransparency
    225:225:float getAnchorU() -> getAnchorU
    230:230:float getAnchorV() -> getAnchorV
    235:235:boolean isVisible() -> isVisible
    240:240:int describeContents() -> describeContents
    245:257:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    11:11:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.GroundOverlayOptionsCreator -> com.sfmap.api.maps.model.GroundOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    6:6:void <init>() -> <init>
    13:28:com.sfmap.api.maps.model.GroundOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    33:33:com.sfmap.api.maps.model.GroundOverlayOptions[] newArray(int) -> newArray
    6:6:java.lang.Object[] newArray(int) -> newArray
    6:6:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.HeatmapTileProvider -> com.sfmap.api.maps.model.HeatmapTileProvider:
    int DEFAULT_RADIUS -> DEFAULT_RADIUS
    double DEFAULT_OPACITY -> DEFAULT_OPACITY
    int[] color -> a
    float[] b -> b
    com.sfmap.api.maps.model.Gradient DEFAULT_GRADIENT -> DEFAULT_GRADIENT
    com.sfmap.api.maps.model.c c -> c
    java.util.Collection collection -> d
    com.sfmap.api.mapcore.util.Bounds pointBounds -> e
    int radius -> f
    com.sfmap.api.maps.model.Gradient gradient -> g
    int[] colorMapData -> h
    double[] i -> i
    double transparency -> j
    double[] k -> k
    50:62:void <init>(com.sfmap.api.maps.model.HeatmapTileProvider$Builder) -> <init>
    65:87:void c(java.util.Collection) -> c
    90:98:java.util.Collection d(java.util.Collection) -> d
    109:163:com.sfmap.api.maps.model.Tile getTile(int,int,int) -> getTile
    169:198:void writeDatasToFile(java.lang.String,byte[]) -> writeDatasToFile
    200:202:void setGradient(com.sfmap.api.maps.model.Gradient) -> a
    205:221:double[] a(int) -> a
    224:228:com.sfmap.api.maps.model.Tile getTileFromBitmap(android.graphics.Bitmap,int,int,int) -> a
    232:260:com.sfmap.api.mapcore.util.Bounds getBounds(java.util.Collection) -> a
    264:270:double[] a(int,double) -> a
    274:315:double[][] a(double[][],double[]) -> a
    319:344:android.graphics.Bitmap a(double[][],int[],double) -> a
    348:383:double a(java.util.Collection,com.sfmap.api.mapcore.util.Bounds,int,int) -> a
    391:391:int getTileHeight() -> getTileHeight
    399:399:int getTileWidth() -> getTileWidth
    25:25:java.util.Collection access$400(java.util.Collection) -> b
    25:25:void <init>(com.sfmap.api.maps.model.HeatmapTileProvider$Builder,com.sfmap.api.maps.model.HeatmapTileProvider$1) -> <init>
    34:404:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.HeatmapTileProvider$1 -> com.sfmap.api.maps.model.HeatmapTileProvider$1:
com.sfmap.api.maps.model.HeatmapTileProvider$Builder -> com.sfmap.api.maps.model.HeatmapTileProvider$Builder:
    java.util.Collection collection -> a
    int radius -> b
    com.sfmap.api.maps.model.Gradient gradient -> c
    double transparency -> d
    411:418:void <init>() -> <init>
    426:426:com.sfmap.api.maps.model.HeatmapTileProvider$Builder data(java.util.Collection) -> data
    435:436:com.sfmap.api.maps.model.HeatmapTileProvider$Builder weightedData(java.util.Collection) -> weightedData
    445:446:com.sfmap.api.maps.model.HeatmapTileProvider$Builder radius(int) -> radius
    455:456:com.sfmap.api.maps.model.HeatmapTileProvider$Builder gradient(com.sfmap.api.maps.model.Gradient) -> gradient
    465:466:com.sfmap.api.maps.model.HeatmapTileProvider$Builder transparency(double) -> transparency
    474:482:com.sfmap.api.maps.model.HeatmapTileProvider build() -> build
    409:409:java.util.Collection access$000(com.sfmap.api.maps.model.HeatmapTileProvider$Builder) -> a
    409:409:int access$100(com.sfmap.api.maps.model.HeatmapTileProvider$Builder) -> b
    409:409:com.sfmap.api.maps.model.Gradient access$200(com.sfmap.api.maps.model.HeatmapTileProvider$Builder) -> c
    409:409:double access$300(com.sfmap.api.maps.model.HeatmapTileProvider$Builder) -> d
com.sfmap.api.maps.model.LatLng -> com.sfmap.api.maps.model.LatLng:
    com.sfmap.api.maps.model.LatLngCreator CREATOR -> CREATOR
    double latitude -> latitude
    double longitude -> longitude
    java.text.DecimalFormat a -> a
    29:30:void <init>(double,double) -> <init>
    40:66:void <init>(double,double,boolean) -> <init>
    70:70:double a(double) -> a
    80:80:com.sfmap.api.maps.model.LatLng clone() -> clone
    89:95:int hashCode() -> hashCode
    105:116:boolean equals(java.lang.Object) -> equals
    121:121:java.lang.String toString() -> toString
    126:126:int describeContents() -> describeContents
    131:133:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    14:14:java.lang.Object clone() -> clone
    17:20:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.LatLngBounds -> com.sfmap.api.maps.model.LatLngBounds:
    com.sfmap.api.maps.model.LatLngBoundsCreator CREATOR -> CREATOR
    int a -> a
    com.sfmap.api.maps.model.LatLng southwest -> southwest
    com.sfmap.api.maps.model.LatLng northeast -> northeast
    20:32:void <init>(int,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng) -> <init>
    36:37:void <init>(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng) -> <init>
    41:41:int a() -> a
    51:51:com.sfmap.api.maps.model.LatLngBounds$Builder builder() -> builder
    61:63:boolean contains(com.sfmap.api.maps.model.LatLng) -> contains
    73:81:boolean contains(com.sfmap.api.maps.model.LatLngBounds) -> contains
    91:94:boolean intersects(com.sfmap.api.maps.model.LatLngBounds) -> intersects
    99:110:boolean a(com.sfmap.api.maps.model.LatLngBounds) -> a
    120:132:com.sfmap.api.maps.model.LatLngBounds including(com.sfmap.api.maps.model.LatLng) -> including
    137:137:double c(double,double) -> c
    142:142:double d(double,double) -> d
    147:147:boolean a(double) -> a
    152:155:boolean b(double) -> b
    160:160:int hashCode() -> hashCode
    165:173:boolean equals(java.lang.Object) -> equals
    178:180:java.lang.String toString() -> toString
    185:185:int describeContents() -> describeContents
    190:191:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    11:11:double access$000(double,double) -> a
    11:11:double access$100(double,double) -> b
    14:14:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.LatLngBounds$Builder -> com.sfmap.api.maps.model.LatLngBounds$Builder:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    196:201:void <init>() -> <init>
    210:227:com.sfmap.api.maps.model.LatLngBounds$Builder include(com.sfmap.api.maps.model.LatLng) -> include
    238:253:boolean a(double) -> a
    262:264:com.sfmap.api.maps.model.LatLngBounds build() -> build
com.sfmap.api.maps.model.LatLngBoundsCreator -> com.sfmap.api.maps.model.LatLngBoundsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    7:7:void <init>() -> <init>
    14:29:com.sfmap.api.maps.model.LatLngBounds createFromParcel(android.os.Parcel) -> createFromParcel
    34:34:com.sfmap.api.maps.model.LatLngBounds[] newArray(int) -> newArray
    39:42:void a(com.sfmap.api.maps.model.LatLngBounds,android.os.Parcel,int) -> a
    7:7:java.lang.Object[] newArray(int) -> newArray
    7:7:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.LatLngCreator -> com.sfmap.api.maps.model.LatLngCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    6:6:void <init>() -> <init>
    13:15:com.sfmap.api.maps.model.LatLng createFromParcel(android.os.Parcel) -> createFromParcel
    20:20:com.sfmap.api.maps.model.LatLng[] newArray(int) -> newArray
    6:6:java.lang.Object[] newArray(int) -> newArray
    6:6:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.Marker -> com.sfmap.api.maps.model.Marker:
    com.sfmap.api.mapcore.IMarkerDelegate marker -> a
    24:26:void <init>(com.sfmap.api.mapcore.IMarkerDelegate) -> <init>
    36:42:void setPeriod(int) -> setPeriod
    52:56:int getPeriod() -> getPeriod
    68:74:void setIcons(java.util.ArrayList) -> setIcons
    84:88:java.util.ArrayList getIcons() -> getIcons
    99:105:void remove() -> remove
    114:122:void destroy() -> destroy
    132:136:java.lang.String getId() -> getId
    183:189:void setPosition(com.sfmap.api.maps.model.LatLng) -> setPosition
    199:203:com.sfmap.api.maps.model.LatLng getPosition() -> getPosition
    215:221:void setTitle(java.lang.String) -> setTitle
    231:235:java.lang.String getTitle() -> getTitle
    247:253:void setSnippet(java.lang.String) -> setSnippet
    263:267:java.lang.String getSnippet() -> getSnippet
    279:287:void setIcon(com.sfmap.api.maps.model.BitmapDescriptor) -> setIcon
    298:304:void setAnchor(float,float) -> setAnchor
    314:320:void setDraggable(boolean) -> setDraggable
    328:328:boolean isDraggable() -> isDraggable
    338:344:void showInfoWindow() -> showInfoWindow
    353:359:void hideInfoWindow() -> hideInfoWindow
    367:367:boolean isInfoWindowShown() -> isInfoWindowShown
    378:384:void setVisible(boolean) -> setVisible
    394:398:boolean isVisible() -> isVisible
    406:413:boolean equals(java.lang.Object) -> equals
    419:419:int hashCode() -> hashCode
    428:429:void setObject(java.lang.Object) -> setObject
    437:437:java.lang.Object getObject() -> getObject
    448:454:void setRotateAngle(float) -> setRotateAngle
    462:462:float getRotateAngle() -> getRotateAngle
    472:478:void setToTop() -> setToTop
    487:488:void setGeoPoint(com.sfmap.mapcore.IPoint) -> setGeoPoint
    496:496:com.sfmap.mapcore.IPoint getGeoPoint() -> getGeoPoint
    507:513:void setFlat(boolean) -> setFlat
    521:521:boolean isFlat() -> isFlat
    531:532:void setPositionByPixels(int,int) -> setPositionByPixels
    540:541:void setZIndex(float) -> setZIndex
    549:549:float getZIndex() -> getZIndex
com.sfmap.api.maps.model.MarkerOptions -> com.sfmap.api.maps.model.MarkerOptions:
    com.sfmap.api.maps.model.MarkerOptionsCreator CREATOR -> CREATOR
    com.sfmap.api.maps.model.LatLng position -> b
    java.lang.String title -> c
    java.lang.String snippet -> d
    float anchorU -> e
    float anchorV -> f
    float zIndex -> g
    boolean isDraggable -> h
    boolean isVisible -> i
    java.lang.String id -> a
    boolean perspective -> j
    int offsetX -> k
    int offsetY -> l
    java.util.ArrayList icons -> m
    int period -> n
    boolean gps -> o
    boolean flat -> p
    boolean isAddByAnimation -> q
    10:30:void <init>() -> <init>
    38:39:com.sfmap.api.maps.model.MarkerOptions icons(java.util.ArrayList) -> icons
    48:48:java.util.ArrayList getIcons() -> getIcons
    58:63:com.sfmap.api.maps.model.MarkerOptions period(int) -> period
    72:72:int getPeriod() -> getPeriod
    82:82:boolean isPerspective() -> isPerspective
    93:94:com.sfmap.api.maps.model.MarkerOptions perspective(boolean) -> perspective
    102:102:boolean isAddByAnimation() -> isAddByAnimation
    111:112:com.sfmap.api.maps.model.MarkerOptions setAddByAnimation(boolean) -> setAddByAnimation
    122:123:com.sfmap.api.maps.model.MarkerOptions position(com.sfmap.api.maps.model.LatLng) -> position
    133:134:com.sfmap.api.maps.model.MarkerOptions setFlat(boolean) -> setFlat
    139:142:void initBitmapArray() -> a
    151:154:com.sfmap.api.maps.model.MarkerOptions icon(com.sfmap.api.maps.model.BitmapDescriptor) -> icon
    165:167:com.sfmap.api.maps.model.MarkerOptions anchor(float,float) -> anchor
    179:181:com.sfmap.api.maps.model.MarkerOptions setInfoWindowOffset(int,int) -> setInfoWindowOffset
    191:192:com.sfmap.api.maps.model.MarkerOptions title(java.lang.String) -> title
    202:203:com.sfmap.api.maps.model.MarkerOptions snippet(java.lang.String) -> snippet
    213:214:com.sfmap.api.maps.model.MarkerOptions draggable(boolean) -> draggable
    224:225:com.sfmap.api.maps.model.MarkerOptions visible(boolean) -> visible
    235:236:com.sfmap.api.maps.model.MarkerOptions setGps(boolean) -> setGps
    245:245:com.sfmap.api.maps.model.LatLng getPosition() -> getPosition
    254:254:java.lang.String getTitle() -> getTitle
    263:263:java.lang.String getSnippet() -> getSnippet
    272:275:com.sfmap.api.maps.model.BitmapDescriptor getIcon() -> getIcon
    284:284:float getAnchorU() -> getAnchorU
    293:293:int getInfoWindowOffsetX() -> getInfoWindowOffsetX
    302:302:int getInfoWindowOffsetY() -> getInfoWindowOffsetY
    311:311:float getAnchorV() -> getAnchorV
    320:320:boolean isDraggable() -> isDraggable
    329:329:boolean isVisible() -> isVisible
    338:338:boolean isGps() -> isGps
    347:347:boolean isFlat() -> isFlat
    357:358:com.sfmap.api.maps.model.MarkerOptions zIndex(float) -> zIndex
    367:367:float getZIndex() -> getZIndex
    372:372:int describeContents() -> describeContents
    377:392:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    13:13:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.MarkerOptionsCreator -> com.sfmap.api.maps.model.MarkerOptionsCreator:
    7:7:void <init>() -> <init>
    12:34:com.sfmap.api.maps.model.MarkerOptions createFromParcel(android.os.Parcel) -> createFromParcel
    39:39:com.sfmap.api.maps.model.MarkerOptions[] newArray(int) -> newArray
    7:7:java.lang.Object[] newArray(int) -> newArray
    7:7:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.MobileBean -> com.sfmap.api.maps.model.a:
    java.lang.String appCerSha1 -> a
    java.lang.String appPackageName -> b
    java.lang.String t -> c
    java.lang.String sv -> d
    java.lang.String cv -> e
    java.lang.String name -> f
    java.lang.String mesh -> g
    java.lang.String type -> h
    26:27:void <init>() -> <init>
    33:58:java.lang.String toString() -> toString
    68:69:void setAppCerSha1(java.lang.String) -> a
    76:77:void setAppPackageName(java.lang.String) -> b
    92:93:void setT(java.lang.String) -> c
    100:101:void setCv(java.lang.String) -> d
    108:109:void setSv(java.lang.String) -> e
    116:117:void setName(java.lang.String) -> f
    124:125:void setMesh(java.lang.String) -> g
    132:133:void setType(java.lang.String) -> h
com.sfmap.api.maps.model.MyLocationStyle -> com.sfmap.api.maps.model.MyLocationStyle:
    com.sfmap.api.maps.model.BitmapDescriptor icon -> a
    float u -> b
    float v -> c
    int color -> d
    int strokeColor -> e
    float width -> f
    10:27:void <init>() -> <init>
    36:37:com.sfmap.api.maps.model.MyLocationStyle myLocationIcon(com.sfmap.api.maps.model.BitmapDescriptor) -> myLocationIcon
    48:50:com.sfmap.api.maps.model.MyLocationStyle anchor(float,float) -> anchor
    60:61:com.sfmap.api.maps.model.MyLocationStyle radiusFillColor(int) -> radiusFillColor
    71:72:com.sfmap.api.maps.model.MyLocationStyle strokeColor(int) -> strokeColor
    82:83:com.sfmap.api.maps.model.MyLocationStyle strokeWidth(float) -> strokeWidth
    92:92:com.sfmap.api.maps.model.BitmapDescriptor getMyLocationIcon() -> getMyLocationIcon
    101:101:float getAnchorU() -> getAnchorU
    110:110:float getAnchorV() -> getAnchorV
    119:119:int getRadiusFillColor() -> getRadiusFillColor
    128:128:int getStrokeColor() -> getStrokeColor
    137:137:float getStrokeWidth() -> getStrokeWidth
    142:142:int describeContents() -> describeContents
    147:153:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.sfmap.api.maps.model.MyLocationStyleCreator -> com.sfmap.api.maps.model.MyLocationStyleCreator:
    6:6:void <init>() -> <init>
    11:19:com.sfmap.api.maps.model.MyLocationStyle createFromParcel(android.os.Parcel) -> createFromParcel
    24:24:com.sfmap.api.maps.model.MyLocationStyle[] newArray(int) -> newArray
    6:6:java.lang.Object[] newArray(int) -> newArray
    6:6:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.MyTrafficStyle -> com.sfmap.api.maps.model.MyTrafficStyle:
    int smoothColor -> a
    int slowColor -> b
    int congestedColor -> c
    int seriousCongestedColor -> d
    11:16:void <init>() -> <init>
    24:24:int getSmoothColor() -> getSmoothColor
    33:34:void setSmoothColor(int) -> setSmoothColor
    42:42:int getSlowColor() -> getSlowColor
    51:52:void setSlowColor(int) -> setSlowColor
    60:60:int getCongestedColor() -> getCongestedColor
    69:70:void setCongestedColor(int) -> setCongestedColor
    78:78:int getSeriousCongestedColor() -> getSeriousCongestedColor
    87:88:void setSeriousCongestedColor(int) -> setSeriousCongestedColor
com.sfmap.api.maps.model.NavigateArrow -> com.sfmap.api.maps.model.NavigateArrow:
    com.sfmap.api.mapcore.INavigateArrowDelegateDecode arrowDelegate -> a
    27:29:void <init>(com.sfmap.api.mapcore.INavigateArrowDelegateDecode) -> <init>
    38:44:void remove() -> remove
    54:58:java.lang.String getId() -> getId
    69:75:void setSideColor(int) -> setSideColor
    84:88:int getSideColor() -> getSideColor
    100:106:void setPoints(java.util.List) -> setPoints
    116:120:java.util.List getPoints() -> getPoints
    132:138:void setWidth(float) -> setWidth
    149:153:float getWidth() -> getWidth
    165:171:void setTopColor(int) -> setTopColor
    179:181:int getTopColor() -> getTopColor
    193:199:void setZIndex(float) -> setZIndex
    209:213:float getZIndex() -> getZIndex
    225:231:void setVisible(boolean) -> setVisible
    241:245:boolean isVisible() -> isVisible
    251:260:boolean equals(java.lang.Object) -> equals
    268:272:int hashCode() -> hashCode
com.sfmap.api.maps.model.NavigateArrowOptions -> com.sfmap.api.maps.model.NavigateArrowOptions:
    com.sfmap.api.maps.model.NavigateArrowOptionsCreator CREATOR -> CREATOR
    java.util.List coordsArray -> b
    float width -> c
    int topColor -> d
    int sideColor -> e
    float zIndex -> f
    boolean visible -> g
    java.lang.String a -> a
    19:32:void <init>() -> <init>
    41:42:com.sfmap.api.maps.model.NavigateArrowOptions add(com.sfmap.api.maps.model.LatLng) -> add
    52:53:com.sfmap.api.maps.model.NavigateArrowOptions add(com.sfmap.api.maps.model.LatLng[]) -> add
    63:69:com.sfmap.api.maps.model.NavigateArrowOptions addAll(java.lang.Iterable) -> addAll
    79:80:com.sfmap.api.maps.model.NavigateArrowOptions width(float) -> width
    90:91:com.sfmap.api.maps.model.NavigateArrowOptions topColor(int) -> topColor
    101:102:com.sfmap.api.maps.model.NavigateArrowOptions sideColor(int) -> sideColor
    112:113:com.sfmap.api.maps.model.NavigateArrowOptions zIndex(float) -> zIndex
    123:124:com.sfmap.api.maps.model.NavigateArrowOptions visible(boolean) -> visible
    133:133:java.util.List getPoints() -> getPoints
    142:142:float getWidth() -> getWidth
    151:151:int getTopColor() -> getTopColor
    160:160:int getSideColor() -> getSideColor
    169:169:float getZIndex() -> getZIndex
    178:178:boolean isVisible() -> isVisible
    183:183:int describeContents() -> describeContents
    188:196:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    17:17:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.NavigateArrowOptionsCreator -> com.sfmap.api.maps.model.NavigateArrowOptionsCreator:
    7:7:void <init>() -> <init>
    12:28:com.sfmap.api.maps.model.NavigateArrowOptions createFromParcel(android.os.Parcel) -> createFromParcel
    33:33:com.sfmap.api.maps.model.NavigateArrowOptions[] newArray(int) -> newArray
    7:7:java.lang.Object[] newArray(int) -> newArray
    7:7:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.Poi -> com.sfmap.api.maps.model.Poi:
    com.sfmap.api.maps.model.PoiCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.sfmap.api.maps.model.LatLng b -> b
    java.lang.String c -> c
    21:25:void <init>(java.lang.String,com.sfmap.api.maps.model.LatLng,java.lang.String) -> <init>
    33:33:java.lang.String getName() -> getName
    42:42:com.sfmap.api.maps.model.LatLng getCoordinate() -> getCoordinate
    51:51:java.lang.String getPoiId() -> getPoiId
    56:56:int describeContents() -> describeContents
    61:69:boolean equals(java.lang.Object) -> equals
    73:73:java.lang.String toString() -> toString
    78:81:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    15:15:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.PoiCreator -> com.sfmap.api.maps.model.PoiCreator:
    6:6:void <init>() -> <init>
    11:14:com.sfmap.api.maps.model.Poi createFromParcel(android.os.Parcel) -> createFromParcel
    19:19:com.sfmap.api.maps.model.Poi[] newArray(int) -> newArray
    6:6:java.lang.Object[] newArray(int) -> newArray
    6:6:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.Polygon -> com.sfmap.api.maps.model.Polygon:
    com.sfmap.api.mapcore.IPolygonDelegate polygon -> a
    29:31:void <init>(com.sfmap.api.mapcore.IPolygonDelegate) -> <init>
    40:46:void remove() -> remove
    56:60:java.lang.String getId() -> getId
    72:78:void setPoints(java.util.List) -> setPoints
    88:92:java.util.List getPoints() -> getPoints
    104:110:void setStrokeWidth(float) -> setStrokeWidth
    120:124:float getStrokeWidth() -> getStrokeWidth
    136:142:void setStrokeColor(int) -> setStrokeColor
    152:156:int getStrokeColor() -> getStrokeColor
    168:174:void setFillColor(int) -> setFillColor
    184:188:int getFillColor() -> getFillColor
    200:206:void setZIndex(float) -> setZIndex
    216:220:float getZIndex() -> getZIndex
    232:238:void setVisible(boolean) -> setVisible
    248:252:boolean isVisible() -> isVisible
    265:269:boolean contains(com.sfmap.api.maps.model.LatLng) -> contains
    275:286:boolean equals(java.lang.Object) -> equals
    293:296:int hashCode() -> hashCode
com.sfmap.api.maps.model.PolygonOptions -> com.sfmap.api.maps.model.PolygonOptions:
    com.sfmap.api.maps.model.PolygonOptionsCreator CREATOR -> CREATOR
    java.util.List b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    boolean g -> g
    java.lang.String a -> a
    18:31:void <init>() -> <init>
    35:35:int describeContents() -> describeContents
    40:47:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    56:57:com.sfmap.api.maps.model.PolygonOptions add(com.sfmap.api.maps.model.LatLng) -> add
    67:68:com.sfmap.api.maps.model.PolygonOptions add(com.sfmap.api.maps.model.LatLng[]) -> add
    78:84:com.sfmap.api.maps.model.PolygonOptions addAll(java.lang.Iterable) -> addAll
    94:95:com.sfmap.api.maps.model.PolygonOptions strokeWidth(float) -> strokeWidth
    105:106:com.sfmap.api.maps.model.PolygonOptions strokeColor(int) -> strokeColor
    116:117:com.sfmap.api.maps.model.PolygonOptions fillColor(int) -> fillColor
    127:128:com.sfmap.api.maps.model.PolygonOptions zIndex(float) -> zIndex
    138:139:com.sfmap.api.maps.model.PolygonOptions visible(boolean) -> visible
    148:148:java.util.List getPoints() -> getPoints
    157:157:float getStrokeWidth() -> getStrokeWidth
    165:165:int getStrokeColor() -> getStrokeColor
    173:173:int getFillColor() -> getFillColor
    181:181:float getZIndex() -> getZIndex
    189:189:boolean isVisible() -> isVisible
    16:16:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.PolygonOptionsCreator -> com.sfmap.api.maps.model.PolygonOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    7:7:void <init>() -> <init>
    14:35:com.sfmap.api.maps.model.PolygonOptions createFromParcel(android.os.Parcel) -> createFromParcel
    40:40:com.sfmap.api.maps.model.PolygonOptions[] newArray(int) -> newArray
    7:7:java.lang.Object[] newArray(int) -> newArray
    7:7:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.Polyline -> com.sfmap.api.maps.model.Polyline:
    com.sfmap.api.mapcore.IPolylineDelegateDecode polyline -> a
    26:28:void <init>(com.sfmap.api.mapcore.IPolylineDelegateDecode) -> <init>
    37:43:void remove() -> remove
    53:57:java.lang.String getId() -> getId
    67:73:void addPoint(com.sfmap.api.maps.model.LatLng) -> addPoint
    82:88:void setPoints(java.util.List) -> setPoints
    99:103:java.util.List getPoints() -> getPoints
    115:126:void setGeodesic(boolean) -> setGeodesic
    134:134:boolean isGeodesic() -> isGeodesic
    143:144:void setDottedLine(boolean) -> setDottedLine
    152:152:boolean isDottedLine() -> isDottedLine
    163:169:void setWidth(float) -> setWidth
    179:183:float getWidth() -> getWidth
    195:201:void setColor(int) -> setColor
    211:215:int getColor() -> getColor
    227:233:void setZIndex(float) -> setZIndex
    243:247:float getZIndex() -> getZIndex
    259:265:void setVisible(boolean) -> setVisible
    275:279:boolean isVisible() -> isVisible
    285:294:boolean equals(java.lang.Object) -> equals
    302:306:int hashCode() -> hashCode
    317:317:com.sfmap.api.maps.model.LatLng getNearestLatLng(com.sfmap.api.maps.model.LatLng) -> getNearestLatLng
    326:327:void setTransparency(float) -> setTransparency
com.sfmap.api.maps.model.PolylineOptions -> com.sfmap.api.maps.model.PolylineOptions:
    com.sfmap.api.maps.model.PolylineOptionsCreator CREATOR -> CREATOR
    java.util.List points -> b
    float width -> c
    int color -> d
    float zIndex -> e
    boolean isVisible -> f
    java.lang.String a -> a
    com.sfmap.api.maps.model.BitmapDescriptor bitmap -> g
    java.util.List bitmapList -> h
    java.util.List i -> i
    java.util.List customTextureList -> j
    boolean useTexture -> k
    boolean geodesic -> l
    boolean isDottedLine -> m
    boolean n -> n
    18:38:void <init>() -> <init>
    47:48:com.sfmap.api.maps.model.PolylineOptions setUseTexture(boolean) -> setUseTexture
    58:59:com.sfmap.api.maps.model.PolylineOptions setCustomTexture(com.sfmap.api.maps.model.BitmapDescriptor) -> setCustomTexture
    68:68:com.sfmap.api.maps.model.BitmapDescriptor getCustomTexture() -> getCustomTexture
    78:79:com.sfmap.api.maps.model.PolylineOptions setCustomTextureList(java.util.List) -> setCustomTextureList
    88:88:java.util.List getCustomTextureList() -> getCustomTextureList
    98:99:com.sfmap.api.maps.model.PolylineOptions setCustomTextureIndex(java.util.List) -> setCustomTextureIndex
    108:108:java.util.List getCustomTextureIndex() -> getCustomTextureIndex
    118:119:com.sfmap.api.maps.model.PolylineOptions colorValues(java.util.List) -> colorValues
    128:128:java.util.List getColorValues() -> getColorValues
    133:134:com.sfmap.api.maps.model.PolylineOptions useGradient(boolean) -> useGradient
    143:143:boolean isUseGradient() -> isUseGradient
    152:152:boolean isUseTexture() -> isUseTexture
    161:161:boolean isGeodesic() -> isGeodesic
    171:172:com.sfmap.api.maps.model.PolylineOptions add(com.sfmap.api.maps.model.LatLng) -> add
    181:182:com.sfmap.api.maps.model.PolylineOptions add(com.sfmap.api.maps.model.LatLng[]) -> add
    191:197:com.sfmap.api.maps.model.PolylineOptions addAll(java.lang.Iterable) -> addAll
    207:208:com.sfmap.api.maps.model.PolylineOptions width(float) -> width
    217:218:com.sfmap.api.maps.model.PolylineOptions color(int) -> color
    227:228:com.sfmap.api.maps.model.PolylineOptions zIndex(float) -> zIndex
    238:239:com.sfmap.api.maps.model.PolylineOptions visible(boolean) -> visible
    248:249:com.sfmap.api.maps.model.PolylineOptions geodesic(boolean) -> geodesic
    259:260:com.sfmap.api.maps.model.PolylineOptions setDottedLine(boolean) -> setDottedLine
    269:269:boolean isDottedLine() -> isDottedLine
    277:277:java.util.List getPoints() -> getPoints
    285:285:float getWidth() -> getWidth
    293:293:int getColor() -> getColor
    301:301:float getZIndex() -> getZIndex
    309:309:boolean isVisible() -> isVisible
    314:314:int describeContents() -> describeContents
    319:338:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    16:16:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.PolylineOptionsCreator -> com.sfmap.api.maps.model.PolylineOptionsCreator:
    7:7:void <init>() -> <init>
    12:43:com.sfmap.api.maps.model.PolylineOptions createFromParcel(android.os.Parcel) -> createFromParcel
    48:48:com.sfmap.api.maps.model.PolylineOptions[] newArray(int) -> newArray
    7:7:java.lang.Object[] newArray(int) -> newArray
    7:7:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.RuntimeRemoteException -> com.sfmap.api.maps.model.RuntimeRemoteException:
    10:11:void <init>(android.os.RemoteException) -> <init>
com.sfmap.api.maps.model.Text -> com.sfmap.api.maps.model.Text:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    com.sfmap.api.mapcore.ITextDelegate a -> a
    39:41:void <init>(com.sfmap.api.mapcore.ITextDelegate) -> <init>
    50:56:void remove() -> remove
    65:73:void destroy() -> destroy
    83:87:java.lang.String getId() -> getId
    99:105:void setPosition(com.sfmap.api.maps.model.LatLng) -> setPosition
    115:119:com.sfmap.api.maps.model.LatLng getPosition() -> getPosition
    131:137:void setText(java.lang.String) -> setText
    147:151:java.lang.String getText() -> getText
    163:169:void setBackgroundColor(int) -> setBackgroundColor
    179:183:int getBackgroundColor() -> getBackgroundColor
    195:201:void setFontColor(int) -> setFontColor
    211:215:int getFontColor() -> getFontColor
    227:233:void setFontSize(int) -> setFontSize
    243:247:int getFontSize() -> getFontSize
    259:265:void setTypeface(android.graphics.Typeface) -> setTypeface
    275:279:android.graphics.Typeface getTypeface() -> getTypeface
    292:298:void setAlign(int,int) -> setAlign
    308:312:int getAlignX() -> getAlignX
    324:328:int getAlignY() -> getAlignY
    340:346:void setVisible(boolean) -> setVisible
    356:360:boolean isVisible() -> isVisible
    368:375:boolean equals(java.lang.Object) -> equals
    381:381:int hashCode() -> hashCode
    386:387:void setObject(java.lang.Object) -> setObject
    391:391:java.lang.Object getObject() -> getObject
    402:408:void setRotate(float) -> setRotate
    416:416:float getRotate() -> getRotate
    425:426:void setZIndex(float) -> setZIndex
    434:434:float getZIndex() -> getZIndex
com.sfmap.api.maps.model.TextOptions -> com.sfmap.api.maps.model.TextOptions:
    com.sfmap.api.maps.model.TextOptionsCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.sfmap.api.maps.model.LatLng position -> b
    java.lang.String text -> c
    android.graphics.Typeface typeface -> d
    float rotate -> e
    int alignX -> f
    int alignY -> g
    int backgroundColor -> h
    int fontColor -> i
    java.lang.Object object -> j
    int fontSize -> k
    float zIndex -> l
    boolean visible -> m
    11:27:void <init>() -> <init>
    31:55:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    59:59:int describeContents() -> describeContents
    69:70:com.sfmap.api.maps.model.TextOptions position(com.sfmap.api.maps.model.LatLng) -> position
    80:81:com.sfmap.api.maps.model.TextOptions text(java.lang.String) -> text
    91:94:com.sfmap.api.maps.model.TextOptions typeface(android.graphics.Typeface) -> typeface
    104:105:com.sfmap.api.maps.model.TextOptions visible(boolean) -> visible
    115:116:com.sfmap.api.maps.model.TextOptions zIndex(float) -> zIndex
    126:127:com.sfmap.api.maps.model.TextOptions rotate(float) -> rotate
    138:140:com.sfmap.api.maps.model.TextOptions align(int,int) -> align
    150:151:com.sfmap.api.maps.model.TextOptions backgroundColor(int) -> backgroundColor
    161:162:com.sfmap.api.maps.model.TextOptions setObject(java.lang.Object) -> setObject
    172:173:com.sfmap.api.maps.model.TextOptions fontColor(int) -> fontColor
    183:184:com.sfmap.api.maps.model.TextOptions fontSize(int) -> fontSize
    192:192:com.sfmap.api.maps.model.LatLng getPosition() -> getPosition
    201:201:java.lang.String getText() -> getText
    210:210:android.graphics.Typeface getTypeface() -> getTypeface
    219:219:float getRotate() -> getRotate
    228:228:int getAlignX() -> getAlignX
    237:237:int getAlignY() -> getAlignY
    246:246:int getBackgroundColor() -> getBackgroundColor
    255:255:int getFontColor() -> getFontColor
    264:264:java.lang.Object getObject() -> getObject
    273:273:int getFontSize() -> getFontSize
    282:282:float getZIndex() -> getZIndex
    291:291:boolean isVisible() -> isVisible
    14:14:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.TextOptionsCreator -> com.sfmap.api.maps.model.TextOptionsCreator:
    8:8:void <init>() -> <init>
    13:39:com.sfmap.api.maps.model.TextOptions createFromParcel(android.os.Parcel) -> createFromParcel
    44:44:com.sfmap.api.maps.model.TextOptions[] newArray(int) -> newArray
    8:8:java.lang.Object[] newArray(int) -> newArray
    8:8:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.Tile -> com.sfmap.api.maps.model.Tile:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int a -> a
    int width -> width
    int height -> height
    byte[] data -> data
    43:48:void <init>(int,int,int,byte[]) -> <init>
    58:59:void <init>(int,int,byte[]) -> <init>
    63:63:int describeContents() -> describeContents
    68:72:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    9:9:void <init>(int,int,int,byte[],com.sfmap.api.maps.model.Tile$1) -> <init>
    12:12:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.Tile$1 -> com.sfmap.api.maps.model.Tile$1:
    12:12:void <init>() -> <init>
    16:20:com.sfmap.api.maps.model.Tile createFromParcel(android.os.Parcel) -> a
    25:25:com.sfmap.api.maps.model.Tile[] newArray(int) -> a
    12:12:java.lang.Object[] newArray(int) -> newArray
    12:12:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.TileOverlay -> com.sfmap.api.maps.model.TileOverlay:
    com.sfmap.api.mapcore.ITileOverlayDelegate tileOverlayDelegate -> a
    20:22:void <init>(com.sfmap.api.mapcore.ITileOverlayDelegate) -> <init>
    29:30:void remove() -> remove
    37:38:void clearTileCache() -> clearTileCache
    46:46:java.lang.String getId() -> getId
    55:56:void setZIndex(float) -> setZIndex
    64:64:float getZIndex() -> getZIndex
    73:74:void setVisible(boolean) -> setVisible
    82:82:boolean isVisible() -> isVisible
    87:90:boolean equals(java.lang.Object) -> equals
    95:95:int hashCode() -> hashCode
com.sfmap.api.maps.model.TileOverlayOptions -> com.sfmap.api.maps.model.TileOverlayOptions:
    com.sfmap.api.maps.model.TileOverlayOptionsCreator CREATOR -> CREATOR
    int a -> a
    com.sfmap.api.maps.model.TileProvider tileProvider -> b
    boolean visible -> c
    float zIndex -> d
    int kiloBytes -> e
    int diskCacheSize -> f
    java.lang.String diskCacheDir -> g
    boolean memoryCacheEnabled -> h
    boolean diskCacheEnabled -> i
    16:30:void <init>() -> <init>
    16:38:void <init>(int,android.os.IBinder,boolean,float) -> <init>
    42:42:int describeContents() -> describeContents
    47:56:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    65:67:com.sfmap.api.maps.model.TileOverlayOptions tileProvider(com.sfmap.api.maps.model.TileProvider) -> tileProvider
    77:78:com.sfmap.api.maps.model.TileOverlayOptions zIndex(float) -> zIndex
    88:89:com.sfmap.api.maps.model.TileOverlayOptions visible(boolean) -> visible
    99:100:com.sfmap.api.maps.model.TileOverlayOptions memCacheSize(int) -> memCacheSize
    110:111:com.sfmap.api.maps.model.TileOverlayOptions diskCacheSize(int) -> diskCacheSize
    121:122:com.sfmap.api.maps.model.TileOverlayOptions diskCacheDir(java.lang.String) -> diskCacheDir
    132:133:com.sfmap.api.maps.model.TileOverlayOptions memoryCacheEnabled(boolean) -> memoryCacheEnabled
    143:144:com.sfmap.api.maps.model.TileOverlayOptions diskCacheEnabled(boolean) -> diskCacheEnabled
    153:153:com.sfmap.api.maps.model.TileProvider getTileProvider() -> getTileProvider
    162:162:float getZIndex() -> getZIndex
    171:171:boolean isVisible() -> isVisible
    180:180:int getMemCacheSize() -> getMemCacheSize
    189:189:int getDiskCacheSize() -> getDiskCacheSize
    198:198:java.lang.String getDiskCacheDir() -> getDiskCacheDir
    207:207:boolean getMemoryCacheEnabled() -> getMemoryCacheEnabled
    216:216:boolean getDiskCacheEnabled() -> getDiskCacheEnabled
    13:13:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.TileOverlayOptionsCreator -> com.sfmap.api.maps.model.TileOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    6:6:void <init>() -> <init>
    13:31:com.sfmap.api.maps.model.TileOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    36:36:com.sfmap.api.maps.model.TileOverlayOptions[] newArray(int) -> newArray
    6:6:java.lang.Object[] newArray(int) -> newArray
    6:6:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.TileProjection -> com.sfmap.api.maps.model.TileProjection:
    com.sfmap.api.maps.model.TileProjection CREATOR -> CREATOR
    int offsetX -> offsetX
    int offsetY -> offsetY
    int minX -> minX
    int maxX -> maxX
    int minY -> minY
    int maxY -> maxY
    49:56:void <init>(int,int,int,int,int,int) -> <init>
    60:60:int describeContents() -> describeContents
    65:71:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    12:12:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.TileProjectionCreator -> com.sfmap.api.maps.model.TileProjectionCreator:
    6:6:void <init>() -> <init>
    11:12:com.sfmap.api.maps.model.TileProjection createFromParcel(android.os.Parcel) -> createFromParcel
    17:17:com.sfmap.api.maps.model.TileProjection[] newArray(int) -> newArray
    6:6:java.lang.Object[] newArray(int) -> newArray
    6:6:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.TileProvider -> com.sfmap.api.maps.model.TileProvider:
    com.sfmap.api.maps.model.Tile NO_TILE -> NO_TILE
    com.sfmap.api.maps.model.Tile getTile(int,int,int) -> getTile
    int getTileWidth() -> getTileWidth
    int getTileHeight() -> getTileHeight
    5:5:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.TmcBean -> com.sfmap.api.maps.model.b:
    java.lang.String mesh -> a
    java.lang.String appPackageName -> b
    java.lang.String appCerSha1 -> c
    18:19:void setMesh(java.lang.String) -> a
    22:23:void <init>() -> <init>
    30:31:void setAppPackageName(java.lang.String) -> b
    38:39:void setAppCerSha1(java.lang.String) -> c
    43:52:java.lang.String toString() -> toString
com.sfmap.api.maps.model.UrlTileProvider -> com.sfmap.api.maps.model.UrlTileProvider:
    int width -> a
    int height -> b
    24:27:void <init>(int,int) -> <init>
    java.net.URL getTileUrl(int,int,int) -> getTileUrl
    46:56:com.sfmap.api.maps.model.Tile getTile(int,int,int) -> getTile
    61:63:byte[] readByteStream(java.io.InputStream) -> a
    79:91:long copyByteStream(java.io.InputStream,java.io.OutputStream) -> a
    100:100:int getTileWidth() -> getTileWidth
    108:108:int getTileHeight() -> getTileHeight
com.sfmap.api.maps.model.VisibleRegion -> com.sfmap.api.maps.model.VisibleRegion:
    com.sfmap.api.maps.model.VisibleRegionCreator CREATOR -> CREATOR
    int a -> a
    com.sfmap.api.maps.model.LatLng nearLeft -> nearLeft
    com.sfmap.api.maps.model.LatLng nearRight -> nearRight
    com.sfmap.api.maps.model.LatLng farLeft -> farLeft
    com.sfmap.api.maps.model.LatLng farRight -> farRight
    com.sfmap.api.maps.model.LatLngBounds latLngBounds -> latLngBounds
    37:44:void <init>(int,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLngBounds) -> <init>
    56:57:void <init>(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLngBounds) -> <init>
    61:62:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    66:66:int describeContents() -> describeContents
    71:71:int hashCode() -> hashCode
    76:76:int a() -> a
    81:89:boolean equals(java.lang.Object) -> equals
    94:99:java.lang.String toString() -> toString
    13:13:void <clinit>() -> <clinit>
com.sfmap.api.maps.model.VisibleRegionCreator -> com.sfmap.api.maps.model.VisibleRegionCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    7:7:void <init>() -> <init>
    14:34:com.sfmap.api.maps.model.VisibleRegion createFromParcel(android.os.Parcel) -> createFromParcel
    39:39:com.sfmap.api.maps.model.VisibleRegion[] newArray(int) -> newArray
    44:50:void a(com.sfmap.api.maps.model.VisibleRegion,android.os.Parcel,int) -> a
    7:7:java.lang.Object[] newArray(int) -> newArray
    7:7:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.model.WeightedLatLng -> com.sfmap.api.maps.model.WeightedLatLng:
    double DEFAULT_INTENSITY -> DEFAULT_INTENSITY
    com.sfmap.mapcore.DPoint point -> a
    double intensity -> intensity
    com.sfmap.api.maps.model.LatLng latLng -> latLng
    31:42:void <init>(com.sfmap.api.maps.model.LatLng,double) -> <init>
    50:51:void <init>(com.sfmap.api.maps.model.LatLng) -> <init>
    55:55:com.sfmap.mapcore.DPoint getPoint() -> getPoint
com.sfmap.api.maps.model.c -> com.sfmap.api.maps.model.c:
    com.sfmap.api.mapcore.util.Bounds bounds -> a
    int b -> b
    java.util.List data -> c
    java.util.List d -> d
    19:20:void <init>(com.sfmap.api.mapcore.util.Bounds) -> <init>
    24:25:void <init>(double,double,double,double,int) -> <init>
    15:31:void <init>(com.sfmap.api.mapcore.util.Bounds,int) -> <init>
    35:39:void a(com.sfmap.api.maps.model.WeightedLatLng) -> a
    43:67:void a(double,double,com.sfmap.api.maps.model.WeightedLatLng) -> a
    71:82:void a() -> a
    86:88:java.util.Collection a(com.sfmap.api.mapcore.util.Bounds) -> a
    93:116:void a(com.sfmap.api.mapcore.util.Bounds,java.util.Collection) -> a
com.sfmap.api.maps.offlinemap.City -> com.sfmap.api.maps.offlinemap.City:
    java.lang.String city -> a
    java.lang.String code -> b
    java.lang.String jianpin -> c
    java.lang.String pinyin -> d
    java.lang.String adcode -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    36:36:void <init>() -> <init>
    44:45:void setCity(java.lang.String) -> setCity
    53:53:java.lang.String getCity() -> getCity
    62:63:void setCode(java.lang.String) -> setCode
    71:71:java.lang.String getCode() -> getCode
    80:80:java.lang.String getJianpin() -> getJianpin
    89:90:void setJianpin(java.lang.String) -> setJianpin
    98:98:java.lang.String getPinyin() -> getPinyin
    107:108:void setPinyin(java.lang.String) -> setPinyin
    116:116:java.lang.String getAdcode() -> getAdcode
    125:126:void setAdcode(java.lang.String) -> setAdcode
    130:130:int describeContents() -> describeContents
    135:141:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    144:151:void <init>(android.os.Parcel) -> <init>
    153:153:void <clinit>() -> <clinit>
com.sfmap.api.maps.offlinemap.CityCreator -> com.sfmap.api.maps.offlinemap.a:
    6:6:void <init>() -> <init>
    11:11:com.sfmap.api.maps.offlinemap.City createFromParcel(android.os.Parcel) -> a
    16:16:com.sfmap.api.maps.offlinemap.City[] newArray(int) -> a
    6:6:java.lang.Object[] newArray(int) -> newArray
    6:6:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.offlinemap.OfflineMapCity -> com.sfmap.api.maps.offlinemap.OfflineMapCity:
    java.lang.String url -> a
    long size -> b
    int state -> c
    java.lang.String version -> d
    int code -> e
    java.lang.String md5 -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    15:36:void <init>() -> <init>
    44:44:java.lang.String getUrl() -> getUrl
    53:54:void setUrl(java.lang.String) -> setUrl
    62:62:long getSize() -> getSize
    71:72:void setSize(long) -> setSize
    80:80:int getState() -> getState
    89:90:void setState(int) -> setState
    98:98:java.lang.String getVersion() -> getVersion
    107:108:void setVersion(java.lang.String) -> setVersion
    116:116:int getcompleteCode() -> getcompleteCode
    124:124:java.lang.String getMd5() -> getMd5
    132:133:void setMd5(java.lang.String) -> setMd5
    141:142:void setCompleteCode(int) -> setCompleteCode
    146:146:int describeContents() -> describeContents
    151:158:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    15:169:void <init>(android.os.Parcel) -> <init>
    171:171:void <clinit>() -> <clinit>
com.sfmap.api.maps.offlinemap.OfflineMapCityCreator -> com.sfmap.api.maps.offlinemap.b:
    6:6:void <init>() -> <init>
    11:11:com.sfmap.api.maps.offlinemap.OfflineMapCity createFromParcel(android.os.Parcel) -> a
    16:16:com.sfmap.api.maps.offlinemap.OfflineMapCity[] newArray(int) -> a
    6:6:java.lang.Object[] newArray(int) -> newArray
    6:6:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.offlinemap.OfflineMapManager -> com.sfmap.api.maps.offlinemap.OfflineMapManager:
    android.content.Context context -> c
    com.sfmap.api.maps.MapController map -> d
    com.sfmap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener listener -> e
    android.os.Handler handler1 -> f
    android.os.Handler handler -> g
    com.sfmap.api.mapcore.util.OfflineMapDownloadList offlineMapDownloadList -> a
    com.sfmap.api.mapcore.util.OfflineDownloadManager downloadManager -> b
    32:46:void <init>(android.content.Context,com.sfmap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener) -> <init>
    32:59:void <init>(android.content.Context,com.sfmap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener,com.sfmap.api.maps.MapController) -> <init>
    62:129:void init(android.content.Context) -> a
    140:141:void downloadByCityName(java.lang.String) -> downloadByCityName
    153:174:void downloadByProvinceName(java.lang.String) -> downloadByProvinceName
    183:203:void remove(java.lang.String) -> remove
    211:211:java.util.ArrayList getOfflineMapProvinceList() -> getOfflineMapProvinceList
    231:231:com.sfmap.api.maps.offlinemap.OfflineMapCity getItemByCityName(java.lang.String) -> getItemByCityName
    242:242:com.sfmap.api.maps.offlinemap.OfflineMapProvince getItemByProvinceName(java.lang.String) -> getItemByProvinceName
    251:251:java.util.ArrayList getOfflineMapCityList() -> getOfflineMapCityList
    260:260:java.util.ArrayList getDownloadingCityList() -> getDownloadingCityList
    269:269:java.util.ArrayList getDownloadingProvinceList() -> getDownloadingProvinceList
    278:278:java.util.ArrayList getDownloadOfflineMapCityList() -> getDownloadOfflineMapCityList
    287:287:java.util.ArrayList getDownloadOfflineMapProvinceList() -> getDownloadOfflineMapProvinceList
    292:293:void updateOfflineMapByName(java.lang.String,java.lang.String) -> a
    304:305:void updateOfflineCityByName(java.lang.String) -> updateOfflineCityByName
    315:316:void updateOfflineMapProvinceByName(java.lang.String) -> updateOfflineMapProvinceByName
    320:323:void a() -> a
    329:329:void restart() -> restart
    335:336:void stop() -> stop
    343:344:void pause() -> pause
    350:361:void destroy() -> destroy
    364:365:void b() -> b
    19:19:com.sfmap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener access$000(com.sfmap.api.maps.offlinemap.OfflineMapManager) -> a
    19:19:android.os.Handler access$100(com.sfmap.api.maps.offlinemap.OfflineMapManager) -> b
    19:19:com.sfmap.api.maps.MapController access$200(com.sfmap.api.maps.offlinemap.OfflineMapManager) -> c
com.sfmap.api.maps.offlinemap.OfflineMapManager$1 -> com.sfmap.api.maps.offlinemap.OfflineMapManager$1:
    com.sfmap.api.maps.offlinemap.OfflineMapManager this$0 -> a
    68:68:void <init>(com.sfmap.api.maps.offlinemap.OfflineMapManager) -> <init>
    71:84:void updateState(com.sfmap.api.mapcore.util.CityObject) -> a
    87:104:void postCheckUpdateRes(com.sfmap.api.mapcore.util.CityObject) -> b
    107:116:void c(com.sfmap.api.mapcore.util.CityObject) -> c
    120:127:void reLoadCityList() -> a
com.sfmap.api.maps.offlinemap.OfflineMapManager$1$1 -> com.sfmap.api.maps.offlinemap.OfflineMapManager$1$1:
    com.sfmap.api.mapcore.util.CityObject val$city -> a
    com.sfmap.api.maps.offlinemap.OfflineMapManager$1 this$1 -> b
    72:72:void <init>(com.sfmap.api.maps.offlinemap.OfflineMapManager$1,com.sfmap.api.mapcore.util.CityObject) -> <init>
    74:75:void run() -> run
com.sfmap.api.maps.offlinemap.OfflineMapManager$1$2 -> com.sfmap.api.maps.offlinemap.OfflineMapManager$1$2:
    com.sfmap.api.mapcore.util.CityObject val$cityObject -> a
    com.sfmap.api.maps.offlinemap.OfflineMapManager$1 this$1 -> b
    88:88:void <init>(com.sfmap.api.maps.offlinemap.OfflineMapManager$1,com.sfmap.api.mapcore.util.CityObject) -> <init>
    90:94:void run() -> run
com.sfmap.api.maps.offlinemap.OfflineMapManager$1$3 -> com.sfmap.api.maps.offlinemap.OfflineMapManager$1$3:
    com.sfmap.api.maps.offlinemap.OfflineMapManager$1 this$1 -> a
    98:98:void <init>(com.sfmap.api.maps.offlinemap.OfflineMapManager$1) -> <init>
    100:101:void run() -> run
com.sfmap.api.maps.offlinemap.OfflineMapManager$1$4 -> com.sfmap.api.maps.offlinemap.OfflineMapManager$1$4:
    com.sfmap.api.mapcore.util.CityObject val$city -> a
    com.sfmap.api.maps.offlinemap.OfflineMapManager$1 this$1 -> b
    108:108:void <init>(com.sfmap.api.maps.offlinemap.OfflineMapManager$1,com.sfmap.api.mapcore.util.CityObject) -> <init>
    110:114:void run() -> run
com.sfmap.api.maps.offlinemap.OfflineMapManager$1$5 -> com.sfmap.api.maps.offlinemap.OfflineMapManager$1$5:
    com.sfmap.api.maps.offlinemap.OfflineMapManager$1 this$1 -> a
    122:122:void <init>(com.sfmap.api.maps.offlinemap.OfflineMapManager$1) -> <init>
    124:125:void run() -> run
com.sfmap.api.maps.offlinemap.OfflineMapManager$2 -> com.sfmap.api.maps.offlinemap.OfflineMapManager$2:
    java.lang.String val$cityName -> a
    com.sfmap.api.maps.offlinemap.OfflineMapManager this$0 -> b
    162:162:void <init>(com.sfmap.api.maps.offlinemap.OfflineMapManager,java.lang.String) -> <init>
    164:165:void run() -> run
com.sfmap.api.maps.offlinemap.OfflineMapManager$3 -> com.sfmap.api.maps.offlinemap.OfflineMapManager$3:
    java.lang.String val$cityname -> a
    com.sfmap.api.maps.offlinemap.OfflineMapManager this$0 -> b
    196:196:void <init>(com.sfmap.api.maps.offlinemap.OfflineMapManager,java.lang.String) -> <init>
    198:199:void run() -> run
com.sfmap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener -> com.sfmap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener:
    void onDownload(int,int,java.lang.String) -> onDownload
    void onCheckUpdate(boolean,java.lang.String) -> onCheckUpdate
    void onRemove(boolean,java.lang.String,java.lang.String) -> onRemove
    void reloadCityList() -> reloadCityList
com.sfmap.api.maps.offlinemap.OfflineMapProvince -> com.sfmap.api.maps.offlinemap.OfflineMapProvince:
    java.lang.String url -> a
    int state -> b
    long size -> c
    java.lang.String version -> d
    int code -> e
    java.util.ArrayList cityList -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    20:32:void <init>() -> <init>
    40:40:java.lang.String getUrl() -> getUrl
    49:50:void setUrl(java.lang.String) -> setUrl
    59:59:int getState() -> getState
    68:69:void setState(int) -> setState
    78:78:long getSize() -> getSize
    88:89:void setSize(long) -> setSize
    98:98:java.lang.String getVersion() -> getVersion
    108:109:void setVersion(java.lang.String) -> setVersion
    118:118:int getcompleteCode() -> getcompleteCode
    128:129:void setCompleteCode(int) -> setCompleteCode
    133:133:int describeContents() -> describeContents
    138:145:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    153:156:java.util.ArrayList getCityList() -> getCityList
    165:166:void setCityList(java.util.ArrayList) -> setCityList
    20:177:void <init>(android.os.Parcel) -> <init>
    179:179:void <clinit>() -> <clinit>
com.sfmap.api.maps.offlinemap.OfflineMapProvinceCreator -> com.sfmap.api.maps.offlinemap.c:
    6:6:void <init>() -> <init>
    11:11:com.sfmap.api.maps.offlinemap.OfflineMapProvince createFromParcel(android.os.Parcel) -> a
    16:16:com.sfmap.api.maps.offlinemap.OfflineMapProvince[] newArray(int) -> a
    6:6:java.lang.Object[] newArray(int) -> newArray
    6:6:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.offlinemap.OfflineMapStatus -> com.sfmap.api.maps.offlinemap.OfflineMapStatus:
    int CHECKUPDATES -> CHECKUPDATES
    int ERROR -> ERROR
    int STOP -> STOP
    int LOADING -> LOADING
    int UNZIP -> UNZIP
    int WAITING -> WAITING
    int PAUSE -> PAUSE
    int SUCCESS -> SUCCESS
    int NEW_VERSION -> NEW_VERSION
    int EXCEPTION_NETWORK_LOADING -> EXCEPTION_NETWORK_LOADING
    int EXCEPTION_AUTH -> EXCEPTION_AUTH
    int EXCEPTION_SDCARD -> EXCEPTION_SDCARD
    int EXCEPTION_MD5 -> EXCEPTION_MD5
    int START_DOWNLOAD_FAILD -> START_DOWNLOAD_FAILD
    10:10:void <init>() -> <init>
com.sfmap.api.maps.offlinemap.Province -> com.sfmap.api.maps.offlinemap.Province:
    java.lang.String provinceName -> a
    java.lang.String jianpin -> b
    java.lang.String pinyin -> c
    java.lang.String provinceCode -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    32:32:void <init>() -> <init>
    40:40:java.lang.String getProvinceName() -> getProvinceName
    50:50:java.lang.String getJianpin() -> getJianpin
    59:59:java.lang.String getPinyin() -> getPinyin
    69:70:void setProvinceName(java.lang.String) -> setProvinceName
    79:80:void setJianpin(java.lang.String) -> setJianpin
    89:90:void setPinyin(java.lang.String) -> setPinyin
    99:100:void setProvinceCode(java.lang.String) -> setProvinceCode
    109:109:java.lang.String getProvinceCode() -> getProvinceCode
    114:114:int describeContents() -> describeContents
    119:123:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    126:131:void <init>(android.os.Parcel) -> <init>
    133:133:void <clinit>() -> <clinit>
com.sfmap.api.maps.offlinemap.ProvinceCreator -> com.sfmap.api.maps.offlinemap.d:
    6:6:void <init>() -> <init>
    11:11:com.sfmap.api.maps.offlinemap.Province createFromParcel(android.os.Parcel) -> a
    16:16:com.sfmap.api.maps.offlinemap.Province[] newArray(int) -> a
    6:6:java.lang.Object[] newArray(int) -> newArray
    6:6:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.sfmap.api.maps.overlay.BusLineOverlay -> com.sfmap.api.maps.overlay.BusLineOverlay:
    com.sfmap.api.services.busline.BusLineItem buslineItem -> a
    com.sfmap.api.maps.MapController lmap -> b
    java.util.ArrayList markers -> c
    com.sfmap.api.maps.model.Polyline polyline -> d
    java.util.List e -> e
    com.sfmap.api.maps.model.BitmapDescriptor startBitmap -> f
    com.sfmap.api.maps.model.BitmapDescriptor endBitmap -> g
    com.sfmap.api.maps.model.BitmapDescriptor busBitmap -> h
    com.sfmap.api.maps.model.BitmapDescriptor roadBitmap -> i
    android.content.Context context -> j
    44:68:void <init>(android.content.Context,com.sfmap.api.maps.MapController,com.sfmap.api.services.busline.BusLineItem) -> <init>
    77:106:void addToMap() -> addToMap
    113:127:void removeFromMap() -> removeFromMap
    131:150:void a() -> a
    157:173:void zoomToSpan() -> zoomToSpan
    177:182:com.sfmap.api.maps.model.LatLngBounds a(java.util.List) -> a
    187:201:com.sfmap.api.maps.model.MarkerOptions a(int) -> a
    209:212:com.sfmap.api.maps.model.BitmapDescriptor getStartBitmapDescriptor() -> getStartBitmapDescriptor
    220:223:com.sfmap.api.maps.model.BitmapDescriptor getEndBitmapDescriptor() -> getEndBitmapDescriptor
    231:234:com.sfmap.api.maps.model.BitmapDescriptor getBusBitmapDescriptor() -> getBusBitmapDescriptor
    242:242:boolean isUserTexture() -> isUserTexture
    247:250:com.sfmap.api.maps.model.BitmapDescriptor getRoadBitmapDescriptor() -> getRoadBitmapDescriptor
    259:259:java.lang.String getTitle(int) -> getTitle
    269:269:java.lang.String getSnippet(int) -> getSnippet
    279:284:int getBusStationIndex(com.sfmap.api.maps.model.Marker) -> getBusStationIndex
    294:297:com.sfmap.api.services.busline.BusStationItem getBusStationItem(int) -> getBusStationItem
    302:302:int getBusColor() -> getBusColor
    307:307:float getBuslineWidth() -> getBuslineWidth
    312:355:com.sfmap.api.maps.model.BitmapDescriptor getBitmap(java.lang.String) -> a
com.sfmap.api.maps.overlay.BusRouteOverlay -> com.sfmap.api.maps.overlay.BusRouteOverlay:
    com.sfmap.api.services.route.BusPath busPath -> a
    com.sfmap.api.maps.model.LatLng latLng -> b
    37:42:void <init>(android.content.Context,com.sfmap.api.maps.MapController,com.sfmap.api.services.route.BusPath,com.sfmap.api.services.core.LatLonPoint,com.sfmap.api.services.core.LatLonPoint) -> <init>
    51:94:void addToMap() -> addToMap
    98:129:void a(com.sfmap.api.services.route.BusStep) -> a
    133:134:void addPoints(com.sfmap.api.services.route.RouteBusLineItem) -> a
    138:144:void addPointList(java.util.List) -> a
    148:151:void a(com.sfmap.api.maps.model.LatLng,java.lang.String,java.lang.String) -> a
    155:164:void b(com.sfmap.api.services.route.RouteBusLineItem) -> b
    168:174:void drawLineArrow(com.sfmap.api.services.route.BusStep,com.sfmap.api.services.route.BusStep) -> a
    178:185:void busLineToBusLine(com.sfmap.api.services.route.BusStep,com.sfmap.api.services.route.BusStep) -> b
    189:194:void busLineToWalkLine(com.sfmap.api.services.route.BusStep,com.sfmap.api.services.route.BusStep) -> c
    198:203:void walkLineToBusLine(com.sfmap.api.services.route.BusStep) -> b
    207:207:com.sfmap.api.services.core.LatLonPoint getFirstWalkPoint(com.sfmap.api.services.route.BusStep) -> c
    212:216:void addPolyLine(com.sfmap.api.services.core.LatLonPoint,com.sfmap.api.services.core.LatLonPoint) -> a
    220:222:void addPolyLine(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng) -> a
    226:228:void b(java.util.List) -> b
    232:236:java.lang.String c(java.util.List) -> c
    241:243:void drawLineArrow(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng) -> drawLineArrow
    247:247:java.lang.String c(com.sfmap.api.services.route.RouteBusLineItem) -> c
    252:255:com.sfmap.api.services.core.LatLonPoint getLastWalkPoint(com.sfmap.api.services.route.BusStep) -> d
    260:262:com.sfmap.api.services.core.LatLonPoint getLastBusPoint(com.sfmap.api.services.route.BusStep) -> e
    267:268:com.sfmap.api.services.core.LatLonPoint getFirstBusPoint(com.sfmap.api.services.route.BusStep) -> f
    21:21:void setNodeIconVisibility(boolean) -> setNodeIconVisibility
    21:21:void zoomToSpan() -> zoomToSpan
    21:21:void removeFromMap() -> removeFromMap
com.sfmap.api.maps.overlay.DrivingRouteOverlay -> com.sfmap.api.maps.overlay.DrivingRouteOverlay:
    com.sfmap.api.services.route.DrivePath drivePath -> a
    java.util.List pointList -> b
    java.util.List markerList -> c
    boolean d -> d
    android.content.Context context -> e
    com.sfmap.api.maps.model.PolylineOptions busLineOptions -> f
    48:50:void <init>(android.content.Context,com.sfmap.api.maps.MapController,com.sfmap.api.services.route.DrivePath,com.sfmap.api.services.core.LatLonPoint,com.sfmap.api.services.core.LatLonPoint) -> <init>
    33:70:void <init>(android.content.Context,com.sfmap.api.maps.MapController,com.sfmap.api.services.route.DrivePath,com.sfmap.api.services.core.LatLonPoint,com.sfmap.api.services.core.LatLonPoint,java.util.List) -> <init>
    77:103:void addToMap() -> addToMap
    107:111:void a() -> a
    115:116:void b() -> b
    120:120:com.sfmap.api.services.core.LatLonPoint a(com.sfmap.api.services.route.DriveStep) -> a
    125:126:com.sfmap.api.services.core.LatLonPoint getLastPoint(com.sfmap.api.services.route.DriveStep) -> b
    131:132:void a(com.sfmap.api.services.core.LatLonPoint,com.sfmap.api.maps.model.LatLng) -> a
    136:137:void a(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng) -> a
    141:142:void c(com.sfmap.api.services.route.DriveStep) -> c
    146:165:void c() -> c
    169:177:com.sfmap.api.maps.model.LatLngBounds getLatLngBounds() -> getLatLngBounds
    188:200:void setThroughPointIconVisibility(boolean) -> setThroughPointIconVisibility
    204:244:com.sfmap.api.maps.model.BitmapDescriptor d() -> d
    254:268:void removeFromMap() -> removeFromMap
    28:28:void setNodeIconVisibility(boolean) -> setNodeIconVisibility
    28:28:void zoomToSpan() -> zoomToSpan
com.sfmap.api.maps.overlay.MapServicesUtil -> com.sfmap.api.maps.overlay.a:
    int a -> a
    14:14:com.sfmap.api.maps.model.LatLng toLatLng(com.sfmap.api.services.core.LatLonPoint) -> a
    19:25:java.util.ArrayList clone(java.util.List) -> a
    10:10:void <clinit>() -> <clinit>
com.sfmap.api.maps.overlay.PoiOverlay -> com.sfmap.api.maps.overlay.PoiOverlay:
    java.util.List poiItemList -> a
    com.sfmap.api.maps.MapController map -> b
    java.util.ArrayList markers -> c
    22:33:void <init>(com.sfmap.api.maps.MapController,java.util.List) -> <init>
    42:53:void addToMap() -> addToMap
    60:63:void removeFromMap() -> removeFromMap
    72:93:void zoomToSpan() -> zoomToSpan
    97:102:com.sfmap.api.maps.model.LatLngBounds a() -> a
    107:107:com.sfmap.api.maps.model.MarkerOptions a(int) -> a
    117:117:com.sfmap.api.maps.model.BitmapDescriptor getBitmapDescriptor(int) -> getBitmapDescriptor
    127:127:java.lang.String getTitle(int) -> getTitle
    137:137:java.lang.String getSnippet(int) -> getSnippet
    147:152:int getPoiIndex(com.sfmap.api.maps.model.Marker) -> getPoiIndex
    162:165:com.sfmap.api.services.poisearch.PoiItem getPoiItem(int) -> getPoiItem
com.sfmap.api.maps.overlay.RouteOverlay -> com.sfmap.api.maps.overlay.b:
    java.util.List stationMarkers -> stationMarkers
    java.util.List allPolyLines -> allPolyLines
    com.sfmap.api.maps.model.Marker startMarker -> startMarker
    com.sfmap.api.maps.model.Marker endMarker -> endMarker
    com.sfmap.api.maps.model.LatLng startPoint -> startPoint
    com.sfmap.api.maps.model.LatLng endPoint -> endPoint
    com.sfmap.api.maps.MapController map -> map
    android.content.Context context -> a
    android.graphics.Bitmap startBitmap -> b
    android.graphics.Bitmap endBitmap -> c
    android.graphics.Bitmap busBitmap -> d
    android.graphics.Bitmap manBitmap -> e
    android.graphics.Bitmap carBitmap -> f
    boolean nodeIconVisible -> nodeIconVisible
    28:46:void <init>(android.content.Context) -> <init>
    53:70:void removeFromMap() -> removeFromMap
    74:99:void a() -> a
    107:107:com.sfmap.api.maps.model.BitmapDescriptor getStartBitmapDescriptor() -> getStartBitmapDescriptor
    116:116:com.sfmap.api.maps.model.BitmapDescriptor getEndBitmapDescriptor() -> getEndBitmapDescriptor
    125:125:com.sfmap.api.maps.model.BitmapDescriptor getBusBitmapDescriptor() -> getBusBitmapDescriptor
    134:134:com.sfmap.api.maps.model.BitmapDescriptor getWalkBitmapDescriptor() -> getWalkBitmapDescriptor
    143:143:com.sfmap.api.maps.model.BitmapDescriptor getDriveBitmapDescriptor() -> getDriveBitmapDescriptor
    148:186:com.sfmap.api.maps.model.BitmapDescriptor initBitmap(android.graphics.Bitmap,java.lang.String) -> a
    191:197:void addStartAndEndMarker() -> addStartAndEndMarker
    204:220:void zoomToSpan() -> zoomToSpan
    224:227:com.sfmap.api.maps.model.LatLngBounds getLatLngBounds() -> getLatLngBounds
    238:249:void setNodeIconVisibility(boolean) -> setNodeIconVisibility
    257:264:void addStationMarker(com.sfmap.api.maps.model.MarkerOptions) -> addStationMarker
    272:279:void addPolyLine(com.sfmap.api.maps.model.PolylineOptions) -> addPolyLine
    287:287:float getRouteWidth() -> getRouteWidth
    296:296:int getWalkColor() -> getWalkColor
    304:304:int getBusColor() -> getBusColor
    312:312:int getDriveColor() -> getDriveColor
com.sfmap.api.maps.overlay.WalkRouteOverlay -> com.sfmap.api.maps.overlay.WalkRouteOverlay:
    com.sfmap.api.services.route.WalkPath walkPath -> a
    32:37:void <init>(android.content.Context,com.sfmap.api.maps.MapController,com.sfmap.api.services.route.WalkPath,com.sfmap.api.services.core.LatLonPoint,com.sfmap.api.services.core.LatLonPoint) -> <init>
    46:72:void addToMap() -> addToMap
    76:81:void a(com.sfmap.api.services.route.WalkStep,com.sfmap.api.services.route.WalkStep) -> a
    85:85:com.sfmap.api.services.core.LatLonPoint a(com.sfmap.api.services.route.WalkStep) -> a
    90:90:com.sfmap.api.services.core.LatLonPoint b(com.sfmap.api.services.route.WalkStep) -> b
    95:96:void a(com.sfmap.api.services.core.LatLonPoint,com.sfmap.api.services.core.LatLonPoint) -> a
    100:103:void addPolyLine(com.sfmap.api.maps.model.LatLng,com.sfmap.api.maps.model.LatLng) -> a
    107:111:void c(com.sfmap.api.services.route.WalkStep) -> c
    115:121:void a(com.sfmap.api.services.route.WalkStep,com.sfmap.api.maps.model.LatLng) -> a
    17:17:void setNodeIconVisibility(boolean) -> setNodeIconVisibility
    17:17:void zoomToSpan() -> zoomToSpan
    17:17:void removeFromMap() -> removeFromMap
com.sfmap.map.api.R -> com.sfmap.map.api.R:
    void <init>() -> <init>
com.sfmap.mapcore.BaseMapCallImplement -> com.sfmap.mapcore.a:
    java.util.ArrayList roadReqMapGrids -> a
    java.util.ArrayList bldReqMapGrids -> b
    java.util.ArrayList regionReqMapGrids -> c
    java.util.ArrayList poiReqMapGrids -> d
    java.util.ArrayList versionMapGrids -> e
    java.util.ArrayList indoorMapGrids -> j
    java.util.ArrayList vectmcReqMapGirds -> k
    java.util.ArrayList stiReqMapGirds -> l
    java.util.ArrayList curRoadMapGrids -> m
    java.util.ArrayList curBldMapGrids -> n
    java.util.ArrayList curRegionMapGrids -> o
    java.util.ArrayList curPoiMapGrids -> p
    java.util.ArrayList curVectmcMapGirds -> q
    java.util.ArrayList curStiMapGirds -> r
    java.util.ArrayList curScreenGirds -> s
    java.util.ArrayList curIndoorMapGirds -> t
    java.util.ArrayList curStreetViewGirds -> u
    java.util.ArrayList curBmpMapGirds -> v
    com.sfmap.mapcore.ConnectionManager connectionManager -> f
    com.sfmap.mapcore.TileProcessController tileProcessCtrl -> g
    com.sfmap.mapcore.TextTextureGenerator textTextureGenerator -> h
    java.lang.Object mapGridFillLock -> i
    9:32:void <init>() -> <init>
    35:61:void OnMapDataRequired(com.sfmap.mapcore.MapCore,int,java.lang.String[]) -> a
    64:64:void OnMapProcessEvent(com.sfmap.mapcore.MapCore) -> a
    67:100:java.util.ArrayList getReqGridList(int) -> a
    104:123:void OnMapSurfaceRenderer(javax.microedition.khronos.opengles.GL10,com.sfmap.mapcore.MapCore,int) -> a
    126:153:java.util.ArrayList getCurGridList(int) -> b
    158:181:boolean isGridsInScreen(java.util.ArrayList,int) -> a
    186:200:boolean isGridInScreen(int,java.lang.String) -> a
    204:209:boolean isGridInList(java.lang.String,java.util.ArrayList) -> a
    214:261:void proccessRequiredData(com.sfmap.mapcore.MapCore,java.util.ArrayList,int) -> a
    264:264:void OnMapSurfaceCreate(com.sfmap.mapcore.MapCore) -> c
    268:279:void onPause() -> d
    283:289:void onResume(com.sfmap.mapcore.MapCore) -> d
    293:297:void OnMapDestory(com.sfmap.mapcore.MapCore) -> e
    300:303:byte[] OnMapCharsWidthsRequired(com.sfmap.mapcore.MapCore,int[],int,int) -> a
    307:321:void OnMapLabelsRequired(com.sfmap.mapcore.MapCore,int[],int) -> a
    331:349:void destoryMap(com.sfmap.mapcore.MapCore) -> f
com.sfmap.mapcore.BaseMapLoader -> com.sfmap.mapcore.b:
    java.lang.String TAG -> r
    com.sfmap.mapcore.MapCore mapCore -> a
    com.sfmap.mapcore.BaseMapCallImplement mMapCallback -> b
    java.util.ArrayList mapTiles -> c
    long createtime -> d
    byte[] recievedDataBuffer -> e
    byte[] recievedDataBufferBackup -> f
    int recievedDataSize -> g
    int receivedDataSizeBackup -> h
    int nextImgDataLength -> i
    boolean recievedHeader -> j
    int mCapaticy -> k
    int mCapaticyExt -> l
    boolean inRequest -> m
    boolean isFinished -> n
    boolean mCanceled -> o
    int datasource -> p
    java.net.HttpURLConnection httpURLConnection -> q
    32:65:void <init>() -> <init>
    java.lang.String getGridParma() -> a
    boolean isRequestValid() -> b
    java.lang.String getMapAddress() -> c
    boolean processReceivedDataHeader(int) -> a
    boolean isNeedProcessReturn() -> d
    void processRecivedVersionOrScenicWidgetData() -> e
    void processRecivedDataByType() -> f
    java.lang.String getUserGridURL(java.lang.String) -> a
    86:114:void processReceivedTileDataV4(byte[],int,int) -> a
    130:130:void privteTestTime(java.lang.String,java.lang.String) -> a
    133:142:boolean isAssic(java.lang.String) -> b
    146:149:boolean containllegal(java.lang.String) -> c
    153:171:void OnException(int) -> b
    174:174:boolean hasFinished() -> g
    178:193:void doCancel() -> h
    197:208:void onConnectionOver() -> n
    211:386:void doRequest() -> i
    390:391:void postMapMsgEventBus(java.lang.String) -> d
    394:398:void disConnectHttpConnection() -> o
    401:481:void doGridRequest() -> j
    487:491:void onConnectionOpened() -> k
    494:495:void addReuqestTiles(com.sfmap.mapcore.MapSourceGridData) -> a
    500:539:void onRecieveData(byte[],byte[],java.lang.String) -> a
    542:587:void onConnectionRecieveData(byte[],int) -> a
    590:626:void processRecivedData() -> l
    629:644:void processReceivedDataV4() -> m
    647:674:void processRecivedTileData(byte[],int,int) -> b
    677:722:void processRecivedVersionData(byte[],int,int) -> c
com.sfmap.mapcore.CacheData -> com.sfmap.mapcore.c:
    byte[] mapData -> a
    java.lang.String b -> b
    int createTime -> c
    java.lang.String d -> d
    int e -> e
    12:35:void <init>(byte[]) -> <init>
    39:52:void a(int) -> a
com.sfmap.mapcore.ConnectionManager -> com.sfmap.mapcore.d:
    boolean threadFlag -> a
    com.sfmap.mapcore.MapCore mGLMapEngine -> b
    java.util.concurrent.ExecutorService threadPool -> d
    java.util.ArrayList threadPoolList -> e
    java.util.ArrayList connPool -> f
    15:23:void <init>(com.sfmap.mapcore.MapCore) -> <init>
    26:29:void shutDown() -> a
    32:36:void insertConntionTask(com.sfmap.mapcore.BaseMapLoader) -> a
    51:64:void checkListPool() -> d
    68:74:void run() -> run
    77:109:void doAsyncRequest() -> e
com.sfmap.mapcore.ConnectionManager$LoadTask -> com.sfmap.mapcore.d$a:
    com.sfmap.mapcore.BaseMapLoader mapLoader -> a
    com.sfmap.mapcore.ConnectionManager this$0 -> b
    112:116:void <init>(com.sfmap.mapcore.ConnectionManager,com.sfmap.mapcore.BaseMapLoader) -> <init>
    120:128:void run() -> run
com.sfmap.mapcore.Convert -> com.sfmap.mapcore.e:
    11:16:int getInt(byte[],int) -> a
    21:24:short getShort(byte[],int) -> b
    63:68:byte[] convertInt(int) -> a
    100:102:void writeInt(byte[],int,int) -> a
    112:115:void moveArray(byte[],int,byte[],int,int) -> a
com.sfmap.mapcore.DPoint -> com.sfmap.mapcore.DPoint:
    double x -> x
    double y -> y
    8:8:void <init>() -> <init>
    11:14:void <init>(double,double) -> <init>
com.sfmap.mapcore.DeviceIdManager -> com.sfmap.mapcore.f:
    28:40:byte[] getProductSN(java.lang.String) -> a
    43:58:void saveDeviceID(java.lang.String,java.lang.String) -> a
    68:101:java.lang.String getDeviceID(android.content.Context) -> a
    106:130:java.lang.String getCPUSerial() -> b
    138:165:int[] getMMCList() -> a
    169:209:java.lang.String getMMCType(int) -> b
    219:260:java.lang.String getSDCardCID(int) -> c
    21:21:java.lang.String access$000(int) -> a
com.sfmap.mapcore.DeviceIdManager$1 -> com.sfmap.mapcore.f$1:
    139:139:void <init>() -> <init>
    141:154:boolean accept(java.io.File) -> accept
com.sfmap.mapcore.DeviceIdManager$2 -> com.sfmap.mapcore.f$2:
    java.lang.String val$filter -> a
    176:176:void <init>(java.lang.String) -> <init>
    178:182:boolean accept(java.io.File) -> accept
com.sfmap.mapcore.DeviceIdManager$3 -> com.sfmap.mapcore.f$3:
    java.lang.String val$filter -> a
    226:226:void <init>(java.lang.String) -> <init>
    228:232:boolean accept(java.io.File) -> accept
com.sfmap.mapcore.ExceptionUtil -> com.sfmap.mapcore.g:
    13:14:void exceptionLogPrint(java.lang.Exception) -> a
com.sfmap.mapcore.FPoint -> com.sfmap.mapcore.FPoint:
    float x -> x
    float y -> y
    8:8:void <init>() -> <init>
    11:14:void <init>(float,float) -> <init>
    18:22:boolean equals(java.lang.Object) -> equals
com.sfmap.mapcore.FileUtil -> com.sfmap.mapcore.h:
    38:50:void deleteFile(java.io.File) -> a
    214:240:void writeDatasToFile(java.lang.String,byte[]) -> a
    246:265:byte[] readFileContents(java.lang.String) -> a
com.sfmap.mapcore.GLMapResManager -> com.sfmap.mapcore.i:
    boolean isBigIcon -> a
    com.sfmap.api.mapcore.MapDelegateImp mapDelegateImp -> b
    android.content.Context mContext -> c
    com.sfmap.mapcore.MapCore mMapCore -> d
    int mapStyleType -> e
    40:79:void <init>(com.sfmap.api.mapcore.MapDelegateImp,android.content.Context) -> <init>
    81:82:void updataStyleIcons(com.sfmap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile,int) -> a
    87:98:void setStyleDataForPath(java.lang.String,java.lang.String) -> a
    105:116:void setStyleData() -> a
    122:160:void setIconsData(boolean) -> a
    164:165:java.lang.String getBigIconName(java.lang.String) -> a
    172:222:java.lang.String getStyleName() -> b
    227:248:java.lang.String getIconName() -> c
    254:264:void setTrafficTexture(boolean) -> b
    268:299:void setBkTexture(boolean) -> c
    303:309:void setRoadGuideTexture(boolean) -> d
    312:313:void setOtherMapTexture(boolean) -> e
    317:335:void setTextureUtil(boolean,java.lang.String,int) -> a
    338:340:void setMapStyleType(int) -> a
    8:8:com.sfmap.mapcore.MapCore access$000(com.sfmap.mapcore.GLMapResManager) -> a
com.sfmap.mapcore.GLMapResManager$1 -> com.sfmap.mapcore.i$1:
    byte[] val$arrayOfByte3 -> a
    byte[] val$arrayOfByte4 -> b
    com.sfmap.mapcore.GLMapResManager this$0 -> c
    150:150:void <init>(com.sfmap.mapcore.GLMapResManager,byte[],byte[]) -> <init>
    153:157:void run() -> run
com.sfmap.mapcore.GLMapResManager$2 -> com.sfmap.mapcore.i$2:
    byte[] val$finalbackgroundBytes -> a
    byte[] val$finaltopcoverBytes -> b
    com.sfmap.mapcore.GLMapResManager this$0 -> c
    291:291:void <init>(com.sfmap.mapcore.GLMapResManager,byte[],byte[]) -> <init>
    294:296:void run() -> run
com.sfmap.mapcore.GLMapResManager$3 -> com.sfmap.mapcore.i$3:
    byte[] val$fTextureBytes -> a
    int val$fTextureId -> b
    com.sfmap.mapcore.GLMapResManager this$0 -> c
    328:328:void <init>(com.sfmap.mapcore.GLMapResManager,byte[],int) -> <init>
    331:332:void run() -> run
com.sfmap.mapcore.GLMapResManager$MapViewMode -> com.sfmap.mapcore.i$a:
    com.sfmap.mapcore.GLMapResManager$MapViewMode NORAML -> a
    com.sfmap.mapcore.GLMapResManager$MapViewMode SATELLITE -> b
    com.sfmap.mapcore.GLMapResManager$MapViewMode BUS -> c
    com.sfmap.mapcore.GLMapResManager$MapViewMode STREETVIEW -> d
    com.sfmap.mapcore.GLMapResManager$MapViewMode[] $VALUES -> e
    19:19:com.sfmap.mapcore.GLMapResManager$MapViewMode[] values() -> values
    19:19:com.sfmap.mapcore.GLMapResManager$MapViewMode valueOf(java.lang.String) -> valueOf
    23:23:void <init>(java.lang.String,int) -> <init>
    19:21:void <clinit>() -> <clinit>
com.sfmap.mapcore.GLMapResManager$MapViewModeState -> com.sfmap.mapcore.i$b:
    com.sfmap.mapcore.GLMapResManager$MapViewModeState NORMAL -> a
    com.sfmap.mapcore.GLMapResManager$MapViewModeState PREVIEW_CAR -> b
    com.sfmap.mapcore.GLMapResManager$MapViewModeState PREVIEW_BUS -> c
    com.sfmap.mapcore.GLMapResManager$MapViewModeState PREVIEW_FOOT -> d
    com.sfmap.mapcore.GLMapResManager$MapViewModeState NAVI_CAR -> e
    com.sfmap.mapcore.GLMapResManager$MapViewModeState NAVI_BUS -> f
    com.sfmap.mapcore.GLMapResManager$MapViewModeState NAVI_FOOT -> g
    com.sfmap.mapcore.GLMapResManager$MapViewModeState[] $VALUES -> h
    33:33:com.sfmap.mapcore.GLMapResManager$MapViewModeState[] values() -> values
    33:33:com.sfmap.mapcore.GLMapResManager$MapViewModeState valueOf(java.lang.String) -> valueOf
    37:37:void <init>(java.lang.String,int) -> <init>
    33:35:void <clinit>() -> <clinit>
com.sfmap.mapcore.GLMapResManager$MapViewTime -> com.sfmap.mapcore.i$c:
    com.sfmap.mapcore.GLMapResManager$MapViewTime DAY -> a
    com.sfmap.mapcore.GLMapResManager$MapViewTime NIGHT -> b
    com.sfmap.mapcore.GLMapResManager$MapViewTime[] $VALUES -> c
    26:26:com.sfmap.mapcore.GLMapResManager$MapViewTime[] values() -> values
    26:26:com.sfmap.mapcore.GLMapResManager$MapViewTime valueOf(java.lang.String) -> valueOf
    30:30:void <init>(java.lang.String,int) -> <init>
    26:28:void <clinit>() -> <clinit>
com.sfmap.mapcore.IBaseMapCallback -> com.sfmap.mapcore.j:
    boolean isMapEngineValid() -> b
    java.lang.String getMapSvrAddress() -> a
    java.lang.String getUserGridURL(java.lang.String) -> a
com.sfmap.mapcore.IMapCallback -> com.sfmap.mapcore.k:
    void OnMapSurfaceCreate(javax.microedition.khronos.opengles.GL10,com.sfmap.mapcore.MapCore) -> a
    void OnMapSurfaceRenderer(javax.microedition.khronos.opengles.GL10,com.sfmap.mapcore.MapCore,int) -> a
    void OnMapSufaceChanged(javax.microedition.khronos.opengles.GL10,com.sfmap.mapcore.MapCore,int,int) -> a
    void OnMapProcessEvent(com.sfmap.mapcore.MapCore) -> a
    void OnMapDestory(javax.microedition.khronos.opengles.GL10,com.sfmap.mapcore.MapCore) -> b
    void OnMapDataRequired(com.sfmap.mapcore.MapCore,int,java.lang.String[]) -> a
    void OnMapLabelsRequired(com.sfmap.mapcore.MapCore,int[],int) -> a
    byte[] OnMapCharsWidthsRequired(com.sfmap.mapcore.MapCore,int[],int,int) -> a
    void OnMapReferencechanged(com.sfmap.mapcore.MapCore,java.lang.String,java.lang.String) -> a
    void requestRender() -> c
    void onIndoorBuildingActivity(com.sfmap.mapcore.MapCore,byte[]) -> a
    void onIndoorDataRequired(com.sfmap.mapcore.MapCore,int,java.lang.String[],int[],int[]) -> a
com.sfmap.mapcore.IPoint -> com.sfmap.mapcore.IPoint:
    int x -> x
    int y -> y
    8:8:void <init>() -> <init>
    11:14:void <init>(int,int) -> <init>
    18:27:java.lang.Object clone() -> clone
com.sfmap.mapcore.MapCore -> com.sfmap.mapcore.MapCore:
    int TEXTURE_ICON -> TEXTURE_ICON
    int TEXTURE_BACKGROUND -> TEXTURE_BACKGROUND
    int TEXTURE_ROADARROW -> TEXTURE_ROADARROW
    int TEXTURE_ROADROUND -> TEXTURE_ROADROUND
    int TEXTURE_TMC_RED -> TEXTURE_TMC_RED
    int TEXTURE_TMC_YELLOW -> TEXTURE_TMC_YELLOW
    int TEXTURE_TMC_GREEN -> TEXTURE_TMC_GREEN
    int TEXTURE_TMC_BLACK -> TEXTURE_TMC_BLACK
    int TEXTURE_RAILWAY -> TEXTURE_RAILWAY
    int ME_DATA_ROADMAP -> ME_DATA_ROADMAP
    int ME_DATA_GEO_BUILDING -> ME_DATA_GEO_BUILDING
    int ME_DATA_BMP_BASEMAP -> ME_DATA_BMP_BASEMAP
    int ME_DATA_SATELLITE -> ME_DATA_SATELLITE
    int ME_DATA_VEC_TMC -> ME_DATA_VEC_TMC
    int ME_DATA_SCREEN -> ME_DATA_SCREEN
    int ME_DATA_MODEL -> ME_DATA_MODEL
    int ME_DATA_STANDARD -> ME_DATA_STANDARD
    int ME_DATA_POI -> ME_DATA_POI
    int ME_DATA_VERSION -> ME_DATA_VERSION
    int ME_DATA_INDOOR -> ME_DATA_INDOOR
    int ME_DATA_PANORAMA -> ME_DATA_PANORAMA
    int ME_DATA_GUIDE -> ME_DATA_GUIDE
    int ME_DATA_TILE_SOURCE -> ME_DATA_TILE_SOURCE
    int ME_DATA_SCENIC_WIDGET -> ME_DATA_SCENIC_WIDGET
    int MAPRENDER_ENTER -> MAPRENDER_ENTER
    int MAPRENDER_BASEMAPBEGIN -> MAPRENDER_BASEMAPBEGIN
    int MAPRENDER_BUILDINGBEGIN -> MAPRENDER_BUILDINGBEGIN
    int MAPRENDER_LABELSBEGIN -> MAPRENDER_LABELSBEGIN
    int MAPRENDER_RENDEROVER -> MAPRENDER_RENDEROVER
    int MAPRENDER_NOMORENEEDRENDER -> MAPRENDER_NOMORENEEDRENDER
    android.content.Context mContext -> a
    com.sfmap.mapcore.IMapCallback mMapcallback -> mMapcallback
    com.sfmap.mapcore.TextTextureGenerator textTextureGenerator -> textTextureGenerator
    long native_instance -> b
    javax.microedition.khronos.opengles.GL10 mGL -> c
    byte[] tmp_3072bytes_data -> d
    java.lang.String deviceID -> deviceID
    int coodSystem -> coodSystem
    49:74:void <init>(android.content.Context) -> <init>
    78:98:void newMap() -> newMap
    102:102:android.content.Context getContext() -> getContext
    107:108:void setGL(javax.microedition.khronos.opengles.GL10) -> setGL
    112:113:void setMapCallback(com.sfmap.mapcore.IMapCallback) -> setMapCallback
    117:117:boolean isMapEngineValid() -> isMapEngineValid
    122:125:void surfaceCreate(javax.microedition.khronos.opengles.GL10) -> surfaceCreate
    129:132:void surfaceChange(javax.microedition.khronos.opengles.GL10,int,int) -> surfaceChange
    136:139:void drawFrame(javax.microedition.khronos.opengles.GL10) -> drawFrame
    143:147:void setStyleData(byte[],int,int) -> setStyleData
    151:154:void setTexture(byte[],int) -> setTexture
    158:158:long getInstanceHandle() -> getInstanceHandle
    163:168:com.sfmap.mapcore.MapProjection getMapstate() -> getMapstate
    173:176:void setMapstate(com.sfmap.mapcore.MapProjection) -> setMapstate
    180:183:void setParameter(int,int,int,int,int) -> setParameter
    188:207:boolean putMapData(byte[],int,int,int,int) -> putMapData
    212:223:com.sfmap.mapcore.MapPoi GetSelectedMapPoi(int,int,int) -> GetSelectedMapPoi
    228:231:void putCharbitmap(int,byte[]) -> putCharbitmap
    235:238:boolean canStopRenderMap() -> canStopRenderMap
    243:246:void OnMapSurfaceCreate() -> OnMapSurfaceCreate
    250:253:void OnMapSufaceChanged(int,int) -> OnMapSufaceChanged
    257:260:void OnMapSurfaceRenderer(int) -> OnMapSurfaceRenderer
    264:267:void OnMapProcessEvent() -> OnMapProcessEvent
    271:274:void OnMapDestory() -> OnMapDestory
    278:278:void OnClearCache() -> OnClearCache
    282:291:void OnMapDataRequired(int,java.lang.String[]) -> OnMapDataRequired
    295:298:void OnMapLabelsRequired(int[],int) -> OnMapLabelsRequired
    302:305:byte[] OnMapCharsWidthsRequired(int[],int,int) -> OnMapCharsWidthsRequired
    310:313:void OnMapReferencechanged(java.lang.String,java.lang.String) -> OnMapReferencechanged
    317:324:void onIndoorBuildingActivity(byte[]) -> onIndoorBuildingActivity
    328:335:void onIndoorDataRequired(int,java.lang.String[],int[],int[]) -> onIndoorDataRequired
    337:341:boolean getAuthStatus() -> getAuthStatus
    347:355:void destroy() -> destroy
    359:393:void fillCurGridListWithDataType(java.util.ArrayList,int) -> fillCurGridListWithDataType
    395:395:java.lang.String GetDeviceID() -> GetDeviceID
    404:405:void quadKey2Tile(java.lang.String,com.sfmap.mapcore.Tile) -> quadKey2Tile
    long nativeNewInstance(java.lang.String,java.lang.String,int,byte[]) -> nativeNewInstance
    int nativeGetAuthStatus() -> nativeGetAuthStatus
    java.lang.String nativeGetVersion() -> nativeGetVersion
    void nativeDestroy(long) -> nativeDestroy
    void nativeSurfaceCreate(long,com.sfmap.mapcore.MapCore) -> nativeSurfaceCreate
    void nativeSurfaceChange(long,com.sfmap.mapcore.MapCore,int,int) -> nativeSurfaceChange
    void nativeSurfaceRender(long) -> nativeSurfaceRender
    void nativeSetMapState(long,long) -> nativeSetMapState
    long nativeGetMapState(long) -> nativeGetMapState
    int nativeGetSelectedMapPoi(long,int,int,int,com.sfmap.mapcore.MapPoi) -> nativeGetSelectedMapPoi
    int nativePutMapData(long,int,byte[]) -> nativePutMapData
    void nativePutCharBitmap(long,int,byte[]) -> nativePutCharBitmap
    void nativeGetScreenGrids(long,byte[],int) -> nativeGetScreenGrids
    void nativeSetTextureData(long,byte[],int) -> nativeSetTextureData
    void nativeSetStyleData(long,byte[],int,int) -> nativeSetStyleData
    boolean nativeCanStopRenderMap(long) -> nativeCanStopRenderMap
    void nativeSetParameter(long,int,int,int,int,int) -> nativeSetParameter
    void nativeQuadKey2Tile(java.lang.String,com.sfmap.mapcore.Tile,int) -> nativeQuadKey2Tile
    void nativeTile2QuadKey(com.sfmap.mapcore.Tile,java.lang.String,int) -> nativeTile2QuadKey
    int nativeAddLayer(long,int) -> nativeAddLayer
    int nativeRemoveLayer(long,int) -> nativeRemoveLayer
    54:63:void <clinit>() -> <clinit>
com.sfmap.mapcore.MapPoi -> com.sfmap.mapcore.MapPoi:
    int winx -> winx
    int winy -> winy
    int mapx -> mapx
    int mapy -> mapy
    int iconXmin -> iconXmin
    int iconXmax -> iconXmax
    int iconYmin -> iconYmin
    int iconYmax -> iconYmax
    java.lang.String name -> name
    java.lang.String poiid -> poiid
    3:3:void <init>() -> <init>
com.sfmap.mapcore.MapProjection -> com.sfmap.mapcore.MapProjection:
    long native_instance -> a
    boolean m_bNewInstance -> m_bNewInstance
    int coodSystem -> coodSystem
    9:16:void <init>(com.sfmap.mapcore.MapCore) -> <init>
    9:23:void <init>(long,int) -> <init>
    27:30:void recycle() -> recycle
    34:34:long getInstanceHandle() -> getInstanceHandle
    39:40:void getBound(com.sfmap.mapcore.IPoint) -> getBound
    45:46:void setGeoCenter(int,int) -> setGeoCenter
    50:51:void getGeoCenter(com.sfmap.mapcore.IPoint) -> getGeoCenter
    55:56:void setMapCenter(float,float) -> setMapCenter
    60:61:void getMapCenter(com.sfmap.mapcore.FPoint) -> getMapCenter
    66:73:void setMapZoomer(float) -> setMapZoomer
    77:77:float getMapZoomer() -> getMapZoomer
    82:83:void setMapAngle(float) -> setMapAngle
    87:87:float getMapAngle() -> getMapAngle
    92:93:void setCameraHeaderAngle(float) -> setCameraHeaderAngle
    97:97:float getCameraHeaderAngle() -> getCameraHeaderAngle
    102:103:void geo2Map(int,int,com.sfmap.mapcore.FPoint) -> geo2Map
    107:108:void map2Win(float,float,com.sfmap.mapcore.IPoint) -> map2Win
    112:113:void win2Map(int,int,com.sfmap.mapcore.FPoint) -> win2Map
    117:117:float getMapLenWithWinbyY(int,int) -> getMapLenWithWinbyY
    122:122:float getMapLenWithWin(int) -> getMapLenWithWin
    127:128:void map2Geo(float,float,com.sfmap.mapcore.IPoint) -> map2Geo
    132:133:void setCenterWithMap(float,float) -> setCenterWithMap
    137:138:void getCenterMap(com.sfmap.mapcore.FPoint) -> getCenterMap
    142:143:void lonlat2Geo(double,double,com.sfmap.mapcore.IPoint) -> lonlat2Geo
    147:148:void geo2LonLat(int,int,com.sfmap.mapcore.DPoint) -> geo2LonLat
    152:152:float getMapLenWithGeo(int) -> getMapLenWithGeo
    157:158:void recalculate() -> recalculate
    long nativeNewInstance(long) -> nativeNewInstance
    void nativeDestroy(long) -> nativeDestroy
    void nativeGetBound(long,com.sfmap.mapcore.IPoint) -> nativeGetBound
    void nativeSetGeoCenter(long,int,int) -> nativeSetGeoCenter
    void nativeGetGeoCenter(long,com.sfmap.mapcore.IPoint) -> nativeGetGeoCenter
    void nativeSetMapCenter(long,float,float) -> nativeSetMapCenter
    void nativeGetMapCenter(long,com.sfmap.mapcore.FPoint) -> nativeGetMapCenter
    void nativeSetMapZoomer(long,float) -> nativeSetMapZoomer
    float nativeGetMapZoomer(long) -> nativeGetMapZoomer
    void nativeSetMapAngle(long,float) -> nativeSetMapAngle
    float nativeGetMapAngle(long) -> nativeGetMapAngle
    void nativeSetCameraHeaderAngle(long,float) -> nativeSetCameraHeaderAngle
    float nativeGetCameraHeaderAngle(long) -> nativeGetCameraHeaderAngle
    void nativeGeo2Map(long,int,int,com.sfmap.mapcore.FPoint) -> nativeGeo2Map
    void nativeMap2Win(long,float,float,com.sfmap.mapcore.IPoint) -> nativeMap2Win
    void nativeWin2Map(long,int,int,com.sfmap.mapcore.FPoint) -> nativeWin2Map
    float nativeGetMapLenWithWinbyY(long,int,int) -> nativeGetMapLenWithWinbyY
    float nativeGetMapLenWithWin(long,int) -> nativeGetMapLenWithWin
    void nativeMap2Geo(long,float,float,com.sfmap.mapcore.IPoint) -> nativeMap2Geo
    void nativeSetCenterWithMap(long,float,float) -> nativeSetCenterWithMap
    void nativeGetCenterMap(long,com.sfmap.mapcore.FPoint) -> nativeGetCenterMap
    void nativeLonLat2Geo(double,double,int,com.sfmap.mapcore.IPoint) -> nativeLonLat2Geo
    void nativeGeo2LonLat(int,int,int,com.sfmap.mapcore.DPoint) -> nativeGeo2LonLat
    float nativeGetMapLenWithGeo(long,int) -> nativeGetMapLenWithGeo
    void nativeRecalculate(long) -> nativeRecalculate
    11:11:void <clinit>() -> <clinit>
com.sfmap.mapcore.MapSourceGridData -> com.sfmap.mapcore.l:
    java.lang.String gridName -> a
    int sourceType -> b
    java.lang.Object obj -> c
    java.lang.String keyGridName -> d
    int mIndoorIndex -> e
    int mIndoorVersion -> f
    7:17:void <init>(java.lang.String,int) -> <init>
    7:26:void <init>(java.lang.String,int,int,int) -> <init>
    30:30:java.lang.String getKeyGridName() -> a
    40:40:java.lang.String getGridName() -> b
com.sfmap.mapcore.MapTilsCacheAndResManager -> com.sfmap.mapcore.m:
    5:5:void <init>() -> <init>
    12:12:com.sfmap.mapcore.MapTilsCacheAndResManager getInstance(android.content.Context) -> a
    void checkDir() -> a
    java.lang.String getBaseMapPath() -> b
    byte[] getStyleData(java.lang.String,com.sfmap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile) -> a
    byte[] getIconsData(java.lang.String,com.sfmap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile) -> b
    byte[] getOtherResData(java.lang.String) -> a
    byte[] getStyleDataForPath(java.lang.String) -> b
    void saveFile(java.lang.String,int,int,byte[]) -> a
com.sfmap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile -> com.sfmap.mapcore.m$a:
    java.lang.String fullName -> a
    java.lang.String name -> b
    int serverVersion -> c
    int clientVersion -> d
    40:40:void <init>() -> <init>
com.sfmap.mapcore.MapTilsCacheAndResManagerImpl -> com.sfmap.mapcore.n:
    com.sfmap.mapcore.MapTilsCacheAndResManagerImpl instance -> a
    android.content.Context mContext -> b
    java.lang.String mMapBaseDataPath -> c
    java.lang.String mMapOfflinePath -> d
    java.lang.String mCachePath -> e
    java.lang.String mMapOnlineTilesPath -> f
    java.lang.String mMapExtResPath -> g
    26:29:com.sfmap.mapcore.MapTilsCacheAndResManagerImpl instance(android.content.Context) -> b
    33:36:void <init>(android.content.Context) -> <init>
    45:45:java.lang.String getBaseMapPath() -> b
    72:75:byte[] getStyleData(java.lang.String,com.sfmap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile) -> a
    82:85:byte[] getIconsData(java.lang.String,com.sfmap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile) -> b
    90:90:byte[] getOtherResData(java.lang.String) -> a
    97:100:void init() -> c
    106:145:void initRelease() -> d
    151:171:void saveFile(java.lang.String,int,int,byte[]) -> a
    176:176:java.lang.String getFilePreName(java.lang.String) -> c
    183:196:void setRetFile(com.sfmap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile,java.lang.String) -> a
    202:246:byte[] getStyleIconsData(java.lang.String,int,com.sfmap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile) -> a
    251:256:byte[] getStyleDataForPath(java.lang.String) -> b
    282:283:void checkDir() -> a
    14:14:void <clinit>() -> <clinit>
com.sfmap.mapcore.Md5Utility -> com.sfmap.mapcore.o:
    114:132:java.lang.String getByteArrayMD5(byte[]) -> a
com.sfmap.mapcore.NativeLineRenderer -> com.sfmap.mapcore.NativeLineRenderer:
    3:3:void <init>() -> <init>
    int nativeDrawLineByTextureID(int[],int,long,float,float,int,int,boolean,boolean) -> nativeDrawLineByTextureID
    int nativeDrawArrowLine(int[],int,long,float,int,int) -> nativeDrawArrowLine
    void nativeDrawLineByMultiTextureID(float[],int,float,int[],int,int[],int,float) -> nativeDrawLineByMultiTextureID
    void nativeDrawLineByMultiColor(float[],int,float,int,int[],int,int[],int) -> nativeDrawLineByMultiColor
    void nativeDrawGradientColorLine(float[],int,float,int[],int,int[],int,int) -> nativeDrawGradientColorLine
com.sfmap.mapcore.NormalMapLoader -> com.sfmap.mapcore.p:
    11:16:void <init>(com.sfmap.mapcore.MapCore,com.sfmap.mapcore.BaseMapCallImplement,int) -> <init>
    20:100:java.lang.String getGridParmaV4() -> n
    105:106:java.lang.String getUserGridURL(java.lang.String) -> a
    111:111:java.lang.String getGridParma() -> a
    121:121:java.lang.String getMapAddress() -> c
    126:126:boolean isRequestValid() -> b
    131:138:void processRecivedVersionOrScenicWidgetData() -> e
    142:148:void processRecivedDataByType() -> f
    152:181:boolean processReceivedDataHeader(int) -> a
    186:189:boolean isNeedProcessReturn() -> d
    194:205:void processRecivedTileData(byte[],int,int) -> b
    209:232:void processRecivedTileDataBmp(byte[],int,int) -> d
    236:270:void processRecivedTileDataVTmc(byte[],int,int) -> e
    274:292:void processRecivedModels(byte[],int,int) -> f
    302:359:void processRecivedVersionData(byte[],int,int) -> c
com.sfmap.mapcore.ResUtil -> com.sfmap.mapcore.q:
    92:117:byte[] decodeAssetResData(android.content.Context,java.lang.String) -> a
com.sfmap.mapcore.SingalThread -> com.sfmap.mapcore.r:
    java.util.concurrent.locks.Lock mLock -> a
    java.util.concurrent.locks.Condition mWaiting -> b
    boolean isWaiting -> d
    java.lang.String logTag -> c
    7:11:void <init>() -> <init>
    14:20:void doWait() -> b
    23:30:void doAwake() -> c
com.sfmap.mapcore.TextTextureGenerator -> com.sfmap.mapcore.s:
    float base_line -> a
    float start_x -> b
    android.graphics.Paint text_paint -> c
    22:48:void <init>() -> <init>
    54:88:byte[] getTextPixelBuffer(int) -> a
    93:102:byte[] getCharsWidths(int[]) -> a
    107:129:android.graphics.Paint newPaint(java.lang.String,int,int) -> a
    176:178:java.lang.String getFontVersion() -> a
com.sfmap.mapcore.Tile -> com.sfmap.mapcore.Tile:
    int x -> x
    int y -> y
    int level -> level
    6:6:void <init>() -> <init>
com.sfmap.mapcore.TileCacheEntry -> com.sfmap.mapcore.t:
    java.lang.String key -> a
    int value -> b
    9:12:void <init>(java.lang.String,int) -> <init>
com.sfmap.mapcore.TileProcessController -> com.sfmap.mapcore.u:
    java.util.Hashtable hashTable -> b
    long initTimestamp -> a
    12:13:void remove(java.lang.String) -> a
    17:17:boolean hasKey(java.lang.String) -> b
    22:23:void put(java.lang.String) -> c
    27:28:void clear() -> a
    7:33:void <init>() -> <init>
com.sfmap.mapcore.VMapDataCache -> com.sfmap.mapcore.v:
    java.util.HashMap vMapDataHs -> a
    java.util.ArrayList vMapDataList -> b
    java.util.HashMap vCancelMapDataHs -> c
    java.util.ArrayList vCancelMapDataList -> d
    com.sfmap.mapcore.VMapDataCache instance -> e
    7:13:void <init>() -> <init>
    18:21:com.sfmap.mapcore.VMapDataCache getInstance() -> a
    26:32:void reset() -> b
    41:41:java.lang.String getKey(java.lang.String,int) -> a
    46:51:com.sfmap.mapcore.e getRecoder(java.lang.String,int) -> b
    68:82:com.sfmap.mapcore.e putRecoder(byte[],java.lang.String,int) -> a
com.sfmap.mapcore.VTMCDataCache -> com.sfmap.mapcore.w:
    java.util.Hashtable vtmcHs -> a
    java.util.ArrayList vtmcList -> b
    com.sfmap.mapcore.VTMCDataCache instance -> d
    int mNewestTimeStamp -> c
    6:13:void <init>() -> <init>
    17:20:com.sfmap.mapcore.VTMCDataCache getInstance() -> a
    36:45:void deleteData(java.lang.String) -> a
    49:63:com.sfmap.mapcore.CacheData getData(java.lang.String,boolean) -> a
    68:90:com.sfmap.mapcore.CacheData putData(byte[]) -> a
    10:11:void <clinit>() -> <clinit>
com.sfmap.mapcore.e -> com.sfmap.mapcore.x:
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
    8:25:void <init>(java.lang.String,int) -> <init>
com.sfmap.search.R -> com.sfmap.search.R:
    void <init>() -> <init>
