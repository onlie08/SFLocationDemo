
apply plugin: 'com.android.library'
// 打包时间
static def buildTime() {
    return new Date().format("yyMMdd")
}
android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 2
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //忽略引用包中的错误
    lintOptions {
        abortOnError false
    }
    productFlavors {
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
}

task clearJar(type: Delete) {
    delete 'build/outputs/jar/searchsdk.zip'
}
//拷贝本工程包
task makeSearch(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build/outputs/jar/')
    exclude('test/', 'BuildConfig.class', 'R.class')
    include('classes.jar')
    rename ('classes.jar', 'sfmap_SearchSDK_V1.7.0_'+buildTime()+'.jar')
}
//解压缩jar
task unzipclass(type:Copy){
    //from zipTree('build/outputs/jar/locCore.zip')
    from zipTree('build/outputs/jar/searchsdk.zip')
    into("build/outputs/class/")
}

//重新打包
task makeJar(type:org.gradle.api.tasks.bundling.Jar) {
    //指定生成的jar名
    baseName 'search_sdk1.0.1'
    //从哪里打包class文件
    from('build/outputs/class/')
    //打包到jar后的目录结构
    into('/')
    //去掉不需要打包的目录和文件
    exclude('test/', 'com/sfmap/BuildConfig.class', 'R.class')
    //去掉R$开头的文件
    exclude{ it.name.startsWith('R$');}
}
makeSearch.dependsOn(clearJar,build)